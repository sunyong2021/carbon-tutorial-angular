import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var SnowflakeComponent = /** @class */ (function () {
    function SnowflakeComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SnowflakeComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SnowflakeComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeComponent.prototype, "size", void 0);
SnowflakeComponent.ɵfac = function SnowflakeComponent_Factory(t) { return new (t || SnowflakeComponent)(); };
SnowflakeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SnowflakeComponent, selectors: [["ibm-icon-snowflake"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconSnowflake", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function SnowflakeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [SnowflakeDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SnowflakeComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-snowflake",
                template: "\n    <svg\n      ibmIconSnowflake\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return SnowflakeComponent;
}());
var SnowflakeDirective = /** @class */ (function () {
    function SnowflakeDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Snowflake32", "filepath": "snowflake/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z" } }], "name": "snowflake", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Snowflake24", "filepath": "snowflake/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z" } }], "name": "snowflake", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Snowflake20", "filepath": "snowflake/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z" } }], "name": "snowflake", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Snowflake16", "filepath": "snowflake/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z" } }], "name": "snowflake", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21.4148,12H28V10H23.4148l4.5857-4.5854L26.5864,4,22,8.5869V4H20v6.5869L18.5867,12H17V8H15v4H13.4133L12,10.5869V4H10V8.5869L5.4136,4,4,5.4146,8.5852,10H4v2h6.5852L12,13.415V15H8v2h4v1.5869L10.5867,20H4v2H8.5867L4,26.5864l1.4141,1.4141L10,23.415V28h2V21.415L13.4148,20H15v4h2V20h1.5852L20,21.415V28h2V23.415l4.5854,4.5855L28,26.5864,23.4133,22H28V20H21.4133L20,18.5869V17h4V15H20V13.415ZM18,18H14V14h4Z\"></path></svg>"
            },
        };
    }
    SnowflakeDirective_1 = SnowflakeDirective;
    SnowflakeDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            SnowflakeDirective_1.titleIdCounter++;
            title.setAttribute("id", "snowflake-" + SnowflakeDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "snowflake-" + SnowflakeDirective_1.titleIdCounter);
        }
    };
    var SnowflakeDirective_1;
    SnowflakeDirective.titleIdCounter = 0;
    SnowflakeDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SnowflakeDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SnowflakeDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SnowflakeDirective.prototype, "size", void 0);
    SnowflakeDirective = SnowflakeDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], SnowflakeDirective);
SnowflakeDirective.ɵfac = function SnowflakeDirective_Factory(t) { return new (t || SnowflakeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SnowflakeDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SnowflakeDirective, selectors: [["", "ibmIconSnowflake", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SnowflakeDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconSnowflake]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return SnowflakeDirective;
}());
var SnowflakeModule = /** @class */ (function () {
    function SnowflakeModule() {
    }
SnowflakeModule.ɵfac = function SnowflakeModule_Factory(t) { return new (t || SnowflakeModule)(); };
SnowflakeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SnowflakeModule });
SnowflakeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SnowflakeModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SnowflakeComponent,
                    SnowflakeDirective,
                ],
                exports: [
                    SnowflakeComponent,
                    SnowflakeDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SnowflakeModule, { declarations: [SnowflakeComponent, SnowflakeDirective], exports: [SnowflakeComponent, SnowflakeDirective] }); })();
    return SnowflakeModule;
}());

export { SnowflakeComponent, SnowflakeDirective, SnowflakeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic25vd2ZsYWtlLmpzIiwic291cmNlcyI6WyJzbm93Zmxha2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7OztrT0FZd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIFNub3dmbGFrZUNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTbm93Zmxha2VDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFNub3dmbGFrZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU25vd2ZsYWtlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBTbm93Zmxha2VDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBTbm93Zmxha2VDb21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFNub3dmbGFrZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU25vd2ZsYWtlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU25vd2ZsYWtlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgU25vd2ZsYWtlQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1zbm93Zmxha2VcIixcbiAgICAgICAgICAgIHRlbXBsYXRlOiBcIlxcbiAgICA8c3ZnXFxuICAgICAgaWJtSWNvblNub3dmbGFrZVxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIFNub3dmbGFrZUNvbXBvbmVudCk7XG4gICAgcmV0dXJuIFNub3dmbGFrZUNvbXBvbmVudDtcbn0oKSk7XG52YXIgU25vd2ZsYWtlRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNub3dmbGFrZURpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlNub3dmbGFrZTMyXCIsIFwiZmlsZXBhdGhcIjogXCJzbm93Zmxha2UvMzIuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDMyLCBcImhlaWdodFwiOiAzMiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIxLjQxNDgsMTJIMjhWMTBIMjMuNDE0OGw0LjU4NTctNC41ODU0TDI2LjU4NjQsNCwyMiw4LjU4NjlWNEgyMHY2LjU4NjlMMTguNTg2NywxMkgxN1Y4SDE1djRIMTMuNDEzM0wxMiwxMC41ODY5VjRIMTBWOC41ODY5TDUuNDEzNiw0LDQsNS40MTQ2LDguNTg1MiwxMEg0djJoNi41ODUyTDEyLDEzLjQxNVYxNUg4djJoNHYxLjU4NjlMMTAuNTg2NywyMEg0djJIOC41ODY3TDQsMjYuNTg2NGwxLjQxNDEsMS40MTQxTDEwLDIzLjQxNVYyOGgyVjIxLjQxNUwxMy40MTQ4LDIwSDE1djRoMlYyMGgxLjU4NTJMMjAsMjEuNDE1VjI4aDJWMjMuNDE1bDQuNTg1NCw0LjU4NTVMMjgsMjYuNTg2NCwyMy40MTMzLDIySDI4VjIwSDIxLjQxMzNMMjAsMTguNTg2OVYxN2g0VjE1SDIwVjEzLjQxNVpNMTgsMThIMTRWMTRoNFpcIiB9IH1dLCBcIm5hbWVcIjogXCJzbm93Zmxha2VcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMS40MTQ4LDEySDI4VjEwSDIzLjQxNDhsNC41ODU3LTQuNTg1NEwyNi41ODY0LDQsMjIsOC41ODY5VjRIMjB2Ni41ODY5TDE4LjU4NjcsMTJIMTdWOEgxNXY0SDEzLjQxMzNMMTIsMTAuNTg2OVY0SDEwVjguNTg2OUw1LjQxMzYsNCw0LDUuNDE0Niw4LjU4NTIsMTBINHYyaDYuNTg1MkwxMiwxMy40MTVWMTVIOHYyaDR2MS41ODY5TDEwLjU4NjcsMjBINHYySDguNTg2N0w0LDI2LjU4NjRsMS40MTQxLDEuNDE0MUwxMCwyMy40MTVWMjhoMlYyMS40MTVMMTMuNDE0OCwyMEgxNXY0aDJWMjBoMS41ODUyTDIwLDIxLjQxNVYyOGgyVjIzLjQxNWw0LjU4NTQsNC41ODU1TDI4LDI2LjU4NjQsMjMuNDEzMywyMkgyOFYyMEgyMS40MTMzTDIwLDE4LjU4NjlWMTdoNFYxNUgyMFYxMy40MTVaTTE4LDE4SDE0VjE0aDRaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJTbm93Zmxha2UyNFwiLCBcImZpbGVwYXRoXCI6IFwic25vd2ZsYWtlLzI0LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyNCwgXCJoZWlnaHRcIjogMjQgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMS40MTQ4LDEySDI4VjEwSDIzLjQxNDhsNC41ODU3LTQuNTg1NEwyNi41ODY0LDQsMjIsOC41ODY5VjRIMjB2Ni41ODY5TDE4LjU4NjcsMTJIMTdWOEgxNXY0SDEzLjQxMzNMMTIsMTAuNTg2OVY0SDEwVjguNTg2OUw1LjQxMzYsNCw0LDUuNDE0Niw4LjU4NTIsMTBINHYyaDYuNTg1MkwxMiwxMy40MTVWMTVIOHYyaDR2MS41ODY5TDEwLjU4NjcsMjBINHYySDguNTg2N0w0LDI2LjU4NjRsMS40MTQxLDEuNDE0MUwxMCwyMy40MTVWMjhoMlYyMS40MTVMMTMuNDE0OCwyMEgxNXY0aDJWMjBoMS41ODUyTDIwLDIxLjQxNVYyOGgyVjIzLjQxNWw0LjU4NTQsNC41ODU1TDI4LDI2LjU4NjQsMjMuNDEzMywyMkgyOFYyMEgyMS40MTMzTDIwLDE4LjU4NjlWMTdoNFYxNUgyMFYxMy40MTVaTTE4LDE4SDE0VjE0aDRaXCIgfSB9XSwgXCJuYW1lXCI6IFwic25vd2ZsYWtlXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjEuNDE0OCwxMkgyOFYxMEgyMy40MTQ4bDQuNTg1Ny00LjU4NTRMMjYuNTg2NCw0LDIyLDguNTg2OVY0SDIwdjYuNTg2OUwxOC41ODY3LDEySDE3VjhIMTV2NEgxMy40MTMzTDEyLDEwLjU4NjlWNEgxMFY4LjU4NjlMNS40MTM2LDQsNCw1LjQxNDYsOC41ODUyLDEwSDR2Mmg2LjU4NTJMMTIsMTMuNDE1VjE1SDh2Mmg0djEuNTg2OUwxMC41ODY3LDIwSDR2Mkg4LjU4NjdMNCwyNi41ODY0bDEuNDE0MSwxLjQxNDFMMTAsMjMuNDE1VjI4aDJWMjEuNDE1TDEzLjQxNDgsMjBIMTV2NGgyVjIwaDEuNTg1MkwyMCwyMS40MTVWMjhoMlYyMy40MTVsNC41ODU0LDQuNTg1NUwyOCwyNi41ODY0LDIzLjQxMzMsMjJIMjhWMjBIMjEuNDEzM0wyMCwxOC41ODY5VjE3aDRWMTVIMjBWMTMuNDE1Wk0xOCwxOEgxNFYxNGg0WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiU25vd2ZsYWtlMjBcIiwgXCJmaWxlcGF0aFwiOiBcInNub3dmbGFrZS8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNDE0OCwxMkgyOFYxMEgyMy40MTQ4bDQuNTg1Ny00LjU4NTRMMjYuNTg2NCw0LDIyLDguNTg2OVY0SDIwdjYuNTg2OUwxOC41ODY3LDEySDE3VjhIMTV2NEgxMy40MTMzTDEyLDEwLjU4NjlWNEgxMFY4LjU4NjlMNS40MTM2LDQsNCw1LjQxNDYsOC41ODUyLDEwSDR2Mmg2LjU4NTJMMTIsMTMuNDE1VjE1SDh2Mmg0djEuNTg2OUwxMC41ODY3LDIwSDR2Mkg4LjU4NjdMNCwyNi41ODY0bDEuNDE0MSwxLjQxNDFMMTAsMjMuNDE1VjI4aDJWMjEuNDE1TDEzLjQxNDgsMjBIMTV2NGgyVjIwaDEuNTg1MkwyMCwyMS40MTVWMjhoMlYyMy40MTVsNC41ODU0LDQuNTg1NUwyOCwyNi41ODY0LDIzLjQxMzMsMjJIMjhWMjBIMjEuNDEzM0wyMCwxOC41ODY5VjE3aDRWMTVIMjBWMTMuNDE1Wk0xOCwxOEgxNFYxNGg0WlwiIH0gfV0sIFwibmFtZVwiOiBcInNub3dmbGFrZVwiLCBcInNpemVcIjogMjAgfSwgXCJzaXplXCI6IDIwIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTIxLjQxNDgsMTJIMjhWMTBIMjMuNDE0OGw0LjU4NTctNC41ODU0TDI2LjU4NjQsNCwyMiw4LjU4NjlWNEgyMHY2LjU4NjlMMTguNTg2NywxMkgxN1Y4SDE1djRIMTMuNDEzM0wxMiwxMC41ODY5VjRIMTBWOC41ODY5TDUuNDEzNiw0LDQsNS40MTQ2LDguNTg1MiwxMEg0djJoNi41ODUyTDEyLDEzLjQxNVYxNUg4djJoNHYxLjU4NjlMMTAuNTg2NywyMEg0djJIOC41ODY3TDQsMjYuNTg2NGwxLjQxNDEsMS40MTQxTDEwLDIzLjQxNVYyOGgyVjIxLjQxNUwxMy40MTQ4LDIwSDE1djRoMlYyMGgxLjU4NTJMMjAsMjEuNDE1VjI4aDJWMjMuNDE1bDQuNTg1NCw0LjU4NTVMMjgsMjYuNTg2NCwyMy40MTMzLDIySDI4VjIwSDIxLjQxMzNMMjAsMTguNTg2OVYxN2g0VjE1SDIwVjEzLjQxNVpNMTgsMThIMTRWMTRoNFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlNub3dmbGFrZTE2XCIsIFwiZmlsZXBhdGhcIjogXCJzbm93Zmxha2UvMTYuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDE2LCBcImhlaWdodFwiOiAxNiB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIxLjQxNDgsMTJIMjhWMTBIMjMuNDE0OGw0LjU4NTctNC41ODU0TDI2LjU4NjQsNCwyMiw4LjU4NjlWNEgyMHY2LjU4NjlMMTguNTg2NywxMkgxN1Y4SDE1djRIMTMuNDEzM0wxMiwxMC41ODY5VjRIMTBWOC41ODY5TDUuNDEzNiw0LDQsNS40MTQ2LDguNTg1MiwxMEg0djJoNi41ODUyTDEyLDEzLjQxNVYxNUg4djJoNHYxLjU4NjlMMTAuNTg2NywyMEg0djJIOC41ODY3TDQsMjYuNTg2NGwxLjQxNDEsMS40MTQxTDEwLDIzLjQxNVYyOGgyVjIxLjQxNUwxMy40MTQ4LDIwSDE1djRoMlYyMGgxLjU4NTJMMjAsMjEuNDE1VjI4aDJWMjMuNDE1bDQuNTg1NCw0LjU4NTVMMjgsMjYuNTg2NCwyMy40MTMzLDIySDI4VjIwSDIxLjQxMzNMMjAsMTguNTg2OVYxN2g0VjE1SDIwVjEzLjQxNVpNMTgsMThIMTRWMTRoNFpcIiB9IH1dLCBcIm5hbWVcIjogXCJzbm93Zmxha2VcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMS40MTQ4LDEySDI4VjEwSDIzLjQxNDhsNC41ODU3LTQuNTg1NEwyNi41ODY0LDQsMjIsOC41ODY5VjRIMjB2Ni41ODY5TDE4LjU4NjcsMTJIMTdWOEgxNXY0SDEzLjQxMzNMMTIsMTAuNTg2OVY0SDEwVjguNTg2OUw1LjQxMzYsNCw0LDUuNDE0Niw4LjU4NTIsMTBINHYyaDYuNTg1MkwxMiwxMy40MTVWMTVIOHYyaDR2MS41ODY5TDEwLjU4NjcsMjBINHYySDguNTg2N0w0LDI2LjU4NjRsMS40MTQxLDEuNDE0MUwxMCwyMy40MTVWMjhoMlYyMS40MTVMMTMuNDE0OCwyMEgxNXY0aDJWMjBoMS41ODUyTDIwLDIxLjQxNVYyOGgyVjIzLjQxNWw0LjU4NTQsNC41ODU1TDI4LDI2LjU4NjQsMjMuNDEzMywyMkgyOFYyMEgyMS40MTMzTDIwLDE4LjU4NjlWMTdoNFYxNUgyMFYxMy40MTVaTTE4LDE4SDE0VjE0aDRaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIFNub3dmbGFrZURpcmVjdGl2ZV8xID0gU25vd2ZsYWtlRGlyZWN0aXZlO1xuICAgIFNub3dmbGFrZURpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIFNub3dmbGFrZURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICAgICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNub3dmbGFrZS1cIiArIFNub3dmbGFrZURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwic25vd2ZsYWtlLVwiICsgU25vd2ZsYWtlRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgU25vd2ZsYWtlRGlyZWN0aXZlXzE7XG4gICAgU25vd2ZsYWtlRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyID0gMDtcbiAgICBTbm93Zmxha2VEaXJlY3RpdmUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG4gICAgXTsgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBTbm93Zmxha2VEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFNub3dmbGFrZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgU25vd2ZsYWtlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU25vd2ZsYWtlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBTbm93Zmxha2VEaXJlY3RpdmUucHJvdG90eXBlLCBcImlzRm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU25vd2ZsYWtlRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgU25vd2ZsYWtlRGlyZWN0aXZlID0gU25vd2ZsYWtlRGlyZWN0aXZlXzEgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgRGlyZWN0aXZlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIltpYm1JY29uU25vd2ZsYWtlXVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWZdKVxuICAgIF0sIFNub3dmbGFrZURpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIFNub3dmbGFrZURpcmVjdGl2ZTtcbn0oKSk7XG52YXIgU25vd2ZsYWtlTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNub3dmbGFrZU1vZHVsZSgpIHtcbiAgICB9XG4gICAgU25vd2ZsYWtlTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgIFNub3dmbGFrZUNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBTbm93Zmxha2VEaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIFNub3dmbGFrZUNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBTbm93Zmxha2VEaXJlY3RpdmUsXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pXG4gICAgXSwgU25vd2ZsYWtlTW9kdWxlKTtcbiAgICByZXR1cm4gU25vd2ZsYWtlTW9kdWxlO1xufSgpKTtcblxuZXhwb3J0IHsgU25vd2ZsYWtlQ29tcG9uZW50LCBTbm93Zmxha2VEaXJlY3RpdmUsIFNub3dmbGFrZU1vZHVsZSB9O1xuIl19