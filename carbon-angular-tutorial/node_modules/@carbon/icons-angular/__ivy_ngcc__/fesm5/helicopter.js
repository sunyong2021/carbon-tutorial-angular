import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var HelicopterComponent = /** @class */ (function () {
    function HelicopterComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], HelicopterComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], HelicopterComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterComponent.prototype, "size", void 0);
HelicopterComponent.ɵfac = function HelicopterComponent_Factory(t) { return new (t || HelicopterComponent)(); };
HelicopterComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HelicopterComponent, selectors: [["ibm-icon-helicopter"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconHelicopter", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function HelicopterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [HelicopterDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HelicopterComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-helicopter",
                template: "\n    <svg\n      ibmIconHelicopter\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return HelicopterComponent;
}());
var HelicopterDirective = /** @class */ (function () {
    function HelicopterDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Helicopter32", "filepath": "helicopter/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z" } }], "name": "helicopter", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Helicopter24", "filepath": "helicopter/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z" } }], "name": "helicopter", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Helicopter20", "filepath": "helicopter/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z" } }], "name": "helicopter", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Helicopter16", "filepath": "helicopter/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z" } }], "name": "helicopter", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M30,8V6H8V8H18v4H4V8H2v8H4V14h6.2192l2.0533,8.2129A4.9923,4.9923,0,0,0,17.123,26H26a4.0045,4.0045,0,0,0,4-4V19.3623a2.0007,2.0007,0,0,0-.4639-1.28L25.0684,12.72A1.9968,1.9968,0,0,0,23.5317,12H20V8ZM26,24H17.123a2.9949,2.9949,0,0,1-2.91-2.2725L12.2808,14H18v6H28v2A2.0023,2.0023,0,0,1,26,24ZM23.5317,14l3.3333,4H20V14Z\"></path></svg>"
            },
        };
    }
    HelicopterDirective_1 = HelicopterDirective;
    HelicopterDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            HelicopterDirective_1.titleIdCounter++;
            title.setAttribute("id", "helicopter-" + HelicopterDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "helicopter-" + HelicopterDirective_1.titleIdCounter);
        }
    };
    var HelicopterDirective_1;
    HelicopterDirective.titleIdCounter = 0;
    HelicopterDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], HelicopterDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], HelicopterDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], HelicopterDirective.prototype, "size", void 0);
    HelicopterDirective = HelicopterDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], HelicopterDirective);
HelicopterDirective.ɵfac = function HelicopterDirective_Factory(t) { return new (t || HelicopterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
HelicopterDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: HelicopterDirective, selectors: [["", "ibmIconHelicopter", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HelicopterDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconHelicopter]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return HelicopterDirective;
}());
var HelicopterModule = /** @class */ (function () {
    function HelicopterModule() {
    }
HelicopterModule.ɵfac = function HelicopterModule_Factory(t) { return new (t || HelicopterModule)(); };
HelicopterModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HelicopterModule });
HelicopterModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HelicopterModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    HelicopterComponent,
                    HelicopterDirective,
                ],
                exports: [
                    HelicopterComponent,
                    HelicopterDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HelicopterModule, { declarations: [HelicopterComponent, HelicopterDirective], exports: [HelicopterComponent, HelicopterDirective] }); })();
    return HelicopterModule;
}());

export { HelicopterComponent, HelicopterDirective, HelicopterModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVsaWNvcHRlci5qcyIsInNvdXJjZXMiOlsiaGVsaWNvcHRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O3VPQVl5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgSGVsaWNvcHRlckNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBIZWxpY29wdGVyQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBIZWxpY29wdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBIZWxpY29wdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBIZWxpY29wdGVyQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgSGVsaWNvcHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgSGVsaWNvcHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgSGVsaWNvcHRlckNvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEhlbGljb3B0ZXJDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBIZWxpY29wdGVyQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1oZWxpY29wdGVyXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25IZWxpY29wdGVyXFxuICAgICAgW3NpemVdPVxcXCJzaXplXFxcIlxcbiAgICAgIFthcmlhTGFiZWxdPVxcXCJhcmlhTGFiZWxcXFwiXFxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cXFwiYXJpYUxhYmVsbGVkYnlcXFwiXFxuICAgICAgW2FyaWFIaWRkZW5dPVxcXCJhcmlhSGlkZGVuXFxcIlxcbiAgICAgIFt0aXRsZV09XFxcInRpdGxlXFxcIlxcbiAgICAgIFtpc0ZvY3VzYWJsZV09XFxcImZvY3VzYWJsZVxcXCJcXG4gICAgICBbYXR0ci5jbGFzc109XFxcImlubmVyQ2xhc3NcXFwiPlxcbiAgICA8L3N2Zz5cXG4gIFwiXG4gICAgICAgIH0pXG4gICAgXSwgSGVsaWNvcHRlckNvbXBvbmVudCk7XG4gICAgcmV0dXJuIEhlbGljb3B0ZXJDb21wb25lbnQ7XG59KCkpO1xudmFyIEhlbGljb3B0ZXJEaXJlY3RpdmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSGVsaWNvcHRlckRpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkhlbGljb3B0ZXIzMlwiLCBcImZpbGVwYXRoXCI6IFwiaGVsaWNvcHRlci8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsOFY2SDhWOEgxOHY0SDRWOEgydjhINFYxNGg2LjIxOTJsMi4wNTMzLDguMjEyOUE0Ljk5MjMsNC45OTIzLDAsMCwwLDE3LjEyMywyNkgyNmE0LjAwNDUsNC4wMDQ1LDAsMCwwLDQtNFYxOS4zNjIzYTIuMDAwNywyLjAwMDcsMCwwLDAtLjQ2MzktMS4yOEwyNS4wNjg0LDEyLjcyQTEuOTk2OCwxLjk5NjgsMCwwLDAsMjMuNTMxNywxMkgyMFY4Wk0yNiwyNEgxNy4xMjNhMi45OTQ5LDIuOTk0OSwwLDAsMS0yLjkxLTIuMjcyNUwxMi4yODA4LDE0SDE4djZIMjh2MkEyLjAwMjMsMi4wMDIzLDAsMCwxLDI2LDI0Wk0yMy41MzE3LDE0bDMuMzMzMyw0SDIwVjE0WlwiIH0gfV0sIFwibmFtZVwiOiBcImhlbGljb3B0ZXJcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0zMCw4VjZIOFY4SDE4djRINFY4SDJ2OEg0VjE0aDYuMjE5MmwyLjA1MzMsOC4yMTI5QTQuOTkyMyw0Ljk5MjMsMCwwLDAsMTcuMTIzLDI2SDI2YTQuMDA0NSw0LjAwNDUsMCwwLDAsNC00VjE5LjM2MjNhMi4wMDA3LDIuMDAwNywwLDAsMC0uNDYzOS0xLjI4TDI1LjA2ODQsMTIuNzJBMS45OTY4LDEuOTk2OCwwLDAsMCwyMy41MzE3LDEySDIwVjhaTTI2LDI0SDE3LjEyM2EyLjk5NDksMi45OTQ5LDAsMCwxLTIuOTEtMi4yNzI1TDEyLjI4MDgsMTRIMTh2NkgyOHYyQTIuMDAyMywyLjAwMjMsMCwwLDEsMjYsMjRaTTIzLjUzMTcsMTRsMy4zMzMzLDRIMjBWMTRaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJIZWxpY29wdGVyMjRcIiwgXCJmaWxlcGF0aFwiOiBcImhlbGljb3B0ZXIvMjQuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDI0LCBcImhlaWdodFwiOiAyNCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTMwLDhWNkg4VjhIMTh2NEg0VjhIMnY4SDRWMTRoNi4yMTkybDIuMDUzMyw4LjIxMjlBNC45OTIzLDQuOTkyMywwLDAsMCwxNy4xMjMsMjZIMjZhNC4wMDQ1LDQuMDA0NSwwLDAsMCw0LTRWMTkuMzYyM2EyLjAwMDcsMi4wMDA3LDAsMCwwLS40NjM5LTEuMjhMMjUuMDY4NCwxMi43MkExLjk5NjgsMS45OTY4LDAsMCwwLDIzLjUzMTcsMTJIMjBWOFpNMjYsMjRIMTcuMTIzYTIuOTk0OSwyLjk5NDksMCwwLDEtMi45MS0yLjI3MjVMMTIuMjgwOCwxNEgxOHY2SDI4djJBMi4wMDIzLDIuMDAyMywwLDAsMSwyNiwyNFpNMjMuNTMxNywxNGwzLjMzMzMsNEgyMFYxNFpcIiB9IH1dLCBcIm5hbWVcIjogXCJoZWxpY29wdGVyXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMzAsOFY2SDhWOEgxOHY0SDRWOEgydjhINFYxNGg2LjIxOTJsMi4wNTMzLDguMjEyOUE0Ljk5MjMsNC45OTIzLDAsMCwwLDE3LjEyMywyNkgyNmE0LjAwNDUsNC4wMDQ1LDAsMCwwLDQtNFYxOS4zNjIzYTIuMDAwNywyLjAwMDcsMCwwLDAtLjQ2MzktMS4yOEwyNS4wNjg0LDEyLjcyQTEuOTk2OCwxLjk5NjgsMCwwLDAsMjMuNTMxNywxMkgyMFY4Wk0yNiwyNEgxNy4xMjNhMi45OTQ5LDIuOTk0OSwwLDAsMS0yLjkxLTIuMjcyNUwxMi4yODA4LDE0SDE4djZIMjh2MkEyLjAwMjMsMi4wMDIzLDAsMCwxLDI2LDI0Wk0yMy41MzE3LDE0bDMuMzMzMyw0SDIwVjE0WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiSGVsaWNvcHRlcjIwXCIsIFwiZmlsZXBhdGhcIjogXCJoZWxpY29wdGVyLzIwLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyMCwgXCJoZWlnaHRcIjogMjAgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0zMCw4VjZIOFY4SDE4djRINFY4SDJ2OEg0VjE0aDYuMjE5MmwyLjA1MzMsOC4yMTI5QTQuOTkyMyw0Ljk5MjMsMCwwLDAsMTcuMTIzLDI2SDI2YTQuMDA0NSw0LjAwNDUsMCwwLDAsNC00VjE5LjM2MjNhMi4wMDA3LDIuMDAwNywwLDAsMC0uNDYzOS0xLjI4TDI1LjA2ODQsMTIuNzJBMS45OTY4LDEuOTk2OCwwLDAsMCwyMy41MzE3LDEySDIwVjhaTTI2LDI0SDE3LjEyM2EyLjk5NDksMi45OTQ5LDAsMCwxLTIuOTEtMi4yNzI1TDEyLjI4MDgsMTRIMTh2NkgyOHYyQTIuMDAyMywyLjAwMjMsMCwwLDEsMjYsMjRaTTIzLjUzMTcsMTRsMy4zMzMzLDRIMjBWMTRaXCIgfSB9XSwgXCJuYW1lXCI6IFwiaGVsaWNvcHRlclwiLCBcInNpemVcIjogMjAgfSwgXCJzaXplXCI6IDIwIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTMwLDhWNkg4VjhIMTh2NEg0VjhIMnY4SDRWMTRoNi4yMTkybDIuMDUzMyw4LjIxMjlBNC45OTIzLDQuOTkyMywwLDAsMCwxNy4xMjMsMjZIMjZhNC4wMDQ1LDQuMDA0NSwwLDAsMCw0LTRWMTkuMzYyM2EyLjAwMDcsMi4wMDA3LDAsMCwwLS40NjM5LTEuMjhMMjUuMDY4NCwxMi43MkExLjk5NjgsMS45OTY4LDAsMCwwLDIzLjUzMTcsMTJIMjBWOFpNMjYsMjRIMTcuMTIzYTIuOTk0OSwyLjk5NDksMCwwLDEtMi45MS0yLjI3MjVMMTIuMjgwOCwxNEgxOHY2SDI4djJBMi4wMDIzLDIuMDAyMywwLDAsMSwyNiwyNFpNMjMuNTMxNywxNGwzLjMzMzMsNEgyMFYxNFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkhlbGljb3B0ZXIxNlwiLCBcImZpbGVwYXRoXCI6IFwiaGVsaWNvcHRlci8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsOFY2SDhWOEgxOHY0SDRWOEgydjhINFYxNGg2LjIxOTJsMi4wNTMzLDguMjEyOUE0Ljk5MjMsNC45OTIzLDAsMCwwLDE3LjEyMywyNkgyNmE0LjAwNDUsNC4wMDQ1LDAsMCwwLDQtNFYxOS4zNjIzYTIuMDAwNywyLjAwMDcsMCwwLDAtLjQ2MzktMS4yOEwyNS4wNjg0LDEyLjcyQTEuOTk2OCwxLjk5NjgsMCwwLDAsMjMuNTMxNywxMkgyMFY4Wk0yNiwyNEgxNy4xMjNhMi45OTQ5LDIuOTk0OSwwLDAsMS0yLjkxLTIuMjcyNUwxMi4yODA4LDE0SDE4djZIMjh2MkEyLjAwMjMsMi4wMDIzLDAsMCwxLDI2LDI0Wk0yMy41MzE3LDE0bDMuMzMzMyw0SDIwVjE0WlwiIH0gfV0sIFwibmFtZVwiOiBcImhlbGljb3B0ZXJcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0zMCw4VjZIOFY4SDE4djRINFY4SDJ2OEg0VjE0aDYuMjE5MmwyLjA1MzMsOC4yMTI5QTQuOTkyMyw0Ljk5MjMsMCwwLDAsMTcuMTIzLDI2SDI2YTQuMDA0NSw0LjAwNDUsMCwwLDAsNC00VjE5LjM2MjNhMi4wMDA3LDIuMDAwNywwLDAsMC0uNDYzOS0xLjI4TDI1LjA2ODQsMTIuNzJBMS45OTY4LDEuOTk2OCwwLDAsMCwyMy41MzE3LDEySDIwVjhaTTI2LDI0SDE3LjEyM2EyLjk5NDksMi45OTQ5LDAsMCwxLTIuOTEtMi4yNzI1TDEyLjI4MDgsMTRIMTh2NkgyOHYyQTIuMDAyMywyLjAwMjMsMCwwLDEsMjYsMjRaTTIzLjUzMTcsMTRsMy4zMzMzLDRIMjBWMTRaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIEhlbGljb3B0ZXJEaXJlY3RpdmVfMSA9IEhlbGljb3B0ZXJEaXJlY3RpdmU7XG4gICAgSGVsaWNvcHRlckRpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIEhlbGljb3B0ZXJEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJoZWxpY29wdGVyLVwiICsgSGVsaWNvcHRlckRpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwiaGVsaWNvcHRlci1cIiArIEhlbGljb3B0ZXJEaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBIZWxpY29wdGVyRGlyZWN0aXZlXzE7XG4gICAgSGVsaWNvcHRlckRpcmVjdGl2ZS50aXRsZUlkQ291bnRlciA9IDA7XG4gICAgSGVsaWNvcHRlckRpcmVjdGl2ZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH1cbiAgICBdOyB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEhlbGljb3B0ZXJEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEhlbGljb3B0ZXJEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIEhlbGljb3B0ZXJEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBIZWxpY29wdGVyRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBIZWxpY29wdGVyRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpc0ZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEhlbGljb3B0ZXJEaXJlY3RpdmUucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBIZWxpY29wdGVyRGlyZWN0aXZlID0gSGVsaWNvcHRlckRpcmVjdGl2ZV8xID0gX19kZWNvcmF0ZShbXG4gICAgICAgIERpcmVjdGl2ZSh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJbaWJtSWNvbkhlbGljb3B0ZXJdXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZl0pXG4gICAgXSwgSGVsaWNvcHRlckRpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIEhlbGljb3B0ZXJEaXJlY3RpdmU7XG59KCkpO1xudmFyIEhlbGljb3B0ZXJNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSGVsaWNvcHRlck1vZHVsZSgpIHtcbiAgICB9XG4gICAgSGVsaWNvcHRlck1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICBIZWxpY29wdGVyQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIEhlbGljb3B0ZXJEaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIEhlbGljb3B0ZXJDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgSGVsaWNvcHRlckRpcmVjdGl2ZSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSlcbiAgICBdLCBIZWxpY29wdGVyTW9kdWxlKTtcbiAgICByZXR1cm4gSGVsaWNvcHRlck1vZHVsZTtcbn0oKSk7XG5cbmV4cG9ydCB7IEhlbGljb3B0ZXJDb21wb25lbnQsIEhlbGljb3B0ZXJEaXJlY3RpdmUsIEhlbGljb3B0ZXJNb2R1bGUgfTtcbiJdfQ==