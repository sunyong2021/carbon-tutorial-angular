import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var StemLeafPlotComponent = /** @class */ (function () {
    function StemLeafPlotComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StemLeafPlotComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StemLeafPlotComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotComponent.prototype, "size", void 0);
StemLeafPlotComponent.ɵfac = function StemLeafPlotComponent_Factory(t) { return new (t || StemLeafPlotComponent)(); };
StemLeafPlotComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StemLeafPlotComponent, selectors: [["ibm-icon-stem-leaf-plot"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconStemLeafPlot", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function StemLeafPlotComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [StemLeafPlotDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StemLeafPlotComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-stem-leaf-plot",
                template: "\n    <svg\n      ibmIconStemLeafPlot\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return StemLeafPlotComponent;
}());
var StemLeafPlotDirective = /** @class */ (function () {
    function StemLeafPlotDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "StemLeafPlot32", "filepath": "stem-leaf-plot/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z" } }], "name": "stem-leaf-plot", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "StemLeafPlot24", "filepath": "stem-leaf-plot/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z" } }], "name": "stem-leaf-plot", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "StemLeafPlot20", "filepath": "stem-leaf-plot/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z" } }], "name": "stem-leaf-plot", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "StemLeafPlot16", "filepath": "stem-leaf-plot/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z" } }], "name": "stem-leaf-plot", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 10a3 3 0 113-3A3.0033 3.0033 0 0119 10zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 6zM19 19a3 3 0 113-3A3.0033 3.0033 0 0119 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 15zM27 19a3 3 0 113-3A3.0033 3.0033 0 0127 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 0027 15zM19 28a3 3 0 113-3A3.0033 3.0033 0 0119 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 0019 24zM12 2H14V30H12zM7 28a3 3 0 113-3A3.0033 3.0033 0 017 28zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 24zM7 19a3 3 0 113-3A3.0033 3.0033 0 017 19zm0-4a1 1 0 101 1A1.0011 1.0011 0 007 15zM7 10a3 3 0 113-3A3.0033 3.0033 0 017 10zM7 6A1 1 0 108 7 1.0011 1.0011 0 007 6z\"></path></svg>"
            },
        };
    }
    StemLeafPlotDirective_1 = StemLeafPlotDirective;
    StemLeafPlotDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            StemLeafPlotDirective_1.titleIdCounter++;
            title.setAttribute("id", "stem-leaf-plot-" + StemLeafPlotDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "stem-leaf-plot-" + StemLeafPlotDirective_1.titleIdCounter);
        }
    };
    var StemLeafPlotDirective_1;
    StemLeafPlotDirective.titleIdCounter = 0;
    StemLeafPlotDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StemLeafPlotDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], StemLeafPlotDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], StemLeafPlotDirective.prototype, "size", void 0);
    StemLeafPlotDirective = StemLeafPlotDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], StemLeafPlotDirective);
StemLeafPlotDirective.ɵfac = function StemLeafPlotDirective_Factory(t) { return new (t || StemLeafPlotDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
StemLeafPlotDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: StemLeafPlotDirective, selectors: [["", "ibmIconStemLeafPlot", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StemLeafPlotDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconStemLeafPlot]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return StemLeafPlotDirective;
}());
var StemLeafPlotModule = /** @class */ (function () {
    function StemLeafPlotModule() {
    }
StemLeafPlotModule.ɵfac = function StemLeafPlotModule_Factory(t) { return new (t || StemLeafPlotModule)(); };
StemLeafPlotModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StemLeafPlotModule });
StemLeafPlotModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StemLeafPlotModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    StemLeafPlotComponent,
                    StemLeafPlotDirective,
                ],
                exports: [
                    StemLeafPlotComponent,
                    StemLeafPlotDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StemLeafPlotModule, { declarations: [StemLeafPlotComponent, StemLeafPlotDirective], exports: [StemLeafPlotComponent, StemLeafPlotDirective] }); })();
    return StemLeafPlotModule;
}());

export { StemLeafPlotComponent, StemLeafPlotDirective, StemLeafPlotModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlbS1sZWFmLXBsb3QuanMiLCJzb3VyY2VzIjpbInN0ZW0tbGVhZi1wbG90LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU04QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFJTztBQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7aVBBWTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19tZXRhZGF0YSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IElucHV0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIERpcmVjdGl2ZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldEF0dHJpYnV0ZXMgfSBmcm9tICdAY2FyYm9uL2ljb24taGVscGVycyc7XG5cbnZhciBTdGVtTGVhZlBsb3RDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3RlbUxlYWZQbG90Q29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBTdGVtTGVhZlBsb3RDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFN0ZW1MZWFmUGxvdENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgU3RlbUxlYWZQbG90Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU3RlbUxlYWZQbG90Q29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBTdGVtTGVhZlBsb3RDb21wb25lbnQucHJvdG90eXBlLCBcImZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFN0ZW1MZWFmUGxvdENvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFN0ZW1MZWFmUGxvdENvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIFN0ZW1MZWFmUGxvdENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaWJtLWljb24tc3RlbS1sZWFmLXBsb3RcIixcbiAgICAgICAgICAgIHRlbXBsYXRlOiBcIlxcbiAgICA8c3ZnXFxuICAgICAgaWJtSWNvblN0ZW1MZWFmUGxvdFxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIFN0ZW1MZWFmUGxvdENvbXBvbmVudCk7XG4gICAgcmV0dXJuIFN0ZW1MZWFmUGxvdENvbXBvbmVudDtcbn0oKSk7XG52YXIgU3RlbUxlYWZQbG90RGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0ZW1MZWFmUGxvdERpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlN0ZW1MZWFmUGxvdDMyXCIsIFwiZmlsZXBhdGhcIjogXCJzdGVtLWxlYWYtcGxvdC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTkgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxMTkgMTB6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDAxOSA2ek0xOSAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDE1ek0yNyAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDEyNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDI3IDE1ek0xOSAyOGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDI0ek0xMiAySDE0VjMwSDEyek03IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMjh6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDI0ek03IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTl6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDE1ek03IDEwYTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTB6TTcgNkExIDEgMCAxMDggNyAxLjAwMTEgMS4wMDExIDAgMDA3IDZ6XCIgfSB9XSwgXCJuYW1lXCI6IFwic3RlbS1sZWFmLXBsb3RcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xOSAxMGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxMHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDZ6TTE5IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMTV6TTI3IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTI3IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMjcgMTV6TTE5IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDI4em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMjR6TTEyIDJIMTRWMzBIMTJ6TTcgMjhhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMjR6TTcgMTlhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMTV6TTcgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxMHpNNyA2QTEgMSAwIDEwOCA3IDEuMDAxMSAxLjAwMTEgMCAwMDcgNnpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjRcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlN0ZW1MZWFmUGxvdDI0XCIsIFwiZmlsZXBhdGhcIjogXCJzdGVtLWxlYWYtcGxvdC8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTkgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxMTkgMTB6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDAxOSA2ek0xOSAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDE1ek0yNyAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDEyNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDI3IDE1ek0xOSAyOGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDI0ek0xMiAySDE0VjMwSDEyek03IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMjh6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDI0ek03IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTl6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDE1ek03IDEwYTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTB6TTcgNkExIDEgMCAxMDggNyAxLjAwMTEgMS4wMDExIDAgMDA3IDZ6XCIgfSB9XSwgXCJuYW1lXCI6IFwic3RlbS1sZWFmLXBsb3RcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xOSAxMGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxMHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDZ6TTE5IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMTV6TTI3IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTI3IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMjcgMTV6TTE5IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDI4em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMjR6TTEyIDJIMTRWMzBIMTJ6TTcgMjhhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMjR6TTcgMTlhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMTV6TTcgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxMHpNNyA2QTEgMSAwIDEwOCA3IDEuMDAxMSAxLjAwMTEgMCAwMDcgNnpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlN0ZW1MZWFmUGxvdDIwXCIsIFwiZmlsZXBhdGhcIjogXCJzdGVtLWxlYWYtcGxvdC8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTkgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxMTkgMTB6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDAxOSA2ek0xOSAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDE1ek0yNyAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDEyNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDI3IDE1ek0xOSAyOGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDI0ek0xMiAySDE0VjMwSDEyek03IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMjh6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDI0ek03IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTl6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDE1ek03IDEwYTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTB6TTcgNkExIDEgMCAxMDggNyAxLjAwMTEgMS4wMDExIDAgMDA3IDZ6XCIgfSB9XSwgXCJuYW1lXCI6IFwic3RlbS1sZWFmLXBsb3RcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xOSAxMGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxMHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDZ6TTE5IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMTV6TTI3IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTI3IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMjcgMTV6TTE5IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDI4em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMjR6TTEyIDJIMTRWMzBIMTJ6TTcgMjhhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMjR6TTcgMTlhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMTV6TTcgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxMHpNNyA2QTEgMSAwIDEwOCA3IDEuMDAxMSAxLjAwMTEgMCAwMDcgNnpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIlN0ZW1MZWFmUGxvdDE2XCIsIFwiZmlsZXBhdGhcIjogXCJzdGVtLWxlYWYtcGxvdC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTkgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxMTkgMTB6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDAxOSA2ek0xOSAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDE1ek0yNyAxOWEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDEyNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDI3IDE1ek0xOSAyOGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDI0ek0xMiAySDE0VjMwSDEyek03IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMjh6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDI0ek03IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTl6bTAtNGExIDEgMCAxMDEgMUExLjAwMTEgMS4wMDExIDAgMDA3IDE1ek03IDEwYTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTcgMTB6TTcgNkExIDEgMCAxMDggNyAxLjAwMTEgMS4wMDExIDAgMDA3IDZ6XCIgfSB9XSwgXCJuYW1lXCI6IFwic3RlbS1sZWFmLXBsb3RcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xOSAxMGEzIDMgMCAxMTMtM0EzLjAwMzMgMy4wMDMzIDAgMDExOSAxMHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDE5IDZ6TTE5IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMTV6TTI3IDE5YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTI3IDE5em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMjcgMTV6TTE5IDI4YTMgMyAwIDExMy0zQTMuMDAzMyAzLjAwMzMgMCAwMTE5IDI4em0wLTRhMSAxIDAgMTAxIDFBMS4wMDExIDEuMDAxMSAwIDAwMTkgMjR6TTEyIDJIMTRWMzBIMTJ6TTcgMjhhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAyOHptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMjR6TTcgMTlhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxOXptMC00YTEgMSAwIDEwMSAxQTEuMDAxMSAxLjAwMTEgMCAwMDcgMTV6TTcgMTBhMyAzIDAgMTEzLTNBMy4wMDMzIDMuMDAzMyAwIDAxNyAxMHpNNyA2QTEgMSAwIDEwOCA3IDEuMDAxMSAxLjAwMTEgMCAwMDcgNnpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgU3RlbUxlYWZQbG90RGlyZWN0aXZlXzEgPSBTdGVtTGVhZlBsb3REaXJlY3RpdmU7XG4gICAgU3RlbUxlYWZQbG90RGlyZWN0aXZlLnByb3RvdHlwZS5uZ0FmdGVyVmlld0luaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG4gICAgICAgIHZhciBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdO1xuICAgICAgICB2YXIgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgICAgICB2YXIgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgICAgIHZhciBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHZhciBub2RlID0gc3ZnRWxlbWVudC5maXJzdENoaWxkO1xuICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAgICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICAgICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGF0dHJLZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgICAgICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgICAgICAgU3RlbUxlYWZQbG90RGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIrKztcbiAgICAgICAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3RlbS1sZWFmLXBsb3QtXCIgKyBTdGVtTGVhZlBsb3REaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcInN0ZW0tbGVhZi1wbG90LVwiICsgU3RlbUxlYWZQbG90RGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgU3RlbUxlYWZQbG90RGlyZWN0aXZlXzE7XG4gICAgU3RlbUxlYWZQbG90RGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyID0gMDtcbiAgICBTdGVtTGVhZlBsb3REaXJlY3RpdmUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG4gICAgXTsgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBTdGVtTGVhZlBsb3REaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFN0ZW1MZWFmUGxvdERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgU3RlbUxlYWZQbG90RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU3RlbUxlYWZQbG90RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBTdGVtTGVhZlBsb3REaXJlY3RpdmUucHJvdG90eXBlLCBcImlzRm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgU3RlbUxlYWZQbG90RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgU3RlbUxlYWZQbG90RGlyZWN0aXZlID0gU3RlbUxlYWZQbG90RGlyZWN0aXZlXzEgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgRGlyZWN0aXZlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIltpYm1JY29uU3RlbUxlYWZQbG90XVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWZdKVxuICAgIF0sIFN0ZW1MZWFmUGxvdERpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIFN0ZW1MZWFmUGxvdERpcmVjdGl2ZTtcbn0oKSk7XG52YXIgU3RlbUxlYWZQbG90TW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0ZW1MZWFmUGxvdE1vZHVsZSgpIHtcbiAgICB9XG4gICAgU3RlbUxlYWZQbG90TW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgIFN0ZW1MZWFmUGxvdENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBTdGVtTGVhZlBsb3REaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIFN0ZW1MZWFmUGxvdENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBTdGVtTGVhZlBsb3REaXJlY3RpdmUsXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pXG4gICAgXSwgU3RlbUxlYWZQbG90TW9kdWxlKTtcbiAgICByZXR1cm4gU3RlbUxlYWZQbG90TW9kdWxlO1xufSgpKTtcblxuZXhwb3J0IHsgU3RlbUxlYWZQbG90Q29tcG9uZW50LCBTdGVtTGVhZlBsb3REaXJlY3RpdmUsIFN0ZW1MZWFmUGxvdE1vZHVsZSB9O1xuIl19