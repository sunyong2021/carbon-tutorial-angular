import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var LightFilledComponent = /** @class */ (function () {
    function LightFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LightFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LightFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledComponent.prototype, "size", void 0);
LightFilledComponent.ɵfac = function LightFilledComponent_Factory(t) { return new (t || LightFilledComponent)(); };
LightFilledComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LightFilledComponent, selectors: [["ibm-icon-light-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconLightFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function LightFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [LightFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LightFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-light-filled",
                template: "\n    <svg\n      ibmIconLightFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return LightFilledComponent;
}());
var LightFilledDirective = /** @class */ (function () {
    function LightFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "LightFilled32", "filepath": "light--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 2H17V7H15z" } }, { "elem": "path", "attrs": { "d": "M21.668 6.854H26.625999999999998V8.854H21.668z", "transform": "rotate(-45 24.147 7.853)" } }, { "elem": "path", "attrs": { "d": "M25 15H30V17H25z" } }, { "elem": "path", "attrs": { "d": "M23.147 21.668H25.147V26.625999999999998H23.147z", "transform": "rotate(-45 24.147 24.146)" } }, { "elem": "path", "attrs": { "d": "M15 25H17V30H15z" } }, { "elem": "path", "attrs": { "d": "M5.375 23.147H10.333V25.147H5.375z", "transform": "rotate(-45 7.853 24.146)" } }, { "elem": "path", "attrs": { "d": "M2 15H7V17H2z" } }, { "elem": "path", "attrs": { "d": "M6.854 5.375H8.854V10.333H6.854z", "transform": "rotate(-45 7.854 7.853)" } }, { "elem": "path", "attrs": { "d": "M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z" } }], "name": "light--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 2H17V7H15z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.147 7.853)\"></path><path d=\"M25 15H30V17H25z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.147 24.146)\"></path><path d=\"M15 25H17V30H15z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.853 24.146)\"></path><path d=\"M2 15H7V17H2z\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.854 7.853)\"></path><path d=\"M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "LightFilled24", "filepath": "light--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 2H17V7H15z" } }, { "elem": "path", "attrs": { "d": "M21.668 6.854H26.625999999999998V8.854H21.668z", "transform": "rotate(-45 24.147 7.853)" } }, { "elem": "path", "attrs": { "d": "M25 15H30V17H25z" } }, { "elem": "path", "attrs": { "d": "M23.147 21.668H25.147V26.625999999999998H23.147z", "transform": "rotate(-45 24.147 24.146)" } }, { "elem": "path", "attrs": { "d": "M15 25H17V30H15z" } }, { "elem": "path", "attrs": { "d": "M5.375 23.147H10.333V25.147H5.375z", "transform": "rotate(-45 7.853 24.146)" } }, { "elem": "path", "attrs": { "d": "M2 15H7V17H2z" } }, { "elem": "path", "attrs": { "d": "M6.854 5.375H8.854V10.333H6.854z", "transform": "rotate(-45 7.854 7.853)" } }, { "elem": "path", "attrs": { "d": "M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z" } }], "name": "light--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 2H17V7H15z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.147 7.853)\"></path><path d=\"M25 15H30V17H25z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.147 24.146)\"></path><path d=\"M15 25H17V30H15z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.853 24.146)\"></path><path d=\"M2 15H7V17H2z\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.854 7.853)\"></path><path d=\"M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "LightFilled20", "filepath": "light--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 2H17V7H15z" } }, { "elem": "path", "attrs": { "d": "M21.668 6.854H26.625999999999998V8.854H21.668z", "transform": "rotate(-45 24.147 7.853)" } }, { "elem": "path", "attrs": { "d": "M25 15H30V17H25z" } }, { "elem": "path", "attrs": { "d": "M23.147 21.668H25.147V26.625999999999998H23.147z", "transform": "rotate(-45 24.147 24.146)" } }, { "elem": "path", "attrs": { "d": "M15 25H17V30H15z" } }, { "elem": "path", "attrs": { "d": "M5.375 23.147H10.333V25.147H5.375z", "transform": "rotate(-45 7.853 24.146)" } }, { "elem": "path", "attrs": { "d": "M2 15H7V17H2z" } }, { "elem": "path", "attrs": { "d": "M6.854 5.375H8.854V10.333H6.854z", "transform": "rotate(-45 7.854 7.853)" } }, { "elem": "path", "attrs": { "d": "M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z" } }], "name": "light--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 2H17V7H15z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.147 7.853)\"></path><path d=\"M25 15H30V17H25z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.147 24.146)\"></path><path d=\"M15 25H17V30H15z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.853 24.146)\"></path><path d=\"M2 15H7V17H2z\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.854 7.853)\"></path><path d=\"M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "LightFilled16", "filepath": "light--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 2H17V7H15z" } }, { "elem": "path", "attrs": { "d": "M21.668 6.854H26.625999999999998V8.854H21.668z", "transform": "rotate(-45 24.147 7.853)" } }, { "elem": "path", "attrs": { "d": "M25 15H30V17H25z" } }, { "elem": "path", "attrs": { "d": "M23.147 21.668H25.147V26.625999999999998H23.147z", "transform": "rotate(-45 24.147 24.146)" } }, { "elem": "path", "attrs": { "d": "M15 25H17V30H15z" } }, { "elem": "path", "attrs": { "d": "M5.375 23.147H10.333V25.147H5.375z", "transform": "rotate(-45 7.853 24.146)" } }, { "elem": "path", "attrs": { "d": "M2 15H7V17H2z" } }, { "elem": "path", "attrs": { "d": "M6.854 5.375H8.854V10.333H6.854z", "transform": "rotate(-45 7.854 7.853)" } }, { "elem": "path", "attrs": { "d": "M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z" } }], "name": "light--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 2H17V7H15z\"></path><path d=\"M21.668 6.854H26.625999999999998V8.854H21.668z\" transform=\"rotate(-45 24.147 7.853)\"></path><path d=\"M25 15H30V17H25z\"></path><path d=\"M23.147 21.668H25.147V26.625999999999998H23.147z\" transform=\"rotate(-45 24.147 24.146)\"></path><path d=\"M15 25H17V30H15z\"></path><path d=\"M5.375 23.147H10.333V25.147H5.375z\" transform=\"rotate(-45 7.853 24.146)\"></path><path d=\"M2 15H7V17H2z\"></path><path d=\"M6.854 5.375H8.854V10.333H6.854z\" transform=\"rotate(-45 7.854 7.853)\"></path><path d=\"M16,10a6,6,0,1,0,6,6,6,6,0,0,0-6-6Z\"></path></svg>"
            },
        };
    }
    LightFilledDirective_1 = LightFilledDirective;
    LightFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            LightFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "light-filled-" + LightFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "light-filled-" + LightFilledDirective_1.titleIdCounter);
        }
    };
    var LightFilledDirective_1;
    LightFilledDirective.titleIdCounter = 0;
    LightFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LightFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], LightFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LightFilledDirective.prototype, "size", void 0);
    LightFilledDirective = LightFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], LightFilledDirective);
LightFilledDirective.ɵfac = function LightFilledDirective_Factory(t) { return new (t || LightFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
LightFilledDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: LightFilledDirective, selectors: [["", "ibmIconLightFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LightFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconLightFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return LightFilledDirective;
}());
var LightFilledModule = /** @class */ (function () {
    function LightFilledModule() {
    }
LightFilledModule.ɵfac = function LightFilledModule_Factory(t) { return new (t || LightFilledModule)(); };
LightFilledModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: LightFilledModule });
LightFilledModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LightFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    LightFilledComponent,
                    LightFilledDirective,
                ],
                exports: [
                    LightFilledComponent,
                    LightFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LightFilledModule, { declarations: [LightFilledComponent, LightFilledDirective], exports: [LightFilledComponent, LightFilledDirective] }); })();
    return LightFilledModule;
}());

export { LightFilledComponent, LightFilledDirective, LightFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlnaHQtLWZpbGxlZC5qcyIsInNvdXJjZXMiOlsibGlnaHQtLWZpbGxlZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OzRPQVkwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgTGlnaHRGaWxsZWRDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGlnaHRGaWxsZWRDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExpZ2h0RmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMaWdodEZpbGxlZENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTGlnaHRGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMaWdodEZpbGxlZENvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTGlnaHRGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExpZ2h0RmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGlnaHRGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBMaWdodEZpbGxlZENvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaWJtLWljb24tbGlnaHQtZmlsbGVkXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25MaWdodEZpbGxlZFxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIExpZ2h0RmlsbGVkQ29tcG9uZW50KTtcbiAgICByZXR1cm4gTGlnaHRGaWxsZWRDb21wb25lbnQ7XG59KCkpO1xudmFyIExpZ2h0RmlsbGVkRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIExpZ2h0RmlsbGVkRGlyZWN0aXZlKGVsZW1lbnRSZWYpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjtcbiAgICAgICAgdGhpcy5pc0ZvY3VzYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmljb25zID0ge1xuICAgICAgICAgICAgXCIzMlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiTGlnaHRGaWxsZWQzMlwiLCBcImZpbGVwYXRoXCI6IFwibGlnaHQtLWZpbGxlZC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgMkgxN1Y3SDE1elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNjY4IDYuODU0SDI2LjYyNTk5OTk5OTk5OTk5OFY4Ljg1NEgyMS42Njh6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyNC4xNDcgNy44NTMpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yNSAxNUgzMFYxN0gyNXpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIzLjE0NyAyMS42NjhIMjUuMTQ3VjI2LjYyNTk5OTk5OTk5OTk5OEgyMy4xNDd6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyNC4xNDcgMjQuMTQ2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgMjVIMTdWMzBIMTV6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01LjM3NSAyMy4xNDdIMTAuMzMzVjI1LjE0N0g1LjM3NXpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDcuODUzIDI0LjE0NilcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIgMTVIN1YxN0gyelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNi44NTQgNS4zNzVIOC44NTRWMTAuMzMzSDYuODU0elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgNy44NTQgNy44NTMpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNiwxMGE2LDYsMCwxLDAsNiw2LDYsNiwwLDAsMC02LTZaXCIgfSB9XSwgXCJuYW1lXCI6IFwibGlnaHQtLWZpbGxlZFwiLCBcInNpemVcIjogMzIgfSwgXCJzaXplXCI6IDMyIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIzMlxcXCIgaGVpZ2h0PVxcXCIzMlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTE1IDJIMTdWN0gxNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNjY4IDYuODU0SDI2LjYyNTk5OTk5OTk5OTk5OFY4Ljg1NEgyMS42Njh6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjQuMTQ3IDcuODUzKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yNSAxNUgzMFYxN0gyNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjMuMTQ3IDIxLjY2OEgyNS4xNDdWMjYuNjI1OTk5OTk5OTk5OTk4SDIzLjE0N3pcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyNC4xNDcgMjQuMTQ2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xNSAyNUgxN1YzMEgxNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNS4zNzUgMjMuMTQ3SDEwLjMzM1YyNS4xNDdINS4zNzV6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgNy44NTMgMjQuMTQ2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yIDE1SDdWMTdIMnpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNi44NTQgNS4zNzVIOC44NTRWMTAuMzMzSDYuODU0elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDcuODU0IDcuODUzKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xNiwxMGE2LDYsMCwxLDAsNiw2LDYsNiwwLDAsMC02LTZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJMaWdodEZpbGxlZDI0XCIsIFwiZmlsZXBhdGhcIjogXCJsaWdodC0tZmlsbGVkLzI0LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyNCwgXCJoZWlnaHRcIjogMjQgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNSAySDE3VjdIMTV6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMS42NjggNi44NTRIMjYuNjI1OTk5OTk5OTk5OTk4VjguODU0SDIxLjY2OHpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDI0LjE0NyA3Ljg1MylcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI1IDE1SDMwVjE3SDI1elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjMuMTQ3IDIxLjY2OEgyNS4xNDdWMjYuNjI1OTk5OTk5OTk5OTk4SDIzLjE0N3pcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDI0LjE0NyAyNC4xNDYpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNSAyNUgxN1YzMEgxNXpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTUuMzc1IDIzLjE0N0gxMC4zMzNWMjUuMTQ3SDUuMzc1elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgNy44NTMgMjQuMTQ2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMiAxNUg3VjE3SDJ6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk02Ljg1NCA1LjM3NUg4Ljg1NFYxMC4zMzNINi44NTR6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA3Ljg1NCA3Ljg1MylcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE2LDEwYTYsNiwwLDEsMCw2LDYsNiw2LDAsMCwwLTYtNlpcIiB9IH1dLCBcIm5hbWVcIjogXCJsaWdodC0tZmlsbGVkXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTUgMkgxN1Y3SDE1elxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yMS42NjggNi44NTRIMjYuNjI1OTk5OTk5OTk5OTk4VjguODU0SDIxLjY2OHpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyNC4xNDcgNy44NTMpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTI1IDE1SDMwVjE3SDI1elxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yMy4xNDcgMjEuNjY4SDI1LjE0N1YyNi42MjU5OTk5OTk5OTk5OThIMjMuMTQ3elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDI0LjE0NyAyNC4xNDYpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTE1IDI1SDE3VjMwSDE1elxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk01LjM3NSAyMy4xNDdIMTAuMzMzVjI1LjE0N0g1LjM3NXpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA3Ljg1MyAyNC4xNDYpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTIgMTVIN1YxN0gyelxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk02Ljg1NCA1LjM3NUg4Ljg1NFYxMC4zMzNINi44NTR6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgNy44NTQgNy44NTMpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTE2LDEwYTYsNiwwLDEsMCw2LDYsNiw2LDAsMCwwLTYtNlpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkxpZ2h0RmlsbGVkMjBcIiwgXCJmaWxlcGF0aFwiOiBcImxpZ2h0LS1maWxsZWQvMjAuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDIwLCBcImhlaWdodFwiOiAyMCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE1IDJIMTdWN0gxNXpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIxLjY2OCA2Ljg1NEgyNi42MjU5OTk5OTk5OTk5OThWOC44NTRIMjEuNjY4elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjQuMTQ3IDcuODUzKVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjUgMTVIMzBWMTdIMjV6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMy4xNDcgMjEuNjY4SDI1LjE0N1YyNi42MjU5OTk5OTk5OTk5OThIMjMuMTQ3elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjQuMTQ3IDI0LjE0NilcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE1IDI1SDE3VjMwSDE1elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNS4zNzUgMjMuMTQ3SDEwLjMzM1YyNS4xNDdINS4zNzV6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA3Ljg1MyAyNC4xNDYpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yIDE1SDdWMTdIMnpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTYuODU0IDUuMzc1SDguODU0VjEwLjMzM0g2Ljg1NHpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDcuODU0IDcuODUzKVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYsMTBhNiw2LDAsMSwwLDYsNiw2LDYsMCwwLDAtNi02WlwiIH0gfV0sIFwibmFtZVwiOiBcImxpZ2h0LS1maWxsZWRcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNSAySDE3VjdIMTV6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTIxLjY2OCA2Ljg1NEgyNi42MjU5OTk5OTk5OTk5OThWOC44NTRIMjEuNjY4elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDI0LjE0NyA3Ljg1MylcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjUgMTVIMzBWMTdIMjV6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTIzLjE0NyAyMS42NjhIMjUuMTQ3VjI2LjYyNTk5OTk5OTk5OTk5OEgyMy4xNDd6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjQuMTQ3IDI0LjE0NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTUgMjVIMTdWMzBIMTV6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTUuMzc1IDIzLjE0N0gxMC4zMzNWMjUuMTQ3SDUuMzc1elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDcuODUzIDI0LjE0NilcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMiAxNUg3VjE3SDJ6XFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTYuODU0IDUuMzc1SDguODU0VjEwLjMzM0g2Ljg1NHpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA3Ljg1NCA3Ljg1MylcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTYsMTBhNiw2LDAsMSwwLDYsNiw2LDYsMCwwLDAtNi02WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIxNlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiTGlnaHRGaWxsZWQxNlwiLCBcImZpbGVwYXRoXCI6IFwibGlnaHQtLWZpbGxlZC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgMkgxN1Y3SDE1elwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjEuNjY4IDYuODU0SDI2LjYyNTk5OTk5OTk5OTk5OFY4Ljg1NEgyMS42Njh6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyNC4xNDcgNy44NTMpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yNSAxNUgzMFYxN0gyNXpcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIzLjE0NyAyMS42NjhIMjUuMTQ3VjI2LjYyNTk5OTk5OTk5OTk5OEgyMy4xNDd6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyNC4xNDcgMjQuMTQ2KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTUgMjVIMTdWMzBIMTV6XCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk01LjM3NSAyMy4xNDdIMTAuMzMzVjI1LjE0N0g1LjM3NXpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDcuODUzIDI0LjE0NilcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTIgMTVIN1YxN0gyelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNi44NTQgNS4zNzVIOC44NTRWMTAuMzMzSDYuODU0elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgNy44NTQgNy44NTMpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xNiwxMGE2LDYsMCwxLDAsNiw2LDYsNiwwLDAsMC02LTZaXCIgfSB9XSwgXCJuYW1lXCI6IFwibGlnaHQtLWZpbGxlZFwiLCBcInNpemVcIjogMTYgfSwgXCJzaXplXCI6IDE2IH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIxNlxcXCIgaGVpZ2h0PVxcXCIxNlxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTE1IDJIMTdWN0gxNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjEuNjY4IDYuODU0SDI2LjYyNTk5OTk5OTk5OTk5OFY4Ljg1NEgyMS42Njh6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjQuMTQ3IDcuODUzKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yNSAxNUgzMFYxN0gyNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMjMuMTQ3IDIxLjY2OEgyNS4xNDdWMjYuNjI1OTk5OTk5OTk5OTk4SDIzLjE0N3pcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyNC4xNDcgMjQuMTQ2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xNSAyNUgxN1YzMEgxNXpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNS4zNzUgMjMuMTQ3SDEwLjMzM1YyNS4xNDdINS4zNzV6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgNy44NTMgMjQuMTQ2KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0yIDE1SDdWMTdIMnpcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNi44NTQgNS4zNzVIOC44NTRWMTAuMzMzSDYuODU0elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDcuODU0IDcuODUzKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xNiwxMGE2LDYsMCwxLDAsNiw2LDYsNiwwLDAsMC02LTZaXFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIExpZ2h0RmlsbGVkRGlyZWN0aXZlXzEgPSBMaWdodEZpbGxlZERpcmVjdGl2ZTtcbiAgICBMaWdodEZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIExpZ2h0RmlsbGVkRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIrKztcbiAgICAgICAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGlnaHQtZmlsbGVkLVwiICsgTGlnaHRGaWxsZWREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcImxpZ2h0LWZpbGxlZC1cIiArIExpZ2h0RmlsbGVkRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgTGlnaHRGaWxsZWREaXJlY3RpdmVfMTtcbiAgICBMaWdodEZpbGxlZERpcmVjdGl2ZS50aXRsZUlkQ291bnRlciA9IDA7XG4gICAgTGlnaHRGaWxsZWREaXJlY3RpdmUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG4gICAgXTsgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBMaWdodEZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGlnaHRGaWxsZWREaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIExpZ2h0RmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTGlnaHRGaWxsZWREaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIExpZ2h0RmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpc0ZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIExpZ2h0RmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgTGlnaHRGaWxsZWREaXJlY3RpdmUgPSBMaWdodEZpbGxlZERpcmVjdGl2ZV8xID0gX19kZWNvcmF0ZShbXG4gICAgICAgIERpcmVjdGl2ZSh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJbaWJtSWNvbkxpZ2h0RmlsbGVkXVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWZdKVxuICAgIF0sIExpZ2h0RmlsbGVkRGlyZWN0aXZlKTtcbiAgICByZXR1cm4gTGlnaHRGaWxsZWREaXJlY3RpdmU7XG59KCkpO1xudmFyIExpZ2h0RmlsbGVkTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIExpZ2h0RmlsbGVkTW9kdWxlKCkge1xuICAgIH1cbiAgICBMaWdodEZpbGxlZE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICBMaWdodEZpbGxlZENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBMaWdodEZpbGxlZERpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgTGlnaHRGaWxsZWRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgTGlnaHRGaWxsZWREaXJlY3RpdmUsXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pXG4gICAgXSwgTGlnaHRGaWxsZWRNb2R1bGUpO1xuICAgIHJldHVybiBMaWdodEZpbGxlZE1vZHVsZTtcbn0oKSk7XG5cbmV4cG9ydCB7IExpZ2h0RmlsbGVkQ29tcG9uZW50LCBMaWdodEZpbGxlZERpcmVjdGl2ZSwgTGlnaHRGaWxsZWRNb2R1bGUgfTtcbiJdfQ==