import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthDenominateComponent = /** @class */ (function () {
    function WatsonHealthDenominateComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthDenominateComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthDenominateComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateComponent.prototype, "size", void 0);
WatsonHealthDenominateComponent.ɵfac = function WatsonHealthDenominateComponent_Factory(t) { return new (t || WatsonHealthDenominateComponent)(); };
WatsonHealthDenominateComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthDenominateComponent, selectors: [["ibm-icon-watson-health-denominate"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthDenominate", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthDenominateComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthDenominateDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthDenominateComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-denominate",
                template: "\n    <svg\n      ibmIconWatsonHealthDenominate\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthDenominateComponent;
}());
var WatsonHealthDenominateDirective = /** @class */ (function () {
    function WatsonHealthDenominateDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthDenominate32", "filepath": "watson-health/denominate/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z" } }, { "elem": "path", "attrs": { "d": "M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z" } }], "name": "denominate", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z\"></path><path d=\"M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthDenominate24", "filepath": "watson-health/denominate/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z" } }, { "elem": "path", "attrs": { "d": "M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z" } }], "name": "denominate", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z\"></path><path d=\"M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthDenominate20", "filepath": "watson-health/denominate/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z" } }, { "elem": "path", "attrs": { "d": "M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z" } }], "name": "denominate", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z\"></path><path d=\"M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthDenominate16", "filepath": "watson-health/denominate/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z" } }, { "elem": "path", "attrs": { "d": "M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z" } }], "name": "denominate", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25 23H19a3 3 0 00-3 3v2h2V26a1 1 0 011-1h6a1 1 0 011 1v2h2V26A3 3 0 0025 23zM18 18a4 4 0 104-4A4 4 0 0018 18zm6 0a2 2 0 11-2-2A2 2 0 0124 18zM15 15.415L13.586 14 11 16.587 8.414 14 7 15.415 9.586 18 7 20.586 8.414 22 11 19.414 13.586 22 15 20.586 12.414 18 15 15.415z\"></path><path d=\"M14,26H4V6h7.1716l3.4141,3.4143L15.1716,10H28v8h2V10a2,2,0,0,0-2-2H16L12.5859,4.5858A2,2,0,0,0,11.1716,4H4A2,2,0,0,0,2,6V26a2,2,0,0,0,2,2H14Z\"></path></svg>"
            },
        };
    }
    WatsonHealthDenominateDirective_1 = WatsonHealthDenominateDirective;
    WatsonHealthDenominateDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthDenominateDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-denominate-" + WatsonHealthDenominateDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-denominate-" + WatsonHealthDenominateDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthDenominateDirective_1;
    WatsonHealthDenominateDirective.titleIdCounter = 0;
    WatsonHealthDenominateDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthDenominateDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthDenominateDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthDenominateDirective.prototype, "size", void 0);
    WatsonHealthDenominateDirective = WatsonHealthDenominateDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthDenominateDirective);
WatsonHealthDenominateDirective.ɵfac = function WatsonHealthDenominateDirective_Factory(t) { return new (t || WatsonHealthDenominateDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthDenominateDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthDenominateDirective, selectors: [["", "ibmIconWatsonHealthDenominate", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthDenominateDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthDenominate]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthDenominateDirective;
}());
var WatsonHealthDenominateModule = /** @class */ (function () {
    function WatsonHealthDenominateModule() {
    }
WatsonHealthDenominateModule.ɵfac = function WatsonHealthDenominateModule_Factory(t) { return new (t || WatsonHealthDenominateModule)(); };
WatsonHealthDenominateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthDenominateModule });
WatsonHealthDenominateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthDenominateModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthDenominateComponent,
                    WatsonHealthDenominateDirective,
                ],
                exports: [
                    WatsonHealthDenominateComponent,
                    WatsonHealthDenominateDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthDenominateModule, { declarations: [WatsonHealthDenominateComponent, WatsonHealthDenominateDirective], exports: [WatsonHealthDenominateComponent, WatsonHealthDenominateDirective] }); })();
    return WatsonHealthDenominateModule;
}());

export { WatsonHealthDenominateComponent, WatsonHealthDenominateDirective, WatsonHealthDenominateModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,