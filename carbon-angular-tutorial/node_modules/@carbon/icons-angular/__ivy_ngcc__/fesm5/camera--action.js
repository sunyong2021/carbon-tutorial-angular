import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var CameraActionComponent = /** @class */ (function () {
    function CameraActionComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], CameraActionComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], CameraActionComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionComponent.prototype, "size", void 0);
CameraActionComponent.ɵfac = function CameraActionComponent_Factory(t) { return new (t || CameraActionComponent)(); };
CameraActionComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CameraActionComponent, selectors: [["ibm-icon-camera-action"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconCameraAction", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function CameraActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [CameraActionDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CameraActionComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-camera-action",
                template: "\n    <svg\n      ibmIconCameraAction\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return CameraActionComponent;
}());
var CameraActionDirective = /** @class */ (function () {
    function CameraActionDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "CameraAction32", "filepath": "camera--action/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z" } }, { "elem": "path", "attrs": { "d": "M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z" } }, { "elem": "path", "attrs": { "d": "M19 9H26V11H19z" } }, { "elem": "circle", "attrs": { "cx": "12", "cy": "17", "r": "1" } }], "name": "camera--action", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z\"></path><path d=\"M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z\"></path><path d=\"M19 9H26V11H19z\"></path><circle cx=\"12\" cy=\"17\" r=\"1\"></circle></svg>"
            },
            "24": {
                metadata: { "moduleName": "CameraAction24", "filepath": "camera--action/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z" } }, { "elem": "path", "attrs": { "d": "M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z" } }, { "elem": "path", "attrs": { "d": "M19 9H26V11H19z" } }, { "elem": "circle", "attrs": { "cx": "12", "cy": "17", "r": "1" } }], "name": "camera--action", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z\"></path><path d=\"M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z\"></path><path d=\"M19 9H26V11H19z\"></path><circle cx=\"12\" cy=\"17\" r=\"1\"></circle></svg>"
            },
            "20": {
                metadata: { "moduleName": "CameraAction20", "filepath": "camera--action/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z" } }, { "elem": "path", "attrs": { "d": "M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z" } }, { "elem": "path", "attrs": { "d": "M19 9H26V11H19z" } }, { "elem": "circle", "attrs": { "cx": "12", "cy": "17", "r": "1" } }], "name": "camera--action", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z\"></path><path d=\"M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z\"></path><path d=\"M19 9H26V11H19z\"></path><circle cx=\"12\" cy=\"17\" r=\"1\"></circle></svg>"
            },
            "16": {
                metadata: { "moduleName": "CameraAction16", "filepath": "camera--action/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z" } }, { "elem": "path", "attrs": { "d": "M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z" } }, { "elem": "path", "attrs": { "d": "M19 9H26V11H19z" } }, { "elem": "circle", "attrs": { "cx": "12", "cy": "17", "r": "1" } }], "name": "camera--action", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M12,23a6,6,0,1,1,6-6A6,6,0,0,1,12,23Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,12,13Z\"></path><path d=\"M29,27H3a1,1,0,0,1-1-1V6A1,1,0,0,1,3,5H29a1,1,0,0,1,1,1V26A1,1,0,0,1,29,27ZM4,25H28V7H4Z\"></path><path d=\"M19 9H26V11H19z\"></path><circle cx=\"12\" cy=\"17\" r=\"1\"></circle></svg>"
            },
        };
    }
    CameraActionDirective_1 = CameraActionDirective;
    CameraActionDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            CameraActionDirective_1.titleIdCounter++;
            title.setAttribute("id", "camera-action-" + CameraActionDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "camera-action-" + CameraActionDirective_1.titleIdCounter);
        }
    };
    var CameraActionDirective_1;
    CameraActionDirective.titleIdCounter = 0;
    CameraActionDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], CameraActionDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], CameraActionDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], CameraActionDirective.prototype, "size", void 0);
    CameraActionDirective = CameraActionDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], CameraActionDirective);
CameraActionDirective.ɵfac = function CameraActionDirective_Factory(t) { return new (t || CameraActionDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
CameraActionDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CameraActionDirective, selectors: [["", "ibmIconCameraAction", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CameraActionDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconCameraAction]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return CameraActionDirective;
}());
var CameraActionModule = /** @class */ (function () {
    function CameraActionModule() {
    }
CameraActionModule.ɵfac = function CameraActionModule_Factory(t) { return new (t || CameraActionModule)(); };
CameraActionModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CameraActionModule });
CameraActionModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CameraActionModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    CameraActionComponent,
                    CameraActionDirective,
                ],
                exports: [
                    CameraActionComponent,
                    CameraActionDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CameraActionModule, { declarations: [CameraActionComponent, CameraActionDirective], exports: [CameraActionComponent, CameraActionDirective] }); })();
    return CameraActionModule;
}());

export { CameraActionComponent, CameraActionDirective, CameraActionModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,