import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var MicrophoneOffFilledComponent = /** @class */ (function () {
    function MicrophoneOffFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicrophoneOffFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicrophoneOffFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledComponent.prototype, "size", void 0);
MicrophoneOffFilledComponent.ɵfac = function MicrophoneOffFilledComponent_Factory(t) { return new (t || MicrophoneOffFilledComponent)(); };
MicrophoneOffFilledComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MicrophoneOffFilledComponent, selectors: [["ibm-icon-microphone-off-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconMicrophoneOffFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function MicrophoneOffFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [MicrophoneOffFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicrophoneOffFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-microphone-off-filled",
                template: "\n    <svg\n      ibmIconMicrophoneOffFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MicrophoneOffFilledComponent;
}());
var MicrophoneOffFilledDirective = /** @class */ (function () {
    function MicrophoneOffFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "MicrophoneOffFilled32", "filepath": "microphone--off--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z" } }], "name": "microphone--off--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "MicrophoneOffFilled24", "filepath": "microphone--off--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z" } }], "name": "microphone--off--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "MicrophoneOffFilled20", "filepath": "microphone--off--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z" } }], "name": "microphone--off--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "MicrophoneOffFilled16", "filepath": "microphone--off--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z" } }], "name": "microphone--off--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M23 17a7 7 0 01-11.73 5.14l1.42-1.41A5 5 0 0021 17V12.42l9-9L28.59 2 2 28.59 3.41 30l6.44-6.44A8.91 8.91 0 0015 25.94V28H11v2H21V28H17V25.94A9 9 0 0025 17V14H23zM9 17.32c0-.11 0-.21 0-.32V14H7v3a9 9 0 00.25 2.09zM20.76 5.58A5 5 0 0011 7v8.34z\"></path></svg>"
            },
        };
    }
    MicrophoneOffFilledDirective_1 = MicrophoneOffFilledDirective;
    MicrophoneOffFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            MicrophoneOffFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "microphone-off-filled-" + MicrophoneOffFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "microphone-off-filled-" + MicrophoneOffFilledDirective_1.titleIdCounter);
        }
    };
    var MicrophoneOffFilledDirective_1;
    MicrophoneOffFilledDirective.titleIdCounter = 0;
    MicrophoneOffFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicrophoneOffFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicrophoneOffFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicrophoneOffFilledDirective.prototype, "size", void 0);
    MicrophoneOffFilledDirective = MicrophoneOffFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], MicrophoneOffFilledDirective);
MicrophoneOffFilledDirective.ɵfac = function MicrophoneOffFilledDirective_Factory(t) { return new (t || MicrophoneOffFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MicrophoneOffFilledDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MicrophoneOffFilledDirective, selectors: [["", "ibmIconMicrophoneOffFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicrophoneOffFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconMicrophoneOffFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MicrophoneOffFilledDirective;
}());
var MicrophoneOffFilledModule = /** @class */ (function () {
    function MicrophoneOffFilledModule() {
    }
MicrophoneOffFilledModule.ɵfac = function MicrophoneOffFilledModule_Factory(t) { return new (t || MicrophoneOffFilledModule)(); };
MicrophoneOffFilledModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MicrophoneOffFilledModule });
MicrophoneOffFilledModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicrophoneOffFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MicrophoneOffFilledComponent,
                    MicrophoneOffFilledDirective,
                ],
                exports: [
                    MicrophoneOffFilledComponent,
                    MicrophoneOffFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MicrophoneOffFilledModule, { declarations: [MicrophoneOffFilledComponent, MicrophoneOffFilledDirective], exports: [MicrophoneOffFilledComponent, MicrophoneOffFilledDirective] }); })();
    return MicrophoneOffFilledModule;
}());

export { MicrophoneOffFilledComponent, MicrophoneOffFilledDirective, MicrophoneOffFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWljcm9waG9uZS0tb2ZmLS1maWxsZWQuanMiLCJzb3VyY2VzIjpbIm1pY3JvcGhvbmUtLW9mZi0tZmlsbGVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQU1xQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFJTztBQUNQOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7b1JBWWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX19kZWNvcmF0ZSwgX19tZXRhZGF0YSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IElucHV0LCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIERpcmVjdGl2ZSwgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldEF0dHJpYnV0ZXMgfSBmcm9tICdAY2FyYm9uL2ljb24taGVscGVycyc7XG5cbnZhciBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9waG9uZU9mZkZpbGxlZENvbXBvbmVudC5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcImlibS1pY29uLW1pY3JvcGhvbmUtb2ZmLWZpbGxlZFwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uTWljcm9waG9uZU9mZkZpbGxlZFxcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIE1pY3JvcGhvbmVPZmZGaWxsZWRDb21wb25lbnQpO1xuICAgIHJldHVybiBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50O1xufSgpKTtcbnZhciBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmUoZWxlbWVudFJlZikge1xuICAgICAgICB0aGlzLmVsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICAgICAgICB0aGlzLmlzRm9jdXNhYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaWNvbnMgPSB7XG4gICAgICAgICAgICBcIjMyXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJNaWNyb3Bob25lT2ZmRmlsbGVkMzJcIiwgXCJmaWxlcGF0aFwiOiBcIm1pY3JvcGhvbmUtLW9mZi0tZmlsbGVkLzMyLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAzMiwgXCJoZWlnaHRcIjogMzIgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XCIgfSB9XSwgXCJuYW1lXCI6IFwibWljcm9waG9uZS0tb2ZmLS1maWxsZWRcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJNaWNyb3Bob25lT2ZmRmlsbGVkMjRcIiwgXCJmaWxlcGF0aFwiOiBcIm1pY3JvcGhvbmUtLW9mZi0tZmlsbGVkLzI0LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyNCwgXCJoZWlnaHRcIjogMjQgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XCIgfSB9XSwgXCJuYW1lXCI6IFwibWljcm9waG9uZS0tb2ZmLS1maWxsZWRcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjIwXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJNaWNyb3Bob25lT2ZmRmlsbGVkMjBcIiwgXCJmaWxlcGF0aFwiOiBcIm1pY3JvcGhvbmUtLW9mZi0tZmlsbGVkLzIwLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyMCwgXCJoZWlnaHRcIjogMjAgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XCIgfSB9XSwgXCJuYW1lXCI6IFwibWljcm9waG9uZS0tb2ZmLS1maWxsZWRcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjE2XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJNaWNyb3Bob25lT2ZmRmlsbGVkMTZcIiwgXCJmaWxlcGF0aFwiOiBcIm1pY3JvcGhvbmUtLW9mZi0tZmlsbGVkLzE2LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAxNiwgXCJoZWlnaHRcIjogMTYgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XCIgfSB9XSwgXCJuYW1lXCI6IFwibWljcm9waG9uZS0tb2ZmLS1maWxsZWRcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yMyAxN2E3IDcgMCAwMS0xMS43MyA1LjE0bDEuNDItMS40MUE1IDUgMCAwMDIxIDE3VjEyLjQybDktOUwyOC41OSAyIDIgMjguNTkgMy40MSAzMGw2LjQ0LTYuNDRBOC45MSA4LjkxIDAgMDAxNSAyNS45NFYyOEgxMXYySDIxVjI4SDE3VjI1Ljk0QTkgOSAwIDAwMjUgMTdWMTRIMjN6TTkgMTcuMzJjMC0uMTEgMC0uMjEgMC0uMzJWMTRIN3YzYTkgOSAwIDAwLjI1IDIuMDl6TTIwLjc2IDUuNThBNSA1IDAgMDAxMSA3djguMzR6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmVfMSA9IE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmU7XG4gICAgTWljcm9waG9uZU9mZkZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJtaWNyb3Bob25lLW9mZi1maWxsZWQtXCIgKyBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJtaWNyb3Bob25lLW9mZi1maWxsZWQtXCIgKyBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgTWljcm9waG9uZU9mZkZpbGxlZERpcmVjdGl2ZV8xO1xuICAgIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG4gICAgXTsgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9waG9uZU9mZkZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTWljcm9waG9uZU9mZkZpbGxlZERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgTWljcm9waG9uZU9mZkZpbGxlZERpcmVjdGl2ZSA9IE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25NaWNyb3Bob25lT2ZmRmlsbGVkXVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWZdKVxuICAgIF0sIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmUpO1xuICAgIHJldHVybiBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlO1xufSgpKTtcbnZhciBNaWNyb3Bob25lT2ZmRmlsbGVkTW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1pY3JvcGhvbmVPZmZGaWxsZWRNb2R1bGUoKSB7XG4gICAgfVxuICAgIE1pY3JvcGhvbmVPZmZGaWxsZWRNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgTWljcm9waG9uZU9mZkZpbGxlZENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGV4cG9ydHM6IFtcbiAgICAgICAgICAgICAgICBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIE1pY3JvcGhvbmVPZmZGaWxsZWREaXJlY3RpdmUsXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pXG4gICAgXSwgTWljcm9waG9uZU9mZkZpbGxlZE1vZHVsZSk7XG4gICAgcmV0dXJuIE1pY3JvcGhvbmVPZmZGaWxsZWRNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBNaWNyb3Bob25lT2ZmRmlsbGVkQ29tcG9uZW50LCBNaWNyb3Bob25lT2ZmRmlsbGVkRGlyZWN0aXZlLCBNaWNyb3Bob25lT2ZmRmlsbGVkTW9kdWxlIH07XG4iXX0=