import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthCdCreateArchiveComponent = /** @class */ (function () {
    function WatsonHealthCdCreateArchiveComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveComponent.prototype, "size", void 0);
WatsonHealthCdCreateArchiveComponent.ɵfac = function WatsonHealthCdCreateArchiveComponent_Factory(t) { return new (t || WatsonHealthCdCreateArchiveComponent)(); };
WatsonHealthCdCreateArchiveComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthCdCreateArchiveComponent, selectors: [["ibm-icon-watson-health-cd-create-archive"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthCdCreateArchive", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthCdCreateArchiveComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthCdCreateArchiveDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthCdCreateArchiveComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-cd-create-archive",
                template: "\n    <svg\n      ibmIconWatsonHealthCdCreateArchive\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthCdCreateArchiveComponent;
}());
var WatsonHealthCdCreateArchiveDirective = /** @class */ (function () {
    function WatsonHealthCdCreateArchiveDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthCdCreateArchive32", "filepath": "watson-health/cd--create-archive/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z" } }, { "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z" } }, { "elem": "path", "attrs": { "d": "M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z" } }], "name": "cd--create-archive", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z\"></path><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z\"></path><path d=\"M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthCdCreateArchive24", "filepath": "watson-health/cd--create-archive/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z" } }, { "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z" } }, { "elem": "path", "attrs": { "d": "M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z" } }], "name": "cd--create-archive", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z\"></path><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z\"></path><path d=\"M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthCdCreateArchive20", "filepath": "watson-health/cd--create-archive/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z" } }, { "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z" } }, { "elem": "path", "attrs": { "d": "M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z" } }], "name": "cd--create-archive", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z\"></path><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z\"></path><path d=\"M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthCdCreateArchive16", "filepath": "watson-health/cd--create-archive/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z" } }, { "elem": "circle", "attrs": { "cx": "14", "cy": "14", "r": "2" } }, { "elem": "path", "attrs": { "d": "M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z" } }, { "elem": "path", "attrs": { "d": "M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z" } }], "name": "cd--create-archive", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M14,20a6,6,0,1,1,6-6A6,6,0,0,1,14,20Zm0-10a4,4,0,1,0,4,4A4,4,0,0,0,14,10Z\"></path><circle cx=\"14\" cy=\"14\" r=\"2\"></circle><path d=\"M17,23.54A10,10,0,1,1,24,14c0,.34,0,.67-.05,1h2c0-.33.05-.66.05-1A12,12,0,1,0,14,26a12.33,12.33,0,0,0,3-.39Z\"></path><path d=\"M25,30l-2.14-1A5,5,0,0,1,20,24.47V18H30v6.47A5,5,0,0,1,27.14,29ZM22,20v4.47a3,3,0,0,0,1.72,2.71l1.28.61,1.28-.61A3,3,0,0,0,28,24.47V20Z\"></path></svg>"
            },
        };
    }
    WatsonHealthCdCreateArchiveDirective_1 = WatsonHealthCdCreateArchiveDirective;
    WatsonHealthCdCreateArchiveDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthCdCreateArchiveDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-cd-create-archive-" + WatsonHealthCdCreateArchiveDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-cd-create-archive-" + WatsonHealthCdCreateArchiveDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthCdCreateArchiveDirective_1;
    WatsonHealthCdCreateArchiveDirective.titleIdCounter = 0;
    WatsonHealthCdCreateArchiveDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthCdCreateArchiveDirective.prototype, "size", void 0);
    WatsonHealthCdCreateArchiveDirective = WatsonHealthCdCreateArchiveDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthCdCreateArchiveDirective);
WatsonHealthCdCreateArchiveDirective.ɵfac = function WatsonHealthCdCreateArchiveDirective_Factory(t) { return new (t || WatsonHealthCdCreateArchiveDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthCdCreateArchiveDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthCdCreateArchiveDirective, selectors: [["", "ibmIconWatsonHealthCdCreateArchive", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthCdCreateArchiveDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthCdCreateArchive]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthCdCreateArchiveDirective;
}());
var WatsonHealthCdCreateArchiveModule = /** @class */ (function () {
    function WatsonHealthCdCreateArchiveModule() {
    }
WatsonHealthCdCreateArchiveModule.ɵfac = function WatsonHealthCdCreateArchiveModule_Factory(t) { return new (t || WatsonHealthCdCreateArchiveModule)(); };
WatsonHealthCdCreateArchiveModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthCdCreateArchiveModule });
WatsonHealthCdCreateArchiveModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthCdCreateArchiveModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthCdCreateArchiveComponent,
                    WatsonHealthCdCreateArchiveDirective,
                ],
                exports: [
                    WatsonHealthCdCreateArchiveComponent,
                    WatsonHealthCdCreateArchiveDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthCdCreateArchiveModule, { declarations: [WatsonHealthCdCreateArchiveComponent, WatsonHealthCdCreateArchiveDirective], exports: [WatsonHealthCdCreateArchiveComponent, WatsonHealthCdCreateArchiveDirective] }); })();
    return WatsonHealthCdCreateArchiveModule;
}());

export { WatsonHealthCdCreateArchiveComponent, WatsonHealthCdCreateArchiveDirective, WatsonHealthCdCreateArchiveModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,