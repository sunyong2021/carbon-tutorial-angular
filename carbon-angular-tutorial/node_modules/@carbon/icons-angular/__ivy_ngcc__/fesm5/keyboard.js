import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var KeyboardComponent = /** @class */ (function () {
    function KeyboardComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], KeyboardComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], KeyboardComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardComponent.prototype, "size", void 0);
KeyboardComponent.ɵfac = function KeyboardComponent_Factory(t) { return new (t || KeyboardComponent)(); };
KeyboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: KeyboardComponent, selectors: [["ibm-icon-keyboard"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconKeyboard", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function KeyboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [KeyboardDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-keyboard",
                template: "\n    <svg\n      ibmIconKeyboard\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return KeyboardComponent;
}());
var KeyboardDirective = /** @class */ (function () {
    function KeyboardDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Keyboard32", "filepath": "keyboard/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z" } }, { "elem": "path", "attrs": { "d": "M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z" } }], "name": "keyboard", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z\"></path><path d=\"M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Keyboard24", "filepath": "keyboard/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z" } }, { "elem": "path", "attrs": { "d": "M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z" } }], "name": "keyboard", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z\"></path><path d=\"M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Keyboard20", "filepath": "keyboard/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z" } }, { "elem": "path", "attrs": { "d": "M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z" } }], "name": "keyboard", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z\"></path><path d=\"M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Keyboard16", "filepath": "keyboard/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z" } }, { "elem": "path", "attrs": { "d": "M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z" } }], "name": "keyboard", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,26H4a2,2,0,0,1-2-2V10A2,2,0,0,1,4,8H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,10V24H28V10Z\"></path><path d=\"M10 20H21V22H10zM6 12H8V14H6zM10 12H12V14H10zM14 12H16V14H14zM18 12H20V14H18zM6 20H8V22H6zM6 16H8V18H6zM10 16H12V18H10zM14 16H16V18H14zM22 12H26V14H22zM22 16H26V18H22zM18 16H20V18H18zM23 20H26V22H23z\"></path></svg>"
            },
        };
    }
    KeyboardDirective_1 = KeyboardDirective;
    KeyboardDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            KeyboardDirective_1.titleIdCounter++;
            title.setAttribute("id", "keyboard-" + KeyboardDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "keyboard-" + KeyboardDirective_1.titleIdCounter);
        }
    };
    var KeyboardDirective_1;
    KeyboardDirective.titleIdCounter = 0;
    KeyboardDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], KeyboardDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], KeyboardDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], KeyboardDirective.prototype, "size", void 0);
    KeyboardDirective = KeyboardDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], KeyboardDirective);
KeyboardDirective.ɵfac = function KeyboardDirective_Factory(t) { return new (t || KeyboardDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
KeyboardDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: KeyboardDirective, selectors: [["", "ibmIconKeyboard", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconKeyboard]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return KeyboardDirective;
}());
var KeyboardModule = /** @class */ (function () {
    function KeyboardModule() {
    }
KeyboardModule.ɵfac = function KeyboardModule_Factory(t) { return new (t || KeyboardModule)(); };
KeyboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: KeyboardModule });
KeyboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyboardModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    KeyboardComponent,
                    KeyboardDirective,
                ],
                exports: [
                    KeyboardComponent,
                    KeyboardDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(KeyboardModule, { declarations: [KeyboardComponent, KeyboardDirective], exports: [KeyboardComponent, KeyboardDirective] }); })();
    return KeyboardModule;
}());

export { KeyboardComponent, KeyboardDirective, KeyboardModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,