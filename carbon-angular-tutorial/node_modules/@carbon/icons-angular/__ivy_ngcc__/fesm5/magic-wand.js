import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var MagicWandComponent = /** @class */ (function () {
    function MagicWandComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandComponent.prototype, "size", void 0);
MagicWandComponent.ɵfac = function MagicWandComponent_Factory(t) { return new (t || MagicWandComponent)(); };
MagicWandComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MagicWandComponent, selectors: [["ibm-icon-magic-wand"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconMagicWand", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function MagicWandComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [MagicWandDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-magic-wand",
                template: "\n    <svg\n      ibmIconMagicWand\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MagicWandComponent;
}());
var MagicWandDirective = /** @class */ (function () {
    function MagicWandDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "MagicWand32", "filepath": "magic-wand/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "MagicWand24", "filepath": "magic-wand/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "MagicWand20", "filepath": "magic-wand/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "MagicWand16", "filepath": "magic-wand/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z" } }, { "elem": "path", "attrs": { "d": "M2.586 14.586H5.414V17.414H2.586z", "transform": "rotate(-45 4 16)" } }, { "elem": "path", "attrs": { "d": "M14.586 2.586H17.414V5.414H14.586z", "transform": "rotate(-45 16 4)" } }, { "elem": "path", "attrs": { "d": "M2.586 2.586H5.414V5.414H2.586z", "transform": "rotate(-45 4 4)" } }], "name": "magic-wand", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4141,24,12,6.5859a2.0476,2.0476,0,0,0-2.8281,0l-2.586,2.586a2.0021,2.0021,0,0,0,0,2.8281L23.999,29.4141a2.0024,2.0024,0,0,0,2.8281,0l2.587-2.5865a1.9993,1.9993,0,0,0,0-2.8281ZM8,10.5859,10.5859,8l5,5-2.5866,2.5869-5-5ZM25.4131,28l-11-10.999L17,14.4141l11,11Z\"></path><path d=\"M2.586 14.586H5.414V17.414H2.586z\" transform=\"rotate(-45 4 16)\"></path><path d=\"M14.586 2.586H17.414V5.414H14.586z\" transform=\"rotate(-45 16 4)\"></path><path d=\"M2.586 2.586H5.414V5.414H2.586z\" transform=\"rotate(-45 4 4)\"></path></svg>"
            },
        };
    }
    MagicWandDirective_1 = MagicWandDirective;
    MagicWandDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            MagicWandDirective_1.titleIdCounter++;
            title.setAttribute("id", "magic-wand-" + MagicWandDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "magic-wand-" + MagicWandDirective_1.titleIdCounter);
        }
    };
    var MagicWandDirective_1;
    MagicWandDirective.titleIdCounter = 0;
    MagicWandDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MagicWandDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MagicWandDirective.prototype, "size", void 0);
    MagicWandDirective = MagicWandDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], MagicWandDirective);
MagicWandDirective.ɵfac = function MagicWandDirective_Factory(t) { return new (t || MagicWandDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MagicWandDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MagicWandDirective, selectors: [["", "ibmIconMagicWand", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconMagicWand]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MagicWandDirective;
}());
var MagicWandModule = /** @class */ (function () {
    function MagicWandModule() {
    }
MagicWandModule.ɵfac = function MagicWandModule_Factory(t) { return new (t || MagicWandModule)(); };
MagicWandModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MagicWandModule });
MagicWandModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MagicWandModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MagicWandComponent,
                    MagicWandDirective,
                ],
                exports: [
                    MagicWandComponent,
                    MagicWandDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MagicWandModule, { declarations: [MagicWandComponent, MagicWandDirective], exports: [MagicWandComponent, MagicWandDirective] }); })();
    return MagicWandModule;
}());

export { MagicWandComponent, MagicWandDirective, MagicWandModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,