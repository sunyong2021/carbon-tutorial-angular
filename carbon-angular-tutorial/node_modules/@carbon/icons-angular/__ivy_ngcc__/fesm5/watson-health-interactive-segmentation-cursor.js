import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthInteractiveSegmentationCursorComponent = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorComponent.prototype, "size", void 0);
WatsonHealthInteractiveSegmentationCursorComponent.ɵfac = function WatsonHealthInteractiveSegmentationCursorComponent_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorComponent)(); };
WatsonHealthInteractiveSegmentationCursorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthInteractiveSegmentationCursorComponent, selectors: [["ibm-icon-watson-health-interactive-segmentation-cursor"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthInteractiveSegmentationCursor", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthInteractiveSegmentationCursorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthInteractiveSegmentationCursorDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-interactive-segmentation-cursor",
                template: "\n    <svg\n      ibmIconWatsonHealthInteractiveSegmentationCursor\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthInteractiveSegmentationCursorComponent;
}());
var WatsonHealthInteractiveSegmentationCursorDirective = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor32", "filepath": "watson-health/interactive-segmentation-cursor/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor24", "filepath": "watson-health/interactive-segmentation-cursor/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor20", "filepath": "watson-health/interactive-segmentation-cursor/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthInteractiveSegmentationCursor16", "filepath": "watson-health/interactive-segmentation-cursor/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z" } }, { "elem": "path", "attrs": { "d": "M7.586 18.586H10.414V21.413999999999998H7.586z", "transform": "rotate(-45 9 20)" } }, { "elem": "path", "attrs": { "d": "M18.586 7.586H21.413999999999998V10.414H18.586z", "transform": "rotate(-45 20 9)" } }, { "elem": "path", "attrs": { "d": "M7.586 7.586H10.414V10.414H7.586z", "transform": "rotate(-45 9 9)" } }, { "elem": "path", "attrs": { "d": "M11 2L2 2 2 11 4 11 4 4 11 4 11 2z" } }], "name": "interactive-segmentation-cursor", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M29.4139,24,15.9989,10.5663a2.0473,2.0473,0,0,0-2.8281,0l-2.586,2.586a2.0023,2.0023,0,0,0,0,2.8283L23.9989,29.4145a2.0021,2.0021,0,0,0,2.8281,0l2.5869-2.5865a1.9993,1.9993,0,0,0,0-2.8283Zm-17.415-9.4335,2.5859-2.5859,3.5,3.5L15.498,18.0676l-3.5-3.5ZM25.413,28l-8.5009-8.5188,2.5867-2.587L28,25.4143Z\"></path><path d=\"M7.586 18.586H10.414V21.413999999999998H7.586z\" transform=\"rotate(-45 9 20)\"></path><path d=\"M18.586 7.586H21.413999999999998V10.414H18.586z\" transform=\"rotate(-45 20 9)\"></path><path d=\"M7.586 7.586H10.414V10.414H7.586z\" transform=\"rotate(-45 9 9)\"></path><path d=\"M11 2L2 2 2 11 4 11 4 4 11 4 11 2z\"></path></svg>"
            },
        };
    }
    WatsonHealthInteractiveSegmentationCursorDirective_1 = WatsonHealthInteractiveSegmentationCursorDirective;
    WatsonHealthInteractiveSegmentationCursorDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-interactive-segmentation-cursor-" + WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-interactive-segmentation-cursor-" + WatsonHealthInteractiveSegmentationCursorDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthInteractiveSegmentationCursorDirective_1;
    WatsonHealthInteractiveSegmentationCursorDirective.titleIdCounter = 0;
    WatsonHealthInteractiveSegmentationCursorDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthInteractiveSegmentationCursorDirective.prototype, "size", void 0);
    WatsonHealthInteractiveSegmentationCursorDirective = WatsonHealthInteractiveSegmentationCursorDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthInteractiveSegmentationCursorDirective);
WatsonHealthInteractiveSegmentationCursorDirective.ɵfac = function WatsonHealthInteractiveSegmentationCursorDirective_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthInteractiveSegmentationCursorDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthInteractiveSegmentationCursorDirective, selectors: [["", "ibmIconWatsonHealthInteractiveSegmentationCursor", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthInteractiveSegmentationCursor]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthInteractiveSegmentationCursorDirective;
}());
var WatsonHealthInteractiveSegmentationCursorModule = /** @class */ (function () {
    function WatsonHealthInteractiveSegmentationCursorModule() {
    }
WatsonHealthInteractiveSegmentationCursorModule.ɵfac = function WatsonHealthInteractiveSegmentationCursorModule_Factory(t) { return new (t || WatsonHealthInteractiveSegmentationCursorModule)(); };
WatsonHealthInteractiveSegmentationCursorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthInteractiveSegmentationCursorModule });
WatsonHealthInteractiveSegmentationCursorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthInteractiveSegmentationCursorModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthInteractiveSegmentationCursorComponent,
                    WatsonHealthInteractiveSegmentationCursorDirective,
                ],
                exports: [
                    WatsonHealthInteractiveSegmentationCursorComponent,
                    WatsonHealthInteractiveSegmentationCursorDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthInteractiveSegmentationCursorModule, { declarations: [WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective], exports: [WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective] }); })();
    return WatsonHealthInteractiveSegmentationCursorModule;
}());

export { WatsonHealthInteractiveSegmentationCursorComponent, WatsonHealthInteractiveSegmentationCursorDirective, WatsonHealthInteractiveSegmentationCursorModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0c29uLWhlYWx0aC1pbnRlcmFjdGl2ZS1zZWdtZW50YXRpb24tY3Vyc29yLmpzIiwic291cmNlcyI6WyJ3YXRzb24taGVhbHRoLWludGVyYWN0aXZlLXNlZ21lbnRhdGlvbi1jdXJzb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRIQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7OztrWUFZd0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JDb21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJmb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckNvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcImlibS1pY29uLXdhdHNvbi1oZWFsdGgtaW50ZXJhY3RpdmUtc2VnbWVudGF0aW9uLWN1cnNvclwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JcXG4gICAgICBbc2l6ZV09XFxcInNpemVcXFwiXFxuICAgICAgW2FyaWFMYWJlbF09XFxcImFyaWFMYWJlbFxcXCJcXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVxcXCJhcmlhTGFiZWxsZWRieVxcXCJcXG4gICAgICBbYXJpYUhpZGRlbl09XFxcImFyaWFIaWRkZW5cXFwiXFxuICAgICAgW3RpdGxlXT1cXFwidGl0bGVcXFwiXFxuICAgICAgW2lzRm9jdXNhYmxlXT1cXFwiZm9jdXNhYmxlXFxcIlxcbiAgICAgIFthdHRyLmNsYXNzXT1cXFwiaW5uZXJDbGFzc1xcXCI+XFxuICAgIDwvc3ZnPlxcbiAgXCJcbiAgICAgICAgfSlcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckNvbXBvbmVudCk7XG4gICAgcmV0dXJuIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50O1xufSgpKTtcbnZhciBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIldhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yMzJcIiwgXCJmaWxlcGF0aFwiOiBcIndhdHNvbi1oZWFsdGgvaW50ZXJhY3RpdmUtc2VnbWVudGF0aW9uLWN1cnNvci8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNDEzOSwyNCwxNS45OTg5LDEwLjU2NjNhMi4wNDczLDIuMDQ3MywwLDAsMC0yLjgyODEsMGwtMi41ODYsMi41ODZhMi4wMDIzLDIuMDAyMywwLDAsMCwwLDIuODI4M0wyMy45OTg5LDI5LjQxNDVhMi4wMDIxLDIuMDAyMSwwLDAsMCwyLjgyODEsMGwyLjU4NjktMi41ODY1YTEuOTk5MywxLjk5OTMsMCwwLDAsMC0yLjgyODNabS0xNy40MTUtOS40MzM1LDIuNTg1OS0yLjU4NTksMy41LDMuNUwxNS40OTgsMTguMDY3NmwtMy41LTMuNVpNMjUuNDEzLDI4bC04LjUwMDktOC41MTg4LDIuNTg2Ny0yLjU4N0wyOCwyNS40MTQzWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNy41ODYgMTguNTg2SDEwLjQxNFYyMS40MTM5OTk5OTk5OTk5OThINy41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5IDIwKVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTguNTg2IDcuNTg2SDIxLjQxMzk5OTk5OTk5OTk5OFYxMC40MTRIMTguNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjAgOSlcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTcuNTg2IDcuNTg2SDEwLjQxNFYxMC40MTRINy41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5IDkpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xMSAyTDIgMiAyIDExIDQgMTEgNCA0IDExIDQgMTEgMnpcIiB9IH1dLCBcIm5hbWVcIjogXCJpbnRlcmFjdGl2ZS1zZWdtZW50YXRpb24tY3Vyc29yXCIsIFwic2l6ZVwiOiAzMiB9LCBcInNpemVcIjogMzIgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjMyXFxcIiBoZWlnaHQ9XFxcIjMyXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjkuNDEzOSwyNCwxNS45OTg5LDEwLjU2NjNhMi4wNDczLDIuMDQ3MywwLDAsMC0yLjgyODEsMGwtMi41ODYsMi41ODZhMi4wMDIzLDIuMDAyMywwLDAsMCwwLDIuODI4M0wyMy45OTg5LDI5LjQxNDVhMi4wMDIxLDIuMDAyMSwwLDAsMCwyLjgyODEsMGwyLjU4NjktMi41ODY1YTEuOTk5MywxLjk5OTMsMCwwLDAsMC0yLjgyODNabS0xNy40MTUtOS40MzM1LDIuNTg1OS0yLjU4NTksMy41LDMuNUwxNS40OTgsMTguMDY3NmwtMy41LTMuNVpNMjUuNDEzLDI4bC04LjUwMDktOC41MTg4LDIuNTg2Ny0yLjU4N0wyOCwyNS40MTQzWlxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk03LjU4NiAxOC41ODZIMTAuNDE0VjIxLjQxMzk5OTk5OTk5OTk5OEg3LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5IDIwKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xOC41ODYgNy41ODZIMjEuNDEzOTk5OTk5OTk5OTk4VjEwLjQxNEgxOC41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjAgOSlcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNy41ODYgNy41ODZIMTAuNDE0VjEwLjQxNEg3LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5IDkpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTExIDJMMiAyIDIgMTEgNCAxMSA0IDQgMTEgNCAxMSAyelxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyNFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3IyNFwiLCBcImZpbGVwYXRoXCI6IFwid2F0c29uLWhlYWx0aC9pbnRlcmFjdGl2ZS1zZWdtZW50YXRpb24tY3Vyc29yLzI0LmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyNCwgXCJoZWlnaHRcIjogMjQgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yOS40MTM5LDI0LDE1Ljk5ODksMTAuNTY2M2EyLjA0NzMsMi4wNDczLDAsMCwwLTIuODI4MSwwbC0yLjU4NiwyLjU4NmEyLjAwMjMsMi4wMDIzLDAsMCwwLDAsMi44MjgzTDIzLjk5ODksMjkuNDE0NWEyLjAwMjEsMi4wMDIxLDAsMCwwLDIuODI4MSwwbDIuNTg2OS0yLjU4NjVhMS45OTkzLDEuOTk5MywwLDAsMCwwLTIuODI4M1ptLTE3LjQxNS05LjQzMzUsMi41ODU5LTIuNTg1OSwzLjUsMy41TDE1LjQ5OCwxOC4wNjc2bC0zLjUtMy41Wk0yNS40MTMsMjhsLTguNTAwOS04LjUxODgsMi41ODY3LTIuNTg3TDI4LDI1LjQxNDNaXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk03LjU4NiAxOC41ODZIMTAuNDE0VjIxLjQxMzk5OTk5OTk5OTk5OEg3LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkgMjApXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xOC41ODYgNy41ODZIMjEuNDEzOTk5OTk5OTk5OTk4VjEwLjQxNEgxOC41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSAyMCA5KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNy41ODYgNy41ODZIMTAuNDE0VjEwLjQxNEg3LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDkgOSlcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTExIDJMMiAyIDIgMTEgNCAxMSA0IDQgMTEgNCAxMSAyelwiIH0gfV0sIFwibmFtZVwiOiBcImludGVyYWN0aXZlLXNlZ21lbnRhdGlvbi1jdXJzb3JcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yOS40MTM5LDI0LDE1Ljk5ODksMTAuNTY2M2EyLjA0NzMsMi4wNDczLDAsMCwwLTIuODI4MSwwbC0yLjU4NiwyLjU4NmEyLjAwMjMsMi4wMDIzLDAsMCwwLDAsMi44MjgzTDIzLjk5ODksMjkuNDE0NWEyLjAwMjEsMi4wMDIxLDAsMCwwLDIuODI4MSwwbDIuNTg2OS0yLjU4NjVhMS45OTkzLDEuOTk5MywwLDAsMCwwLTIuODI4M1ptLTE3LjQxNS05LjQzMzUsMi41ODU5LTIuNTg1OSwzLjUsMy41TDE1LjQ5OCwxOC4wNjc2bC0zLjUtMy41Wk0yNS40MTMsMjhsLTguNTAwOS04LjUxODgsMi41ODY3LTIuNTg3TDI4LDI1LjQxNDNaXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTcuNTg2IDE4LjU4NkgxMC40MTRWMjEuNDEzOTk5OTk5OTk5OTk4SDcuNTg2elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDkgMjApXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTE4LjU4NiA3LjU4NkgyMS40MTM5OTk5OTk5OTk5OThWMTAuNDE0SDE4LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSAyMCA5KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk03LjU4NiA3LjU4NkgxMC40MTRWMTAuNDE0SDcuNTg2elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDkgOSlcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTEgMkwyIDIgMiAxMSA0IDExIDQgNCAxMSA0IDExIDJ6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjIwXCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvcjIwXCIsIFwiZmlsZXBhdGhcIjogXCJ3YXRzb24taGVhbHRoL2ludGVyYWN0aXZlLXNlZ21lbnRhdGlvbi1jdXJzb3IvMjAuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDIwLCBcImhlaWdodFwiOiAyMCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI5LjQxMzksMjQsMTUuOTk4OSwxMC41NjYzYTIuMDQ3MywyLjA0NzMsMCwwLDAtMi44MjgxLDBsLTIuNTg2LDIuNTg2YTIuMDAyMywyLjAwMjMsMCwwLDAsMCwyLjgyODNMMjMuOTk4OSwyOS40MTQ1YTIuMDAyMSwyLjAwMjEsMCwwLDAsMi44MjgxLDBsMi41ODY5LTIuNTg2NWExLjk5OTMsMS45OTkzLDAsMCwwLDAtMi44MjgzWm0tMTcuNDE1LTkuNDMzNSwyLjU4NTktMi41ODU5LDMuNSwzLjVMMTUuNDk4LDE4LjA2NzZsLTMuNS0zLjVaTTI1LjQxMywyOGwtOC41MDA5LTguNTE4OCwyLjU4NjctMi41ODdMMjgsMjUuNDE0M1pcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTcuNTg2IDE4LjU4NkgxMC40MTRWMjEuNDEzOTk5OTk5OTk5OTk4SDcuNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgOSAyMClcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTE4LjU4NiA3LjU4NkgyMS40MTM5OTk5OTk5OTk5OThWMTAuNDE0SDE4LjU4NnpcIiwgXCJ0cmFuc2Zvcm1cIjogXCJyb3RhdGUoLTQ1IDIwIDkpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk03LjU4NiA3LjU4NkgxMC40MTRWMTAuNDE0SDcuNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgOSA5KVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTEgMkwyIDIgMiAxMSA0IDExIDQgNCAxMSA0IDExIDJ6XCIgfSB9XSwgXCJuYW1lXCI6IFwiaW50ZXJhY3RpdmUtc2VnbWVudGF0aW9uLWN1cnNvclwiLCBcInNpemVcIjogMjAgfSwgXCJzaXplXCI6IDIwIH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIyMFxcXCIgaGVpZ2h0PVxcXCIyMFxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTI5LjQxMzksMjQsMTUuOTk4OSwxMC41NjYzYTIuMDQ3MywyLjA0NzMsMCwwLDAtMi44MjgxLDBsLTIuNTg2LDIuNTg2YTIuMDAyMywyLjAwMjMsMCwwLDAsMCwyLjgyODNMMjMuOTk4OSwyOS40MTQ1YTIuMDAyMSwyLjAwMjEsMCwwLDAsMi44MjgxLDBsMi41ODY5LTIuNTg2NWExLjk5OTMsMS45OTkzLDAsMCwwLDAtMi44MjgzWm0tMTcuNDE1LTkuNDMzNSwyLjU4NTktMi41ODU5LDMuNSwzLjVMMTUuNDk4LDE4LjA2NzZsLTMuNS0zLjVaTTI1LjQxMywyOGwtOC41MDA5LTguNTE4OCwyLjU4NjctMi41ODdMMjgsMjUuNDE0M1pcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNy41ODYgMTguNTg2SDEwLjQxNFYyMS40MTM5OTk5OTk5OTk5OThINy41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgOSAyMClcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNMTguNTg2IDcuNTg2SDIxLjQxMzk5OTk5OTk5OTk5OFYxMC40MTRIMTguNTg2elxcXCIgdHJhbnNmb3JtPVxcXCJyb3RhdGUoLTQ1IDIwIDkpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTcuNTg2IDcuNTg2SDEwLjQxNFYxMC40MTRINy41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgOSA5KVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xMSAyTDIgMiAyIDExIDQgMTEgNCA0IDExIDQgMTEgMnpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIldhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yMTZcIiwgXCJmaWxlcGF0aFwiOiBcIndhdHNvbi1oZWFsdGgvaW50ZXJhY3RpdmUtc2VnbWVudGF0aW9uLWN1cnNvci8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjkuNDEzOSwyNCwxNS45OTg5LDEwLjU2NjNhMi4wNDczLDIuMDQ3MywwLDAsMC0yLjgyODEsMGwtMi41ODYsMi41ODZhMi4wMDIzLDIuMDAyMywwLDAsMCwwLDIuODI4M0wyMy45OTg5LDI5LjQxNDVhMi4wMDIxLDIuMDAyMSwwLDAsMCwyLjgyODEsMGwyLjU4NjktMi41ODY1YTEuOTk5MywxLjk5OTMsMCwwLDAsMC0yLjgyODNabS0xNy40MTUtOS40MzM1LDIuNTg1OS0yLjU4NTksMy41LDMuNUwxNS40OTgsMTguMDY3NmwtMy41LTMuNVpNMjUuNDEzLDI4bC04LjUwMDktOC41MTg4LDIuNTg2Ny0yLjU4N0wyOCwyNS40MTQzWlwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNNy41ODYgMTguNTg2SDEwLjQxNFYyMS40MTM5OTk5OTk5OTk5OThINy41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5IDIwKVwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTguNTg2IDcuNTg2SDIxLjQxMzk5OTk5OTk5OTk5OFYxMC40MTRIMTguNTg2elwiLCBcInRyYW5zZm9ybVwiOiBcInJvdGF0ZSgtNDUgMjAgOSlcIiB9IH0sIHsgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTcuNTg2IDcuNTg2SDEwLjQxNFYxMC40MTRINy41ODZ6XCIsIFwidHJhbnNmb3JtXCI6IFwicm90YXRlKC00NSA5IDkpXCIgfSB9LCB7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0xMSAyTDIgMiAyIDExIDQgMTEgNCA0IDExIDQgMTEgMnpcIiB9IH1dLCBcIm5hbWVcIjogXCJpbnRlcmFjdGl2ZS1zZWdtZW50YXRpb24tY3Vyc29yXCIsIFwic2l6ZVwiOiAxNiB9LCBcInNpemVcIjogMTYgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjE2XFxcIiBoZWlnaHQ9XFxcIjE2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjkuNDEzOSwyNCwxNS45OTg5LDEwLjU2NjNhMi4wNDczLDIuMDQ3MywwLDAsMC0yLjgyODEsMGwtMi41ODYsMi41ODZhMi4wMDIzLDIuMDAyMywwLDAsMCwwLDIuODI4M0wyMy45OTg5LDI5LjQxNDVhMi4wMDIxLDIuMDAyMSwwLDAsMCwyLjgyODEsMGwyLjU4NjktMi41ODY1YTEuOTk5MywxLjk5OTMsMCwwLDAsMC0yLjgyODNabS0xNy40MTUtOS40MzM1LDIuNTg1OS0yLjU4NTksMy41LDMuNUwxNS40OTgsMTguMDY3NmwtMy41LTMuNVpNMjUuNDEzLDI4bC04LjUwMDktOC41MTg4LDIuNTg2Ny0yLjU4N0wyOCwyNS40MTQzWlxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk03LjU4NiAxOC41ODZIMTAuNDE0VjIxLjQxMzk5OTk5OTk5OTk5OEg3LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5IDIwKVxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0xOC41ODYgNy41ODZIMjEuNDEzOTk5OTk5OTk5OTk4VjEwLjQxNEgxOC41ODZ6XFxcIiB0cmFuc2Zvcm09XFxcInJvdGF0ZSgtNDUgMjAgOSlcXFwiPjwvcGF0aD48cGF0aCBkPVxcXCJNNy41ODYgNy41ODZIMTAuNDE0VjEwLjQxNEg3LjU4NnpcXFwiIHRyYW5zZm9ybT1cXFwicm90YXRlKC00NSA5IDkpXFxcIj48L3BhdGg+PHBhdGggZD1cXFwiTTExIDJMMiAyIDIgMTEgNCAxMSA0IDQgMTEgNCAxMSAyelxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZV8xID0gV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmU7XG4gICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmUucHJvdG90eXBlLm5nQWZ0ZXJWaWV3SW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHN2ZyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcbiAgICAgICAgdmFyIGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV07XG4gICAgICAgIHZhciBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgICAgIHZhciByYXdTVkcgPSBpY29uLnN2ZztcbiAgICAgICAgdmFyIHN2Z0VsZW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHJhd1NWRywgXCJpbWFnZS9zdmcreG1sXCIpLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgdmFyIG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgICAgICAvLyBpbXBvcnROb2RlIG1ha2VzIGEgY2xvbmUgb2YgdGhlIG5vZGVcbiAgICAgICAgICAgIC8vIHRoaXMgZW5zdXJlcyB3ZSBrZWVwIGxvb3Bpbmcgb3ZlciB0aGUgbm9kZXMgaW4gdGhlIHBhcnNlZCBkb2N1bWVudFxuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHN2Zy5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobm9kZSwgdHJ1ZSkpO1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgICAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzLnRpdGxlKSB7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICAgICAgICBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICAgICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIndhdHNvbi1oZWFsdGgtaW50ZXJhY3RpdmUtc2VnbWVudGF0aW9uLWN1cnNvci1cIiArIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJ3YXRzb24taGVhbHRoLWludGVyYWN0aXZlLXNlZ21lbnRhdGlvbi1jdXJzb3ItXCIgKyBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlXzE7XG4gICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlID0gV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25XYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvcl1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckRpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlO1xufSgpKTtcbnZhciBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvck1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvck1vZHVsZSgpIHtcbiAgICB9XG4gICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yTW9kdWxlKTtcbiAgICByZXR1cm4gV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBXYXRzb25IZWFsdGhJbnRlcmFjdGl2ZVNlZ21lbnRhdGlvbkN1cnNvckNvbXBvbmVudCwgV2F0c29uSGVhbHRoSW50ZXJhY3RpdmVTZWdtZW50YXRpb25DdXJzb3JEaXJlY3RpdmUsIFdhdHNvbkhlYWx0aEludGVyYWN0aXZlU2VnbWVudGF0aW9uQ3Vyc29yTW9kdWxlIH07XG4iXX0=