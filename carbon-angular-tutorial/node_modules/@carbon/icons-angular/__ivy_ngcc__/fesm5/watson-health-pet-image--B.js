import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthPetImageBComponent = /** @class */ (function () {
    function WatsonHealthPetImageBComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthPetImageBComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthPetImageBComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBComponent.prototype, "size", void 0);
WatsonHealthPetImageBComponent.ɵfac = function WatsonHealthPetImageBComponent_Factory(t) { return new (t || WatsonHealthPetImageBComponent)(); };
WatsonHealthPetImageBComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthPetImageBComponent, selectors: [["ibm-icon-watson-health-pet-image-b"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthPetImageB", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthPetImageBComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthPetImageBDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthPetImageBComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-pet-image-b",
                template: "\n    <svg\n      ibmIconWatsonHealthPetImageB\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthPetImageBComponent;
}());
var WatsonHealthPetImageBDirective = /** @class */ (function () {
    function WatsonHealthPetImageBDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthPetImageB32", "filepath": "watson-health/pet-image--B/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z" } }, { "elem": "path", "attrs": { "d": "M11.59 3.07H13.57V6.07H11.59z", "transform": "rotate(-45 12.586 4.577)" } }, { "elem": "path", "attrs": { "d": "M26.44 17.92H28.42V20.92H26.44z", "transform": "rotate(-45 27.43 19.408)" } }, { "elem": "path", "attrs": { "d": "M11.09 18.42H14.09V20.400000000000002H11.09z", "transform": "rotate(-45 12.592 19.414)" } }, { "elem": "path", "attrs": { "d": "M25.93 3.58H28.93V5.5600000000000005H25.93z", "transform": "rotate(-45 27.423 4.57)" } }, { "elem": "path", "attrs": { "d": "M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z" } }], "name": "pet-image--B", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z\"></path><path d=\"M11.59 3.07H13.57V6.07H11.59z\" transform=\"rotate(-45 12.586 4.577)\"></path><path d=\"M26.44 17.92H28.42V20.92H26.44z\" transform=\"rotate(-45 27.43 19.408)\"></path><path d=\"M11.09 18.42H14.09V20.400000000000002H11.09z\" transform=\"rotate(-45 12.592 19.414)\"></path><path d=\"M25.93 3.58H28.93V5.5600000000000005H25.93z\" transform=\"rotate(-45 27.423 4.57)\"></path><path d=\"M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthPetImageB24", "filepath": "watson-health/pet-image--B/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z" } }, { "elem": "path", "attrs": { "d": "M11.59 3.07H13.57V6.07H11.59z", "transform": "rotate(-45 12.586 4.577)" } }, { "elem": "path", "attrs": { "d": "M26.44 17.92H28.42V20.92H26.44z", "transform": "rotate(-45 27.43 19.408)" } }, { "elem": "path", "attrs": { "d": "M11.09 18.42H14.09V20.400000000000002H11.09z", "transform": "rotate(-45 12.592 19.414)" } }, { "elem": "path", "attrs": { "d": "M25.93 3.58H28.93V5.5600000000000005H25.93z", "transform": "rotate(-45 27.423 4.57)" } }, { "elem": "path", "attrs": { "d": "M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z" } }], "name": "pet-image--B", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z\"></path><path d=\"M11.59 3.07H13.57V6.07H11.59z\" transform=\"rotate(-45 12.586 4.577)\"></path><path d=\"M26.44 17.92H28.42V20.92H26.44z\" transform=\"rotate(-45 27.43 19.408)\"></path><path d=\"M11.09 18.42H14.09V20.400000000000002H11.09z\" transform=\"rotate(-45 12.592 19.414)\"></path><path d=\"M25.93 3.58H28.93V5.5600000000000005H25.93z\" transform=\"rotate(-45 27.423 4.57)\"></path><path d=\"M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthPetImageB20", "filepath": "watson-health/pet-image--B/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z" } }, { "elem": "path", "attrs": { "d": "M11.59 3.07H13.57V6.07H11.59z", "transform": "rotate(-45 12.586 4.577)" } }, { "elem": "path", "attrs": { "d": "M26.44 17.92H28.42V20.92H26.44z", "transform": "rotate(-45 27.43 19.408)" } }, { "elem": "path", "attrs": { "d": "M11.09 18.42H14.09V20.400000000000002H11.09z", "transform": "rotate(-45 12.592 19.414)" } }, { "elem": "path", "attrs": { "d": "M25.93 3.58H28.93V5.5600000000000005H25.93z", "transform": "rotate(-45 27.423 4.57)" } }, { "elem": "path", "attrs": { "d": "M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z" } }], "name": "pet-image--B", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z\"></path><path d=\"M11.59 3.07H13.57V6.07H11.59z\" transform=\"rotate(-45 12.586 4.577)\"></path><path d=\"M26.44 17.92H28.42V20.92H26.44z\" transform=\"rotate(-45 27.43 19.408)\"></path><path d=\"M11.09 18.42H14.09V20.400000000000002H11.09z\" transform=\"rotate(-45 12.592 19.414)\"></path><path d=\"M25.93 3.58H28.93V5.5600000000000005H25.93z\" transform=\"rotate(-45 27.423 4.57)\"></path><path d=\"M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthPetImageB16", "filepath": "watson-health/pet-image--B/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z" } }, { "elem": "path", "attrs": { "d": "M11.59 3.07H13.57V6.07H11.59z", "transform": "rotate(-45 12.586 4.577)" } }, { "elem": "path", "attrs": { "d": "M26.44 17.92H28.42V20.92H26.44z", "transform": "rotate(-45 27.43 19.408)" } }, { "elem": "path", "attrs": { "d": "M11.09 18.42H14.09V20.400000000000002H11.09z", "transform": "rotate(-45 12.592 19.414)" } }, { "elem": "path", "attrs": { "d": "M25.93 3.58H28.93V5.5600000000000005H25.93z", "transform": "rotate(-45 27.423 4.57)" } }, { "elem": "path", "attrs": { "d": "M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z" } }], "name": "pet-image--B", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M19 21H21V24H19zM19 0H21V3H19zM8 11H11V13H8zM29 11H32V13H29z\"></path><path d=\"M11.59 3.07H13.57V6.07H11.59z\" transform=\"rotate(-45 12.586 4.577)\"></path><path d=\"M26.44 17.92H28.42V20.92H26.44z\" transform=\"rotate(-45 27.43 19.408)\"></path><path d=\"M11.09 18.42H14.09V20.400000000000002H11.09z\" transform=\"rotate(-45 12.592 19.414)\"></path><path d=\"M25.93 3.58H28.93V5.5600000000000005H25.93z\" transform=\"rotate(-45 27.423 4.57)\"></path><path d=\"M20 5a7 7 0 107 7A7 7 0 0020 5zm0 12A5 5 0 0120 7zM5 18H0V32H5a3 3 0 003-3V27a3 3 0 00-.78-2A3 3 0 008 23V21A3 3 0 005 18zM2 20H5a1 1 0 011 1v2a1 1 0 01-1 1H2zm4 9a1 1 0 01-1 1H2V26H5a1 1 0 011 1zM2 2L9 2 9 0 0 0 0 9 2 9 2 2z\"></path></svg>"
            },
        };
    }
    WatsonHealthPetImageBDirective_1 = WatsonHealthPetImageBDirective;
    WatsonHealthPetImageBDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthPetImageBDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-pet-image-b-" + WatsonHealthPetImageBDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-pet-image-b-" + WatsonHealthPetImageBDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthPetImageBDirective_1;
    WatsonHealthPetImageBDirective.titleIdCounter = 0;
    WatsonHealthPetImageBDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthPetImageBDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthPetImageBDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthPetImageBDirective.prototype, "size", void 0);
    WatsonHealthPetImageBDirective = WatsonHealthPetImageBDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthPetImageBDirective);
WatsonHealthPetImageBDirective.ɵfac = function WatsonHealthPetImageBDirective_Factory(t) { return new (t || WatsonHealthPetImageBDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthPetImageBDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthPetImageBDirective, selectors: [["", "ibmIconWatsonHealthPetImageB", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthPetImageBDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthPetImageB]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthPetImageBDirective;
}());
var WatsonHealthPetImageBModule = /** @class */ (function () {
    function WatsonHealthPetImageBModule() {
    }
WatsonHealthPetImageBModule.ɵfac = function WatsonHealthPetImageBModule_Factory(t) { return new (t || WatsonHealthPetImageBModule)(); };
WatsonHealthPetImageBModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthPetImageBModule });
WatsonHealthPetImageBModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthPetImageBModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthPetImageBComponent,
                    WatsonHealthPetImageBDirective,
                ],
                exports: [
                    WatsonHealthPetImageBComponent,
                    WatsonHealthPetImageBDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthPetImageBModule, { declarations: [WatsonHealthPetImageBComponent, WatsonHealthPetImageBDirective], exports: [WatsonHealthPetImageBComponent, WatsonHealthPetImageBDirective] }); })();
    return WatsonHealthPetImageBModule;
}());

export { WatsonHealthPetImageBComponent, WatsonHealthPetImageBDirective, WatsonHealthPetImageBModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,