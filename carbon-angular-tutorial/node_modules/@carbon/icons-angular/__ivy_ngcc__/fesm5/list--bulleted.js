import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var ListBulletedComponent = /** @class */ (function () {
    function ListBulletedComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ListBulletedComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ListBulletedComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedComponent.prototype, "size", void 0);
ListBulletedComponent.ɵfac = function ListBulletedComponent_Factory(t) { return new (t || ListBulletedComponent)(); };
ListBulletedComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ListBulletedComponent, selectors: [["ibm-icon-list-bulleted"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconListBulleted", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function ListBulletedComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [ListBulletedDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListBulletedComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-list-bulleted",
                template: "\n    <svg\n      ibmIconListBulleted\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ListBulletedComponent;
}());
var ListBulletedDirective = /** @class */ (function () {
    function ListBulletedDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "ListBulleted32", "filepath": "list--bulleted/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "circle", "attrs": { "cx": "7", "cy": "9", "r": "3" } }, { "elem": "circle", "attrs": { "cx": "7", "cy": "23", "r": "3" } }, { "elem": "path", "attrs": { "d": "M16 22H30V24H16zM16 8H30V10H16z" } }], "name": "list--bulleted", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"7\" cy=\"9\" r=\"3\"></circle><circle cx=\"7\" cy=\"23\" r=\"3\"></circle><path d=\"M16 22H30V24H16zM16 8H30V10H16z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "ListBulleted24", "filepath": "list--bulleted/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "circle", "attrs": { "cx": "7", "cy": "9", "r": "3" } }, { "elem": "circle", "attrs": { "cx": "7", "cy": "23", "r": "3" } }, { "elem": "path", "attrs": { "d": "M16 22H30V24H16zM16 8H30V10H16z" } }], "name": "list--bulleted", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"7\" cy=\"9\" r=\"3\"></circle><circle cx=\"7\" cy=\"23\" r=\"3\"></circle><path d=\"M16 22H30V24H16zM16 8H30V10H16z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "ListBulleted20", "filepath": "list--bulleted/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "circle", "attrs": { "cx": "7", "cy": "9", "r": "3" } }, { "elem": "circle", "attrs": { "cx": "7", "cy": "23", "r": "3" } }, { "elem": "path", "attrs": { "d": "M16 22H30V24H16zM16 8H30V10H16z" } }], "name": "list--bulleted", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><circle cx=\"7\" cy=\"9\" r=\"3\"></circle><circle cx=\"7\" cy=\"23\" r=\"3\"></circle><path d=\"M16 22H30V24H16zM16 8H30V10H16z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "ListBulleted16", "filepath": "list--bulleted/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 16 16", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "circle", "attrs": { "cx": "3.5", "cy": "4.5", "r": "1.5" } }, { "elem": "circle", "attrs": { "cx": "3.5", "cy": "11.5", "r": "1.5" } }, { "elem": "path", "attrs": { "d": "M8 11H15V12H8zM8 4H15V5H8z" } }], "name": "list--bulleted", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><circle cx=\"3.5\" cy=\"4.5\" r=\"1.5\"></circle><circle cx=\"3.5\" cy=\"11.5\" r=\"1.5\"></circle><path d=\"M8 11H15V12H8zM8 4H15V5H8z\"></path></svg>"
            },
        };
    }
    ListBulletedDirective_1 = ListBulletedDirective;
    ListBulletedDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ListBulletedDirective_1.titleIdCounter++;
            title.setAttribute("id", "list-bulleted-" + ListBulletedDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "list-bulleted-" + ListBulletedDirective_1.titleIdCounter);
        }
    };
    var ListBulletedDirective_1;
    ListBulletedDirective.titleIdCounter = 0;
    ListBulletedDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ListBulletedDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ListBulletedDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ListBulletedDirective.prototype, "size", void 0);
    ListBulletedDirective = ListBulletedDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], ListBulletedDirective);
ListBulletedDirective.ɵfac = function ListBulletedDirective_Factory(t) { return new (t || ListBulletedDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ListBulletedDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ListBulletedDirective, selectors: [["", "ibmIconListBulleted", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListBulletedDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconListBulleted]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ListBulletedDirective;
}());
var ListBulletedModule = /** @class */ (function () {
    function ListBulletedModule() {
    }
ListBulletedModule.ɵfac = function ListBulletedModule_Factory(t) { return new (t || ListBulletedModule)(); };
ListBulletedModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ListBulletedModule });
ListBulletedModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListBulletedModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ListBulletedComponent,
                    ListBulletedDirective,
                ],
                exports: [
                    ListBulletedComponent,
                    ListBulletedDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ListBulletedModule, { declarations: [ListBulletedComponent, ListBulletedDirective], exports: [ListBulletedComponent, ListBulletedDirective] }); })();
    return ListBulletedModule;
}());

export { ListBulletedComponent, ListBulletedDirective, ListBulletedModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,