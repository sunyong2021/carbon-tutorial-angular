import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DirectionRotaryRightComponent = /** @class */ (function () {
    function DirectionRotaryRightComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionRotaryRightComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionRotaryRightComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightComponent.prototype, "size", void 0);
DirectionRotaryRightComponent.ɵfac = function DirectionRotaryRightComponent_Factory(t) { return new (t || DirectionRotaryRightComponent)(); };
DirectionRotaryRightComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DirectionRotaryRightComponent, selectors: [["ibm-icon-direction-rotary-right"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDirectionRotaryRight", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DirectionRotaryRightComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DirectionRotaryRightDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionRotaryRightComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-direction-rotary-right",
                template: "\n    <svg\n      ibmIconDirectionRotaryRight\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionRotaryRightComponent;
}());
var DirectionRotaryRightDirective = /** @class */ (function () {
    function DirectionRotaryRightDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DirectionRotaryRight32", "filepath": "direction--rotary--right/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z" } }], "name": "direction--rotary--right", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DirectionRotaryRight24", "filepath": "direction--rotary--right/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z" } }], "name": "direction--rotary--right", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DirectionRotaryRight20", "filepath": "direction--rotary--right/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z" } }], "name": "direction--rotary--right", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DirectionRotaryRight16", "filepath": "direction--rotary--right/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z" } }], "name": "direction--rotary--right", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M22,4,20.5859,5.4141,25.1719,10H16.91A5.9965,5.9965,0,1,0,10,16.91V28h2V16.91A6.0061,6.0061,0,0,0,16.91,12h8.2622l-4.586,4.5859L22,18l7-7ZM11,15a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,11,15Z\"></path></svg>"
            },
        };
    }
    DirectionRotaryRightDirective_1 = DirectionRotaryRightDirective;
    DirectionRotaryRightDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DirectionRotaryRightDirective_1.titleIdCounter++;
            title.setAttribute("id", "direction-rotary-right-" + DirectionRotaryRightDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "direction-rotary-right-" + DirectionRotaryRightDirective_1.titleIdCounter);
        }
    };
    var DirectionRotaryRightDirective_1;
    DirectionRotaryRightDirective.titleIdCounter = 0;
    DirectionRotaryRightDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionRotaryRightDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionRotaryRightDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionRotaryRightDirective.prototype, "size", void 0);
    DirectionRotaryRightDirective = DirectionRotaryRightDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DirectionRotaryRightDirective);
DirectionRotaryRightDirective.ɵfac = function DirectionRotaryRightDirective_Factory(t) { return new (t || DirectionRotaryRightDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DirectionRotaryRightDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DirectionRotaryRightDirective, selectors: [["", "ibmIconDirectionRotaryRight", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionRotaryRightDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDirectionRotaryRight]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionRotaryRightDirective;
}());
var DirectionRotaryRightModule = /** @class */ (function () {
    function DirectionRotaryRightModule() {
    }
DirectionRotaryRightModule.ɵfac = function DirectionRotaryRightModule_Factory(t) { return new (t || DirectionRotaryRightModule)(); };
DirectionRotaryRightModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DirectionRotaryRightModule });
DirectionRotaryRightModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionRotaryRightModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DirectionRotaryRightComponent,
                    DirectionRotaryRightDirective,
                ],
                exports: [
                    DirectionRotaryRightComponent,
                    DirectionRotaryRightDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DirectionRotaryRightModule, { declarations: [DirectionRotaryRightComponent, DirectionRotaryRightDirective], exports: [DirectionRotaryRightComponent, DirectionRotaryRightDirective] }); })();
    return DirectionRotaryRightModule;
}());

export { DirectionRotaryRightComponent, DirectionRotaryRightDirective, DirectionRotaryRightModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,