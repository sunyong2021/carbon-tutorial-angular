import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthWindowPresetComponent = /** @class */ (function () {
    function WatsonHealthWindowPresetComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetComponent.prototype, "size", void 0);
WatsonHealthWindowPresetComponent.ɵfac = function WatsonHealthWindowPresetComponent_Factory(t) { return new (t || WatsonHealthWindowPresetComponent)(); };
WatsonHealthWindowPresetComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthWindowPresetComponent, selectors: [["ibm-icon-watson-health-window-preset"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthWindowPreset", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthWindowPresetComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthWindowPresetDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-window-preset",
                template: "\n    <svg\n      ibmIconWatsonHealthWindowPreset\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowPresetComponent;
}());
var WatsonHealthWindowPresetDirective = /** @class */ (function () {
    function WatsonHealthWindowPresetDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthWindowPreset32", "filepath": "watson-health/window--preset/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthWindowPreset24", "filepath": "watson-health/window--preset/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthWindowPreset20", "filepath": "watson-health/window--preset/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthWindowPreset16", "filepath": "watson-health/window--preset/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z" } }, { "elem": "path", "attrs": { "d": "M8.586 8.586H10.586V10.586H8.586z", "transform": "rotate(-45 9.586 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 8.586H23.414V10.586H21.414z", "transform": "rotate(-45 22.414 9.586)" } }, { "elem": "path", "attrs": { "d": "M21.414 21.414H23.414V23.414H21.414z", "transform": "rotate(-45 22.414 22.414)" } }, { "elem": "path", "attrs": { "d": "M8.586 21.414H10.586V23.414H8.586z", "transform": "rotate(-45 9.586 22.414)" } }, { "elem": "path", "attrs": { "d": "M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z" } }, { "elem": "path", "attrs": { "d": "M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z" } }], "name": "window--preset", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M15 6H17V8H15zM24 15H26V17H24zM15 24H17V26H15zM6 15H8V17H6z\"></path><path d=\"M8.586 8.586H10.586V10.586H8.586z\" transform=\"rotate(-45 9.586 9.586)\"></path><path d=\"M21.414 8.586H23.414V10.586H21.414z\" transform=\"rotate(-45 22.414 9.586)\"></path><path d=\"M21.414 21.414H23.414V23.414H21.414z\" transform=\"rotate(-45 22.414 22.414)\"></path><path d=\"M8.586 21.414H10.586V23.414H8.586z\" transform=\"rotate(-45 9.586 22.414)\"></path><path d=\"M16,22a6,6,0,1,0-6-6A6,6,0,0,0,16,22Zm0-10v8a4,4,0,0,1,0-8Z\"></path><path d=\"M28,30H4a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,4,2H28a2.0021,2.0021,0,0,1,2,2V28A2.0021,2.0021,0,0,1,28,30ZM4,4V28H28V4Z\"></path></svg>"
            },
        };
    }
    WatsonHealthWindowPresetDirective_1 = WatsonHealthWindowPresetDirective;
    WatsonHealthWindowPresetDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthWindowPresetDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-window-preset-" + WatsonHealthWindowPresetDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-window-preset-" + WatsonHealthWindowPresetDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthWindowPresetDirective_1;
    WatsonHealthWindowPresetDirective.titleIdCounter = 0;
    WatsonHealthWindowPresetDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthWindowPresetDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthWindowPresetDirective.prototype, "size", void 0);
    WatsonHealthWindowPresetDirective = WatsonHealthWindowPresetDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthWindowPresetDirective);
WatsonHealthWindowPresetDirective.ɵfac = function WatsonHealthWindowPresetDirective_Factory(t) { return new (t || WatsonHealthWindowPresetDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthWindowPresetDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthWindowPresetDirective, selectors: [["", "ibmIconWatsonHealthWindowPreset", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthWindowPreset]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthWindowPresetDirective;
}());
var WatsonHealthWindowPresetModule = /** @class */ (function () {
    function WatsonHealthWindowPresetModule() {
    }
WatsonHealthWindowPresetModule.ɵfac = function WatsonHealthWindowPresetModule_Factory(t) { return new (t || WatsonHealthWindowPresetModule)(); };
WatsonHealthWindowPresetModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthWindowPresetModule });
WatsonHealthWindowPresetModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthWindowPresetModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthWindowPresetComponent,
                    WatsonHealthWindowPresetDirective,
                ],
                exports: [
                    WatsonHealthWindowPresetComponent,
                    WatsonHealthWindowPresetDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthWindowPresetModule, { declarations: [WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective], exports: [WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective] }); })();
    return WatsonHealthWindowPresetModule;
}());

export { WatsonHealthWindowPresetComponent, WatsonHealthWindowPresetDirective, WatsonHealthWindowPresetModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,