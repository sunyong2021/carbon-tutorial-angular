import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var SkipForwardOutlineComponent = /** @class */ (function () {
    function SkipForwardOutlineComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardOutlineComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardOutlineComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineComponent.prototype, "size", void 0);
SkipForwardOutlineComponent.ɵfac = function SkipForwardOutlineComponent_Factory(t) { return new (t || SkipForwardOutlineComponent)(); };
SkipForwardOutlineComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SkipForwardOutlineComponent, selectors: [["ibm-icon-skip-forward-outline"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconSkipForwardOutline", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function SkipForwardOutlineComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [SkipForwardOutlineDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkipForwardOutlineComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-skip-forward-outline",
                template: "\n    <svg\n      ibmIconSkipForwardOutline\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return SkipForwardOutlineComponent;
}());
var SkipForwardOutlineDirective = /** @class */ (function () {
    function SkipForwardOutlineDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "SkipForwardOutline32", "filepath": "skip--forward--outline/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z" } }, { "elem": "path", "attrs": { "d": "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z" } }], "name": "skip--forward--outline", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z\"></path><path d=\"M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "SkipForwardOutline24", "filepath": "skip--forward--outline/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z" } }, { "elem": "path", "attrs": { "d": "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z" } }], "name": "skip--forward--outline", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z\"></path><path d=\"M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "SkipForwardOutline20", "filepath": "skip--forward--outline/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z" } }, { "elem": "path", "attrs": { "d": "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z" } }], "name": "skip--forward--outline", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z\"></path><path d=\"M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "SkipForwardOutline16", "filepath": "skip--forward--outline/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z" } }, { "elem": "path", "attrs": { "d": "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z" } }], "name": "skip--forward--outline", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M21 10H23V22H21zM8.4927 21.8618A1 1 0 018 21V11a1 1 0 011.4858-.8742l9 5a1 1 0 010 1.7485l-9 5a1.0009 1.0009 0 01-.9931-.0125zM10 12.7v6.6011L15.9409 16z\"></path><path d=\"M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z\"></path></svg>"
            },
        };
    }
    SkipForwardOutlineDirective_1 = SkipForwardOutlineDirective;
    SkipForwardOutlineDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            SkipForwardOutlineDirective_1.titleIdCounter++;
            title.setAttribute("id", "skip-forward-outline-" + SkipForwardOutlineDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "skip-forward-outline-" + SkipForwardOutlineDirective_1.titleIdCounter);
        }
    };
    var SkipForwardOutlineDirective_1;
    SkipForwardOutlineDirective.titleIdCounter = 0;
    SkipForwardOutlineDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardOutlineDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], SkipForwardOutlineDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], SkipForwardOutlineDirective.prototype, "size", void 0);
    SkipForwardOutlineDirective = SkipForwardOutlineDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], SkipForwardOutlineDirective);
SkipForwardOutlineDirective.ɵfac = function SkipForwardOutlineDirective_Factory(t) { return new (t || SkipForwardOutlineDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SkipForwardOutlineDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SkipForwardOutlineDirective, selectors: [["", "ibmIconSkipForwardOutline", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkipForwardOutlineDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconSkipForwardOutline]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return SkipForwardOutlineDirective;
}());
var SkipForwardOutlineModule = /** @class */ (function () {
    function SkipForwardOutlineModule() {
    }
SkipForwardOutlineModule.ɵfac = function SkipForwardOutlineModule_Factory(t) { return new (t || SkipForwardOutlineModule)(); };
SkipForwardOutlineModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SkipForwardOutlineModule });
SkipForwardOutlineModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SkipForwardOutlineModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SkipForwardOutlineComponent,
                    SkipForwardOutlineDirective,
                ],
                exports: [
                    SkipForwardOutlineComponent,
                    SkipForwardOutlineDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SkipForwardOutlineModule, { declarations: [SkipForwardOutlineComponent, SkipForwardOutlineDirective], exports: [SkipForwardOutlineComponent, SkipForwardOutlineDirective] }); })();
    return SkipForwardOutlineModule;
}());

export { SkipForwardOutlineComponent, SkipForwardOutlineDirective, SkipForwardOutlineModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,