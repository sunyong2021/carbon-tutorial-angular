import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthStackedScrolling_1Component = /** @class */ (function () {
    function WatsonHealthStackedScrolling_1Component() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Component.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Component.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStackedScrolling_1Component.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Component.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStackedScrolling_1Component.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Component.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Component.prototype, "size", void 0);
WatsonHealthStackedScrolling_1Component.ɵfac = function WatsonHealthStackedScrolling_1Component_Factory(t) { return new (t || WatsonHealthStackedScrolling_1Component)(); };
WatsonHealthStackedScrolling_1Component.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthStackedScrolling_1Component, selectors: [["ibm-icon-watson-health-stacked-scrolling-1"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthStackedScrolling_1", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthStackedScrolling_1Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthStackedScrolling_1Directive]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthStackedScrolling_1Component, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-stacked-scrolling-1",
                template: "\n    <svg\n      ibmIconWatsonHealthStackedScrolling_1\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthStackedScrolling_1Component;
}());
var WatsonHealthStackedScrolling_1Directive = /** @class */ (function () {
    function WatsonHealthStackedScrolling_1Directive(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthStackedScrolling_132", "filepath": "watson-health/stacked-scrolling--1/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z" } }, { "elem": "path", "attrs": { "d": "M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z" } }], "name": "stacked-scrolling--1", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path><path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path><path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthStackedScrolling_124", "filepath": "watson-health/stacked-scrolling--1/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z" } }, { "elem": "path", "attrs": { "d": "M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z" } }], "name": "stacked-scrolling--1", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path><path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path><path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthStackedScrolling_120", "filepath": "watson-health/stacked-scrolling--1/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z" } }, { "elem": "path", "attrs": { "d": "M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z" } }], "name": "stacked-scrolling--1", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path><path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path><path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthStackedScrolling_116", "filepath": "watson-health/stacked-scrolling--1/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z" } }, { "elem": "path", "attrs": { "d": "M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z" } }, { "elem": "path", "attrs": { "d": "M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z" } }], "name": "stacked-scrolling--1", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M18,30H4a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H18a2,2,0,0,1,2,2V28A2,2,0,0,1,18,30ZM4,14V28H18V14Z\"></path><path d=\"M25,23H23V9H9V7H23a2,2,0,0,1,2,2Z\"></path><path d=\"M30,16H28V4H16V2H28a2,2,0,0,1,2,2Z\"></path></svg>"
            },
        };
    }
    WatsonHealthStackedScrolling_1Directive_1 = WatsonHealthStackedScrolling_1Directive;
    WatsonHealthStackedScrolling_1Directive.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthStackedScrolling_1Directive_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-stacked-scrolling-1-" + WatsonHealthStackedScrolling_1Directive_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-stacked-scrolling-1-" + WatsonHealthStackedScrolling_1Directive_1.titleIdCounter);
        }
    };
    var WatsonHealthStackedScrolling_1Directive_1;
    WatsonHealthStackedScrolling_1Directive.titleIdCounter = 0;
    WatsonHealthStackedScrolling_1Directive.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthStackedScrolling_1Directive.prototype, "size", void 0);
    WatsonHealthStackedScrolling_1Directive = WatsonHealthStackedScrolling_1Directive_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthStackedScrolling_1Directive);
WatsonHealthStackedScrolling_1Directive.ɵfac = function WatsonHealthStackedScrolling_1Directive_Factory(t) { return new (t || WatsonHealthStackedScrolling_1Directive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthStackedScrolling_1Directive.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthStackedScrolling_1Directive, selectors: [["", "ibmIconWatsonHealthStackedScrolling_1", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthStackedScrolling_1Directive, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthStackedScrolling_1]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthStackedScrolling_1Directive;
}());
var WatsonHealthStackedScrolling_1Module = /** @class */ (function () {
    function WatsonHealthStackedScrolling_1Module() {
    }
WatsonHealthStackedScrolling_1Module.ɵfac = function WatsonHealthStackedScrolling_1Module_Factory(t) { return new (t || WatsonHealthStackedScrolling_1Module)(); };
WatsonHealthStackedScrolling_1Module.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthStackedScrolling_1Module });
WatsonHealthStackedScrolling_1Module.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthStackedScrolling_1Module, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthStackedScrolling_1Component,
                    WatsonHealthStackedScrolling_1Directive,
                ],
                exports: [
                    WatsonHealthStackedScrolling_1Component,
                    WatsonHealthStackedScrolling_1Directive,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthStackedScrolling_1Module, { declarations: [WatsonHealthStackedScrolling_1Component, WatsonHealthStackedScrolling_1Directive], exports: [WatsonHealthStackedScrolling_1Component, WatsonHealthStackedScrolling_1Directive] }); })();
    return WatsonHealthStackedScrolling_1Module;
}());

export { WatsonHealthStackedScrolling_1Component, WatsonHealthStackedScrolling_1Directive, WatsonHealthStackedScrolling_1Module };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,