import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var TextVerticalAlignmentComponent = /** @class */ (function () {
    function TextVerticalAlignmentComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextVerticalAlignmentComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextVerticalAlignmentComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentComponent.prototype, "size", void 0);
TextVerticalAlignmentComponent.ɵfac = function TextVerticalAlignmentComponent_Factory(t) { return new (t || TextVerticalAlignmentComponent)(); };
TextVerticalAlignmentComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TextVerticalAlignmentComponent, selectors: [["ibm-icon-text-vertical-alignment"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconTextVerticalAlignment", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function TextVerticalAlignmentComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [TextVerticalAlignmentDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextVerticalAlignmentComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-text-vertical-alignment",
                template: "\n    <svg\n      ibmIconTextVerticalAlignment\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return TextVerticalAlignmentComponent;
}());
var TextVerticalAlignmentDirective = /** @class */ (function () {
    function TextVerticalAlignmentDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "TextVerticalAlignment32", "filepath": "text--vertical-alignment/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z" } }], "name": "text--vertical-alignment", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "TextVerticalAlignment24", "filepath": "text--vertical-alignment/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z" } }], "name": "text--vertical-alignment", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "TextVerticalAlignment20", "filepath": "text--vertical-alignment/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z" } }], "name": "text--vertical-alignment", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "TextVerticalAlignment16", "filepath": "text--vertical-alignment/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z" } }], "name": "text--vertical-alignment", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M16 28H30V30H16zM16 23H30V25H16zM10.8458 30H13L8.64 20H6.36L2 30H4.1542l.8-2h5.0916zM5.7541 26L7.5 21.6347 9.2459 26zM2 15H30V17H2zM16 7H30V9H16zM16 2H30V4H16zM10.8458 12H13L8.64 2H6.36L2 12H4.1542l.8-2h5.0916zM5.7541 8L7.5 3.6347 9.2459 8z\"></path></svg>"
            },
        };
    }
    TextVerticalAlignmentDirective_1 = TextVerticalAlignmentDirective;
    TextVerticalAlignmentDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            TextVerticalAlignmentDirective_1.titleIdCounter++;
            title.setAttribute("id", "text-vertical-alignment-" + TextVerticalAlignmentDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "text-vertical-alignment-" + TextVerticalAlignmentDirective_1.titleIdCounter);
        }
    };
    var TextVerticalAlignmentDirective_1;
    TextVerticalAlignmentDirective.titleIdCounter = 0;
    TextVerticalAlignmentDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextVerticalAlignmentDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], TextVerticalAlignmentDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], TextVerticalAlignmentDirective.prototype, "size", void 0);
    TextVerticalAlignmentDirective = TextVerticalAlignmentDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], TextVerticalAlignmentDirective);
TextVerticalAlignmentDirective.ɵfac = function TextVerticalAlignmentDirective_Factory(t) { return new (t || TextVerticalAlignmentDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
TextVerticalAlignmentDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TextVerticalAlignmentDirective, selectors: [["", "ibmIconTextVerticalAlignment", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextVerticalAlignmentDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconTextVerticalAlignment]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return TextVerticalAlignmentDirective;
}());
var TextVerticalAlignmentModule = /** @class */ (function () {
    function TextVerticalAlignmentModule() {
    }
TextVerticalAlignmentModule.ɵfac = function TextVerticalAlignmentModule_Factory(t) { return new (t || TextVerticalAlignmentModule)(); };
TextVerticalAlignmentModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TextVerticalAlignmentModule });
TextVerticalAlignmentModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextVerticalAlignmentModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    TextVerticalAlignmentComponent,
                    TextVerticalAlignmentDirective,
                ],
                exports: [
                    TextVerticalAlignmentComponent,
                    TextVerticalAlignmentDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextVerticalAlignmentModule, { declarations: [TextVerticalAlignmentComponent, TextVerticalAlignmentDirective], exports: [TextVerticalAlignmentComponent, TextVerticalAlignmentDirective] }); })();
    return TextVerticalAlignmentModule;
}());

export { TextVerticalAlignmentComponent, TextVerticalAlignmentDirective, TextVerticalAlignmentModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dC0tdmVydGljYWwtYWxpZ25tZW50LmpzIiwic291cmNlcyI6WyJ0ZXh0LS12ZXJ0aWNhbC1hbGlnbm1lbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs4UkFZb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIFRleHRWZXJ0aWNhbEFsaWdubWVudENvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUZXh0VmVydGljYWxBbGlnbm1lbnRDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFRleHRWZXJ0aWNhbEFsaWdubWVudENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnRDb21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFRleHRWZXJ0aWNhbEFsaWdubWVudENvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi10ZXh0LXZlcnRpY2FsLWFsaWdubWVudFwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uVGV4dFZlcnRpY2FsQWxpZ25tZW50XFxuICAgICAgW3NpemVdPVxcXCJzaXplXFxcIlxcbiAgICAgIFthcmlhTGFiZWxdPVxcXCJhcmlhTGFiZWxcXFwiXFxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cXFwiYXJpYUxhYmVsbGVkYnlcXFwiXFxuICAgICAgW2FyaWFIaWRkZW5dPVxcXCJhcmlhSGlkZGVuXFxcIlxcbiAgICAgIFt0aXRsZV09XFxcInRpdGxlXFxcIlxcbiAgICAgIFtpc0ZvY3VzYWJsZV09XFxcImZvY3VzYWJsZVxcXCJcXG4gICAgICBbYXR0ci5jbGFzc109XFxcImlubmVyQ2xhc3NcXFwiPlxcbiAgICA8L3N2Zz5cXG4gIFwiXG4gICAgICAgIH0pXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50KTtcbiAgICByZXR1cm4gVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50O1xufSgpKTtcbnZhciBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGV4dFZlcnRpY2FsQWxpZ25tZW50RGlyZWN0aXZlKGVsZW1lbnRSZWYpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjtcbiAgICAgICAgdGhpcy5pc0ZvY3VzYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmljb25zID0ge1xuICAgICAgICAgICAgXCIzMlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiVGV4dFZlcnRpY2FsQWxpZ25tZW50MzJcIiwgXCJmaWxlcGF0aFwiOiBcInRleHQtLXZlcnRpY2FsLWFsaWdubWVudC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYgMjhIMzBWMzBIMTZ6TTE2IDIzSDMwVjI1SDE2ek0xMC44NDU4IDMwSDEzTDguNjQgMjBINi4zNkwyIDMwSDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDI2TDcuNSAyMS42MzQ3IDkuMjQ1OSAyNnpNMiAxNUgzMFYxN0gyek0xNiA3SDMwVjlIMTZ6TTE2IDJIMzBWNEgxNnpNMTAuODQ1OCAxMkgxM0w4LjY0IDJINi4zNkwyIDEySDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDhMNy41IDMuNjM0NyA5LjI0NTkgOHpcIiB9IH1dLCBcIm5hbWVcIjogXCJ0ZXh0LS12ZXJ0aWNhbC1hbGlnbm1lbnRcIiwgXCJzaXplXCI6IDMyIH0sIFwic2l6ZVwiOiAzMiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMzJcXFwiIGhlaWdodD1cXFwiMzJcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNiAyOEgzMFYzMEgxNnpNMTYgMjNIMzBWMjVIMTZ6TTEwLjg0NTggMzBIMTNMOC42NCAyMEg2LjM2TDIgMzBINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgMjZMNy41IDIxLjYzNDcgOS4yNDU5IDI2ek0yIDE1SDMwVjE3SDJ6TTE2IDdIMzBWOUgxNnpNMTYgMkgzMFY0SDE2ek0xMC44NDU4IDEySDEzTDguNjQgMkg2LjM2TDIgMTJINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgOEw3LjUgMy42MzQ3IDkuMjQ1OSA4elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyNFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiVGV4dFZlcnRpY2FsQWxpZ25tZW50MjRcIiwgXCJmaWxlcGF0aFwiOiBcInRleHQtLXZlcnRpY2FsLWFsaWdubWVudC8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYgMjhIMzBWMzBIMTZ6TTE2IDIzSDMwVjI1SDE2ek0xMC44NDU4IDMwSDEzTDguNjQgMjBINi4zNkwyIDMwSDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDI2TDcuNSAyMS42MzQ3IDkuMjQ1OSAyNnpNMiAxNUgzMFYxN0gyek0xNiA3SDMwVjlIMTZ6TTE2IDJIMzBWNEgxNnpNMTAuODQ1OCAxMkgxM0w4LjY0IDJINi4zNkwyIDEySDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDhMNy41IDMuNjM0NyA5LjI0NTkgOHpcIiB9IH1dLCBcIm5hbWVcIjogXCJ0ZXh0LS12ZXJ0aWNhbC1hbGlnbm1lbnRcIiwgXCJzaXplXCI6IDI0IH0sIFwic2l6ZVwiOiAyNCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjRcXFwiIGhlaWdodD1cXFwiMjRcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNiAyOEgzMFYzMEgxNnpNMTYgMjNIMzBWMjVIMTZ6TTEwLjg0NTggMzBIMTNMOC42NCAyMEg2LjM2TDIgMzBINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgMjZMNy41IDIxLjYzNDcgOS4yNDU5IDI2ek0yIDE1SDMwVjE3SDJ6TTE2IDdIMzBWOUgxNnpNMTYgMkgzMFY0SDE2ek0xMC44NDU4IDEySDEzTDguNjQgMkg2LjM2TDIgMTJINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgOEw3LjUgMy42MzQ3IDkuMjQ1OSA4elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiVGV4dFZlcnRpY2FsQWxpZ25tZW50MjBcIiwgXCJmaWxlcGF0aFwiOiBcInRleHQtLXZlcnRpY2FsLWFsaWdubWVudC8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYgMjhIMzBWMzBIMTZ6TTE2IDIzSDMwVjI1SDE2ek0xMC44NDU4IDMwSDEzTDguNjQgMjBINi4zNkwyIDMwSDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDI2TDcuNSAyMS42MzQ3IDkuMjQ1OSAyNnpNMiAxNUgzMFYxN0gyek0xNiA3SDMwVjlIMTZ6TTE2IDJIMzBWNEgxNnpNMTAuODQ1OCAxMkgxM0w4LjY0IDJINi4zNkwyIDEySDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDhMNy41IDMuNjM0NyA5LjI0NTkgOHpcIiB9IH1dLCBcIm5hbWVcIjogXCJ0ZXh0LS12ZXJ0aWNhbC1hbGlnbm1lbnRcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNiAyOEgzMFYzMEgxNnpNMTYgMjNIMzBWMjVIMTZ6TTEwLjg0NTggMzBIMTNMOC42NCAyMEg2LjM2TDIgMzBINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgMjZMNy41IDIxLjYzNDcgOS4yNDU5IDI2ek0yIDE1SDMwVjE3SDJ6TTE2IDdIMzBWOUgxNnpNMTYgMkgzMFY0SDE2ek0xMC44NDU4IDEySDEzTDguNjQgMkg2LjM2TDIgMTJINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgOEw3LjUgMy42MzQ3IDkuMjQ1OSA4elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIxNlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiVGV4dFZlcnRpY2FsQWxpZ25tZW50MTZcIiwgXCJmaWxlcGF0aFwiOiBcInRleHQtLXZlcnRpY2FsLWFsaWdubWVudC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTYgMjhIMzBWMzBIMTZ6TTE2IDIzSDMwVjI1SDE2ek0xMC44NDU4IDMwSDEzTDguNjQgMjBINi4zNkwyIDMwSDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDI2TDcuNSAyMS42MzQ3IDkuMjQ1OSAyNnpNMiAxNUgzMFYxN0gyek0xNiA3SDMwVjlIMTZ6TTE2IDJIMzBWNEgxNnpNMTAuODQ1OCAxMkgxM0w4LjY0IDJINi4zNkwyIDEySDQuMTU0MmwuOC0yaDUuMDkxNnpNNS43NTQxIDhMNy41IDMuNjM0NyA5LjI0NTkgOHpcIiB9IH1dLCBcIm5hbWVcIjogXCJ0ZXh0LS12ZXJ0aWNhbC1hbGlnbm1lbnRcIiwgXCJzaXplXCI6IDE2IH0sIFwic2l6ZVwiOiAxNiB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMTZcXFwiIGhlaWdodD1cXFwiMTZcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0xNiAyOEgzMFYzMEgxNnpNMTYgMjNIMzBWMjVIMTZ6TTEwLjg0NTggMzBIMTNMOC42NCAyMEg2LjM2TDIgMzBINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgMjZMNy41IDIxLjYzNDcgOS4yNDU5IDI2ek0yIDE1SDMwVjE3SDJ6TTE2IDdIMzBWOUgxNnpNMTYgMkgzMFY0SDE2ek0xMC44NDU4IDEySDEzTDguNjQgMkg2LjM2TDIgMTJINC4xNTQybC44LTJoNS4wOTE2ek01Ljc1NDEgOEw3LjUgMy42MzQ3IDkuMjQ1OSA4elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmVfMSA9IFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZTtcbiAgICBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUucHJvdG90eXBlLm5nQWZ0ZXJWaWV3SW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHN2ZyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcbiAgICAgICAgdmFyIGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV07XG4gICAgICAgIHZhciBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgICAgIHZhciByYXdTVkcgPSBpY29uLnN2ZztcbiAgICAgICAgdmFyIHN2Z0VsZW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHJhd1NWRywgXCJpbWFnZS9zdmcreG1sXCIpLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgdmFyIG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgICAgICAvLyBpbXBvcnROb2RlIG1ha2VzIGEgY2xvbmUgb2YgdGhlIG5vZGVcbiAgICAgICAgICAgIC8vIHRoaXMgZW5zdXJlcyB3ZSBrZWVwIGxvb3Bpbmcgb3ZlciB0aGUgbm9kZXMgaW4gdGhlIHBhcnNlZCBkb2N1bWVudFxuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHN2Zy5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobm9kZSwgdHJ1ZSkpO1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgICAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzLnRpdGxlKSB7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICAgICAgICBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcisrO1xuICAgICAgICAgICAgdGl0bGUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0ZXh0LXZlcnRpY2FsLWFsaWdubWVudC1cIiArIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCh0aXRsZSk7XG4gICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwiYXJpYS1sYWJlbGxlZGJ5XCIsIFwidGV4dC12ZXJ0aWNhbC1hbGlnbm1lbnQtXCIgKyBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmVfMTtcbiAgICBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZS5jdG9yUGFyYW1ldGVycyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFtcbiAgICAgICAgeyB0eXBlOiBFbGVtZW50UmVmIH1cbiAgICBdOyB9O1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmUgPSBUZXh0VmVydGljYWxBbGlnbm1lbnREaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25UZXh0VmVydGljYWxBbGlnbm1lbnRdXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbRWxlbWVudFJlZl0pXG4gICAgXSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50RGlyZWN0aXZlKTtcbiAgICByZXR1cm4gVGV4dFZlcnRpY2FsQWxpZ25tZW50RGlyZWN0aXZlO1xufSgpKTtcbnZhciBUZXh0VmVydGljYWxBbGlnbm1lbnRNb2R1bGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGV4dFZlcnRpY2FsQWxpZ25tZW50TW9kdWxlKCkge1xuICAgIH1cbiAgICBUZXh0VmVydGljYWxBbGlnbm1lbnRNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50LFxuICAgICAgICAgICAgICAgIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgVGV4dFZlcnRpY2FsQWxpZ25tZW50Q29tcG9uZW50LFxuICAgICAgICAgICAgICAgIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZSxcbiAgICAgICAgICAgIF1cbiAgICAgICAgfSlcbiAgICBdLCBUZXh0VmVydGljYWxBbGlnbm1lbnRNb2R1bGUpO1xuICAgIHJldHVybiBUZXh0VmVydGljYWxBbGlnbm1lbnRNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBUZXh0VmVydGljYWxBbGlnbm1lbnRDb21wb25lbnQsIFRleHRWZXJ0aWNhbEFsaWdubWVudERpcmVjdGl2ZSwgVGV4dFZlcnRpY2FsQWxpZ25tZW50TW9kdWxlIH07XG4iXX0=