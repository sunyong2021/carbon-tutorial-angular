import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DirectionUTurnFilledComponent = /** @class */ (function () {
    function DirectionUTurnFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionUTurnFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionUTurnFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledComponent.prototype, "size", void 0);
DirectionUTurnFilledComponent.ɵfac = function DirectionUTurnFilledComponent_Factory(t) { return new (t || DirectionUTurnFilledComponent)(); };
DirectionUTurnFilledComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DirectionUTurnFilledComponent, selectors: [["ibm-icon-direction-u-turn-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDirectionUTurnFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DirectionUTurnFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DirectionUTurnFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionUTurnFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-direction-u-turn-filled",
                template: "\n    <svg\n      ibmIconDirectionUTurnFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionUTurnFilledComponent;
}());
var DirectionUTurnFilledDirective = /** @class */ (function () {
    function DirectionUTurnFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DirectionUTurnFilled32", "filepath": "direction--u-turn--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z", "data-icon-path": "inner-path" } }], "name": "direction--u-turn--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\"></path><path fill=\"none\" d=\"M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DirectionUTurnFilled24", "filepath": "direction--u-turn--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z", "data-icon-path": "inner-path" } }], "name": "direction--u-turn--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\"></path><path fill=\"none\" d=\"M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DirectionUTurnFilled20", "filepath": "direction--u-turn--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z", "data-icon-path": "inner-path" } }], "name": "direction--u-turn--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\"></path><path fill=\"none\" d=\"M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DirectionUTurnFilled16", "filepath": "direction--u-turn--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z" } }, { "elem": "path", "attrs": { "fill": "none", "d": "M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z", "data-icon-path": "inner-path" } }], "name": "direction--u-turn--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M28,2H4A2,2,0,0,0,2,4V28a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V4A2,2,0,0,0,28,2ZM21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\"></path><path fill=\"none\" d=\"M21,26l-7-7,1.4141-1.4141L20,22.1719V8H8V26H6V8A2.0023,2.0023,0,0,1,8,6H20a2.0023,2.0023,0,0,1,2,2V22.1719l4.5859-4.586L28,19Z\" data-icon-path=\"inner-path\"></path></svg>"
            },
        };
    }
    DirectionUTurnFilledDirective_1 = DirectionUTurnFilledDirective;
    DirectionUTurnFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DirectionUTurnFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "direction-u-turn-filled-" + DirectionUTurnFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "direction-u-turn-filled-" + DirectionUTurnFilledDirective_1.titleIdCounter);
        }
    };
    var DirectionUTurnFilledDirective_1;
    DirectionUTurnFilledDirective.titleIdCounter = 0;
    DirectionUTurnFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionUTurnFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DirectionUTurnFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DirectionUTurnFilledDirective.prototype, "size", void 0);
    DirectionUTurnFilledDirective = DirectionUTurnFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DirectionUTurnFilledDirective);
DirectionUTurnFilledDirective.ɵfac = function DirectionUTurnFilledDirective_Factory(t) { return new (t || DirectionUTurnFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DirectionUTurnFilledDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DirectionUTurnFilledDirective, selectors: [["", "ibmIconDirectionUTurnFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionUTurnFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDirectionUTurnFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DirectionUTurnFilledDirective;
}());
var DirectionUTurnFilledModule = /** @class */ (function () {
    function DirectionUTurnFilledModule() {
    }
DirectionUTurnFilledModule.ɵfac = function DirectionUTurnFilledModule_Factory(t) { return new (t || DirectionUTurnFilledModule)(); };
DirectionUTurnFilledModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DirectionUTurnFilledModule });
DirectionUTurnFilledModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DirectionUTurnFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DirectionUTurnFilledComponent,
                    DirectionUTurnFilledDirective,
                ],
                exports: [
                    DirectionUTurnFilledComponent,
                    DirectionUTurnFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DirectionUTurnFilledModule, { declarations: [DirectionUTurnFilledComponent, DirectionUTurnFilledDirective], exports: [DirectionUTurnFilledComponent, DirectionUTurnFilledDirective] }); })();
    return DirectionUTurnFilledModule;
}());

export { DirectionUTurnFilledComponent, DirectionUTurnFilledDirective, DirectionUTurnFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,