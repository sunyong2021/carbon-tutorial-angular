import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var ThumbsDownComponent = /** @class */ (function () {
    function ThumbsDownComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ThumbsDownComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ThumbsDownComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownComponent.prototype, "size", void 0);
ThumbsDownComponent.ɵfac = function ThumbsDownComponent_Factory(t) { return new (t || ThumbsDownComponent)(); };
ThumbsDownComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ThumbsDownComponent, selectors: [["ibm-icon-thumbs-down"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconThumbsDown", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function ThumbsDownComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [ThumbsDownDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThumbsDownComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-thumbs-down",
                template: "\n    <svg\n      ibmIconThumbsDown\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ThumbsDownComponent;
}());
var ThumbsDownDirective = /** @class */ (function () {
    function ThumbsDownDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "ThumbsDown32", "filepath": "thumbs-down/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z" } }], "name": "thumbs-down", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "ThumbsDown24", "filepath": "thumbs-down/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z" } }], "name": "thumbs-down", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "ThumbsDown20", "filepath": "thumbs-down/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z" } }], "name": "thumbs-down", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "ThumbsDown16", "filepath": "thumbs-down/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z" } }], "name": "thumbs-down", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M26.76,21A3.64,3.64,0,0,0,30,17V11c0-3.65-1.56-8-9-8H2V17H8.46L12,22.37,13,28.71v.12A1.51,1.51,0,0,0,14.43,30H16a3.22,3.22,0,0,0,.76,0A3.64,3.64,0,0,0,20,26V21h6A3.22,3.22,0,0,0,26.76,21ZM8,15H4V5H8Zm20,2c0,1.44-.56,2-2,2H18v7c0,1.44-.56,2-2,2H14.87l-.14-1L14,21.63,10,15.7V5H21c4.78,0,7,1.91,7,6Z\"></path></svg>"
            },
        };
    }
    ThumbsDownDirective_1 = ThumbsDownDirective;
    ThumbsDownDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ThumbsDownDirective_1.titleIdCounter++;
            title.setAttribute("id", "thumbs-down-" + ThumbsDownDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "thumbs-down-" + ThumbsDownDirective_1.titleIdCounter);
        }
    };
    var ThumbsDownDirective_1;
    ThumbsDownDirective.titleIdCounter = 0;
    ThumbsDownDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ThumbsDownDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ThumbsDownDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ThumbsDownDirective.prototype, "size", void 0);
    ThumbsDownDirective = ThumbsDownDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], ThumbsDownDirective);
ThumbsDownDirective.ɵfac = function ThumbsDownDirective_Factory(t) { return new (t || ThumbsDownDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThumbsDownDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ThumbsDownDirective, selectors: [["", "ibmIconThumbsDown", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThumbsDownDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconThumbsDown]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ThumbsDownDirective;
}());
var ThumbsDownModule = /** @class */ (function () {
    function ThumbsDownModule() {
    }
ThumbsDownModule.ɵfac = function ThumbsDownModule_Factory(t) { return new (t || ThumbsDownModule)(); };
ThumbsDownModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ThumbsDownModule });
ThumbsDownModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThumbsDownModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ThumbsDownComponent,
                    ThumbsDownDirective,
                ],
                exports: [
                    ThumbsDownComponent,
                    ThumbsDownDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThumbsDownModule, { declarations: [ThumbsDownComponent, ThumbsDownDirective], exports: [ThumbsDownComponent, ThumbsDownDirective] }); })();
    return ThumbsDownModule;
}());

export { ThumbsDownComponent, ThumbsDownDirective, ThumbsDownModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,