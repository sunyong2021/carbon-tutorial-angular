import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var FaceMaskComponent = /** @class */ (function () {
    function FaceMaskComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FaceMaskComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FaceMaskComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskComponent.prototype, "size", void 0);
FaceMaskComponent.ɵfac = function FaceMaskComponent_Factory(t) { return new (t || FaceMaskComponent)(); };
FaceMaskComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FaceMaskComponent, selectors: [["ibm-icon-face-mask"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconFaceMask", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function FaceMaskComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [FaceMaskDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaceMaskComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-face-mask",
                template: "\n    <svg\n      ibmIconFaceMask\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FaceMaskComponent;
}());
var FaceMaskDirective = /** @class */ (function () {
    function FaceMaskDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "FaceMask32", "filepath": "face--mask/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z" } }, { "elem": "path", "attrs": { "d": "M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z" } }], "name": "face--mask", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z\"></path><path d=\"M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "FaceMask24", "filepath": "face--mask/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z" } }, { "elem": "path", "attrs": { "d": "M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z" } }], "name": "face--mask", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z\"></path><path d=\"M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "FaceMask20", "filepath": "face--mask/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z" } }, { "elem": "path", "attrs": { "d": "M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z" } }], "name": "face--mask", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z\"></path><path d=\"M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "FaceMask16", "filepath": "face--mask/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z" } }, { "elem": "path", "attrs": { "d": "M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z" } }], "name": "face--mask", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M11.5 11A2.5 2.5 0 1014 13.5 2.5 2.5 0 0011.5 11zM20.5 11A2.5 2.5 0 1023 13.5 2.5 2.5 0 0020.5 11z\"></path><path d=\"M30,16A14,14,0,1,0,8.8994,28.042l.0156.1562A1.993,1.993,0,0,0,10.9048,30h10.19a1.9929,1.9929,0,0,0,1.99-1.8008l.0156-.1572A13.9674,13.9674,0,0,0,30,16ZM16,4A11.99,11.99,0,0,1,27.97,15.397L22.7637,18H9.2363L4.0305,15.397A11.99,11.99,0,0,1,16,4ZM4.12,17.6777l3.94,1.97.5813,5.81A11.97,11.97,0,0,1,4.12,17.6777ZM21.0947,28H10.9053l-.8-8h11.79Zm2.2644-2.542.5811-5.81,3.94-1.97A11.9712,11.9712,0,0,1,23.3591,25.458Z\"></path></svg>"
            },
        };
    }
    FaceMaskDirective_1 = FaceMaskDirective;
    FaceMaskDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            FaceMaskDirective_1.titleIdCounter++;
            title.setAttribute("id", "face-mask-" + FaceMaskDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "face-mask-" + FaceMaskDirective_1.titleIdCounter);
        }
    };
    var FaceMaskDirective_1;
    FaceMaskDirective.titleIdCounter = 0;
    FaceMaskDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FaceMaskDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FaceMaskDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FaceMaskDirective.prototype, "size", void 0);
    FaceMaskDirective = FaceMaskDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], FaceMaskDirective);
FaceMaskDirective.ɵfac = function FaceMaskDirective_Factory(t) { return new (t || FaceMaskDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FaceMaskDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FaceMaskDirective, selectors: [["", "ibmIconFaceMask", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaceMaskDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconFaceMask]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FaceMaskDirective;
}());
var FaceMaskModule = /** @class */ (function () {
    function FaceMaskModule() {
    }
FaceMaskModule.ɵfac = function FaceMaskModule_Factory(t) { return new (t || FaceMaskModule)(); };
FaceMaskModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FaceMaskModule });
FaceMaskModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FaceMaskModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    FaceMaskComponent,
                    FaceMaskDirective,
                ],
                exports: [
                    FaceMaskComponent,
                    FaceMaskDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FaceMaskModule, { declarations: [FaceMaskComponent, FaceMaskDirective], exports: [FaceMaskComponent, FaceMaskDirective] }); })();
    return FaceMaskModule;
}());

export { FaceMaskComponent, FaceMaskDirective, FaceMaskModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFjZS0tbWFzay5qcyIsInNvdXJjZXMiOlsiZmFjZS0tbWFzay5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OzZOQVl1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgRmFjZU1hc2tDb21wb25lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRmFjZU1hc2tDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMuZm9jdXNhYmxlID0gZmFsc2U7XG4gICAgfVxuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEZhY2VNYXNrQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBGYWNlTWFza0NvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgRmFjZU1hc2tDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFIaWRkZW5cIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBGYWNlTWFza0NvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgRmFjZU1hc2tDb21wb25lbnQucHJvdG90eXBlLCBcImZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEZhY2VNYXNrQ29tcG9uZW50LnByb3RvdHlwZSwgXCJpbm5lckNsYXNzXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRmFjZU1hc2tDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBGYWNlTWFza0NvbXBvbmVudCA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBDb21wb25lbnQoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiaWJtLWljb24tZmFjZS1tYXNrXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25GYWNlTWFza1xcbiAgICAgIFtzaXplXT1cXFwic2l6ZVxcXCJcXG4gICAgICBbYXJpYUxhYmVsXT1cXFwiYXJpYUxhYmVsXFxcIlxcbiAgICAgIFthcmlhTGFiZWxsZWRieV09XFxcImFyaWFMYWJlbGxlZGJ5XFxcIlxcbiAgICAgIFthcmlhSGlkZGVuXT1cXFwiYXJpYUhpZGRlblxcXCJcXG4gICAgICBbdGl0bGVdPVxcXCJ0aXRsZVxcXCJcXG4gICAgICBbaXNGb2N1c2FibGVdPVxcXCJmb2N1c2FibGVcXFwiXFxuICAgICAgW2F0dHIuY2xhc3NdPVxcXCJpbm5lckNsYXNzXFxcIj5cXG4gICAgPC9zdmc+XFxuICBcIlxuICAgICAgICB9KVxuICAgIF0sIEZhY2VNYXNrQ29tcG9uZW50KTtcbiAgICByZXR1cm4gRmFjZU1hc2tDb21wb25lbnQ7XG59KCkpO1xudmFyIEZhY2VNYXNrRGlyZWN0aXZlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZhY2VNYXNrRGlyZWN0aXZlKGVsZW1lbnRSZWYpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50UmVmID0gZWxlbWVudFJlZjtcbiAgICAgICAgdGhpcy5pc0ZvY3VzYWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmljb25zID0ge1xuICAgICAgICAgICAgXCIzMlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiRmFjZU1hc2szMlwiLCBcImZpbGVwYXRoXCI6IFwiZmFjZS0tbWFzay8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsMTZBMTQsMTQsMCwxLDAsOC44OTk0LDI4LjA0MmwuMDE1Ni4xNTYyQTEuOTkzLDEuOTkzLDAsMCwwLDEwLjkwNDgsMzBoMTAuMTlhMS45OTI5LDEuOTkyOSwwLDAsMCwxLjk5LTEuODAwOGwuMDE1Ni0uMTU3MkExMy45Njc0LDEzLjk2NzQsMCwwLDAsMzAsMTZaTTE2LDRBMTEuOTksMTEuOTksMCwwLDEsMjcuOTcsMTUuMzk3TDIyLjc2MzcsMThIOS4yMzYzTDQuMDMwNSwxNS4zOTdBMTEuOTksMTEuOTksMCwwLDEsMTYsNFpNNC4xMiwxNy42Nzc3bDMuOTQsMS45Ny41ODEzLDUuODFBMTEuOTcsMTEuOTcsMCwwLDEsNC4xMiwxNy42Nzc3Wk0yMS4wOTQ3LDI4SDEwLjkwNTNsLS44LThoMTEuNzlabTIuMjY0NC0yLjU0Mi41ODExLTUuODEsMy45NC0xLjk3QTExLjk3MTIsMTEuOTcxMiwwLDAsMSwyMy4zNTkxLDI1LjQ1OFpcIiB9IH1dLCBcIm5hbWVcIjogXCJmYWNlLS1tYXNrXCIsIFwic2l6ZVwiOiAzMiB9LCBcInNpemVcIjogMzIgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjMyXFxcIiBoZWlnaHQ9XFxcIjMyXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0zMCwxNkExNCwxNCwwLDEsMCw4Ljg5OTQsMjguMDQybC4wMTU2LjE1NjJBMS45OTMsMS45OTMsMCwwLDAsMTAuOTA0OCwzMGgxMC4xOWExLjk5MjksMS45OTI5LDAsMCwwLDEuOTktMS44MDA4bC4wMTU2LS4xNTcyQTEzLjk2NzQsMTMuOTY3NCwwLDAsMCwzMCwxNlpNMTYsNEExMS45OSwxMS45OSwwLDAsMSwyNy45NywxNS4zOTdMMjIuNzYzNywxOEg5LjIzNjNMNC4wMzA1LDE1LjM5N0ExMS45OSwxMS45OSwwLDAsMSwxNiw0Wk00LjEyLDE3LjY3NzdsMy45NCwxLjk3LjU4MTMsNS44MUExMS45NywxMS45NywwLDAsMSw0LjEyLDE3LjY3NzdaTTIxLjA5NDcsMjhIMTAuOTA1M2wtLjgtOGgxMS43OVptMi4yNjQ0LTIuNTQyLjU4MTEtNS44MSwzLjk0LTEuOTdBMTEuOTcxMiwxMS45NzEyLDAsMCwxLDIzLjM1OTEsMjUuNDU4WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyNFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiRmFjZU1hc2syNFwiLCBcImZpbGVwYXRoXCI6IFwiZmFjZS0tbWFzay8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsMTZBMTQsMTQsMCwxLDAsOC44OTk0LDI4LjA0MmwuMDE1Ni4xNTYyQTEuOTkzLDEuOTkzLDAsMCwwLDEwLjkwNDgsMzBoMTAuMTlhMS45OTI5LDEuOTkyOSwwLDAsMCwxLjk5LTEuODAwOGwuMDE1Ni0uMTU3MkExMy45Njc0LDEzLjk2NzQsMCwwLDAsMzAsMTZaTTE2LDRBMTEuOTksMTEuOTksMCwwLDEsMjcuOTcsMTUuMzk3TDIyLjc2MzcsMThIOS4yMzYzTDQuMDMwNSwxNS4zOTdBMTEuOTksMTEuOTksMCwwLDEsMTYsNFpNNC4xMiwxNy42Nzc3bDMuOTQsMS45Ny41ODEzLDUuODFBMTEuOTcsMTEuOTcsMCwwLDEsNC4xMiwxNy42Nzc3Wk0yMS4wOTQ3LDI4SDEwLjkwNTNsLS44LThoMTEuNzlabTIuMjY0NC0yLjU0Mi41ODExLTUuODEsMy45NC0xLjk3QTExLjk3MTIsMTEuOTcxMiwwLDAsMSwyMy4zNTkxLDI1LjQ1OFpcIiB9IH1dLCBcIm5hbWVcIjogXCJmYWNlLS1tYXNrXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0zMCwxNkExNCwxNCwwLDEsMCw4Ljg5OTQsMjguMDQybC4wMTU2LjE1NjJBMS45OTMsMS45OTMsMCwwLDAsMTAuOTA0OCwzMGgxMC4xOWExLjk5MjksMS45OTI5LDAsMCwwLDEuOTktMS44MDA4bC4wMTU2LS4xNTcyQTEzLjk2NzQsMTMuOTY3NCwwLDAsMCwzMCwxNlpNMTYsNEExMS45OSwxMS45OSwwLDAsMSwyNy45NywxNS4zOTdMMjIuNzYzNywxOEg5LjIzNjNMNC4wMzA1LDE1LjM5N0ExMS45OSwxMS45OSwwLDAsMSwxNiw0Wk00LjEyLDE3LjY3NzdsMy45NCwxLjk3LjU4MTMsNS44MUExMS45NywxMS45NywwLDAsMSw0LjEyLDE3LjY3NzdaTTIxLjA5NDcsMjhIMTAuOTA1M2wtLjgtOGgxMS43OVptMi4yNjQ0LTIuNTQyLjU4MTEtNS44MSwzLjk0LTEuOTdBMTEuOTcxMiwxMS45NzEyLDAsMCwxLDIzLjM1OTEsMjUuNDU4WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiRmFjZU1hc2syMFwiLCBcImZpbGVwYXRoXCI6IFwiZmFjZS0tbWFzay8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsMTZBMTQsMTQsMCwxLDAsOC44OTk0LDI4LjA0MmwuMDE1Ni4xNTYyQTEuOTkzLDEuOTkzLDAsMCwwLDEwLjkwNDgsMzBoMTAuMTlhMS45OTI5LDEuOTkyOSwwLDAsMCwxLjk5LTEuODAwOGwuMDE1Ni0uMTU3MkExMy45Njc0LDEzLjk2NzQsMCwwLDAsMzAsMTZaTTE2LDRBMTEuOTksMTEuOTksMCwwLDEsMjcuOTcsMTUuMzk3TDIyLjc2MzcsMThIOS4yMzYzTDQuMDMwNSwxNS4zOTdBMTEuOTksMTEuOTksMCwwLDEsMTYsNFpNNC4xMiwxNy42Nzc3bDMuOTQsMS45Ny41ODEzLDUuODFBMTEuOTcsMTEuOTcsMCwwLDEsNC4xMiwxNy42Nzc3Wk0yMS4wOTQ3LDI4SDEwLjkwNTNsLS44LThoMTEuNzlabTIuMjY0NC0yLjU0Mi41ODExLTUuODEsMy45NC0xLjk3QTExLjk3MTIsMTEuOTcxMiwwLDAsMSwyMy4zNTkxLDI1LjQ1OFpcIiB9IH1dLCBcIm5hbWVcIjogXCJmYWNlLS1tYXNrXCIsIFwic2l6ZVwiOiAyMCB9LCBcInNpemVcIjogMjAgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0zMCwxNkExNCwxNCwwLDEsMCw4Ljg5OTQsMjguMDQybC4wMTU2LjE1NjJBMS45OTMsMS45OTMsMCwwLDAsMTAuOTA0OCwzMGgxMC4xOWExLjk5MjksMS45OTI5LDAsMCwwLDEuOTktMS44MDA4bC4wMTU2LS4xNTcyQTEzLjk2NzQsMTMuOTY3NCwwLDAsMCwzMCwxNlpNMTYsNEExMS45OSwxMS45OSwwLDAsMSwyNy45NywxNS4zOTdMMjIuNzYzNywxOEg5LjIzNjNMNC4wMzA1LDE1LjM5N0ExMS45OSwxMS45OSwwLDAsMSwxNiw0Wk00LjEyLDE3LjY3NzdsMy45NCwxLjk3LjU4MTMsNS44MUExMS45NywxMS45NywwLDAsMSw0LjEyLDE3LjY3NzdaTTIxLjA5NDcsMjhIMTAuOTA1M2wtLjgtOGgxMS43OVptMi4yNjQ0LTIuNTQyLjU4MTEtNS44MSwzLjk0LTEuOTdBMTEuOTcxMiwxMS45NzEyLDAsMCwxLDIzLjM1OTEsMjUuNDU4WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIxNlwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiRmFjZU1hc2sxNlwiLCBcImZpbGVwYXRoXCI6IFwiZmFjZS0tbWFzay8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelwiIH0gfSwgeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMzAsMTZBMTQsMTQsMCwxLDAsOC44OTk0LDI4LjA0MmwuMDE1Ni4xNTYyQTEuOTkzLDEuOTkzLDAsMCwwLDEwLjkwNDgsMzBoMTAuMTlhMS45OTI5LDEuOTkyOSwwLDAsMCwxLjk5LTEuODAwOGwuMDE1Ni0uMTU3MkExMy45Njc0LDEzLjk2NzQsMCwwLDAsMzAsMTZaTTE2LDRBMTEuOTksMTEuOTksMCwwLDEsMjcuOTcsMTUuMzk3TDIyLjc2MzcsMThIOS4yMzYzTDQuMDMwNSwxNS4zOTdBMTEuOTksMTEuOTksMCwwLDEsMTYsNFpNNC4xMiwxNy42Nzc3bDMuOTQsMS45Ny41ODEzLDUuODFBMTEuOTcsMTEuOTcsMCwwLDEsNC4xMiwxNy42Nzc3Wk0yMS4wOTQ3LDI4SDEwLjkwNTNsLS44LThoMTEuNzlabTIuMjY0NC0yLjU0Mi41ODExLTUuODEsMy45NC0xLjk3QTExLjk3MTIsMTEuOTcxMiwwLDAsMSwyMy4zNTkxLDI1LjQ1OFpcIiB9IH1dLCBcIm5hbWVcIjogXCJmYWNlLS1tYXNrXCIsIFwic2l6ZVwiOiAxNiB9LCBcInNpemVcIjogMTYgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjE2XFxcIiBoZWlnaHQ9XFxcIjE2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMTEuNSAxMUEyLjUgMi41IDAgMTAxNCAxMy41IDIuNSAyLjUgMCAwMDExLjUgMTF6TTIwLjUgMTFBMi41IDIuNSAwIDEwMjMgMTMuNSAyLjUgMi41IDAgMDAyMC41IDExelxcXCI+PC9wYXRoPjxwYXRoIGQ9XFxcIk0zMCwxNkExNCwxNCwwLDEsMCw4Ljg5OTQsMjguMDQybC4wMTU2LjE1NjJBMS45OTMsMS45OTMsMCwwLDAsMTAuOTA0OCwzMGgxMC4xOWExLjk5MjksMS45OTI5LDAsMCwwLDEuOTktMS44MDA4bC4wMTU2LS4xNTcyQTEzLjk2NzQsMTMuOTY3NCwwLDAsMCwzMCwxNlpNMTYsNEExMS45OSwxMS45OSwwLDAsMSwyNy45NywxNS4zOTdMMjIuNzYzNywxOEg5LjIzNjNMNC4wMzA1LDE1LjM5N0ExMS45OSwxMS45OSwwLDAsMSwxNiw0Wk00LjEyLDE3LjY3NzdsMy45NCwxLjk3LjU4MTMsNS44MUExMS45NywxMS45NywwLDAsMSw0LjEyLDE3LjY3NzdaTTIxLjA5NDcsMjhIMTAuOTA1M2wtLjgtOGgxMS43OVptMi4yNjQ0LTIuNTQyLjU4MTEtNS44MSwzLjk0LTEuOTdBMTEuOTcxMiwxMS45NzEyLDAsMCwxLDIzLjM1OTEsMjUuNDU4WlxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBGYWNlTWFza0RpcmVjdGl2ZV8xID0gRmFjZU1hc2tEaXJlY3RpdmU7XG4gICAgRmFjZU1hc2tEaXJlY3RpdmUucHJvdG90eXBlLm5nQWZ0ZXJWaWV3SW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHN2ZyA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgICAgICBzdmcuc2V0QXR0cmlidXRlKFwieG1sbnNcIiwgXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiKTtcbiAgICAgICAgdmFyIGljb24gPSB0aGlzLmljb25zW3RoaXMuc2l6ZV07XG4gICAgICAgIHZhciBkb21QYXJzZXIgPSBuZXcgRE9NUGFyc2VyKCk7XG4gICAgICAgIHZhciByYXdTVkcgPSBpY29uLnN2ZztcbiAgICAgICAgdmFyIHN2Z0VsZW1lbnQgPSBkb21QYXJzZXIucGFyc2VGcm9tU3RyaW5nKHJhd1NWRywgXCJpbWFnZS9zdmcreG1sXCIpLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgdmFyIG5vZGUgPSBzdmdFbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgICAgIHdoaWxlIChub2RlKSB7XG4gICAgICAgICAgICAvLyBpbXBvcnROb2RlIG1ha2VzIGEgY2xvbmUgb2YgdGhlIG5vZGVcbiAgICAgICAgICAgIC8vIHRoaXMgZW5zdXJlcyB3ZSBrZWVwIGxvb3Bpbmcgb3ZlciB0aGUgbm9kZXMgaW4gdGhlIHBhcnNlZCBkb2N1bWVudFxuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHN2Zy5vd25lckRvY3VtZW50LmltcG9ydE5vZGUobm9kZSwgdHJ1ZSkpO1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUubmV4dFNpYmxpbmc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBnZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgICAgIHdpZHRoOiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgaGVpZ2h0OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMuaGVpZ2h0LFxuICAgICAgICAgICAgdmlld0JveDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLnZpZXdCb3gsXG4gICAgICAgICAgICB0aXRsZTogdGhpcy50aXRsZSxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbFwiOiB0aGlzLmFyaWFMYWJlbCxcbiAgICAgICAgICAgIFwiYXJpYS1sYWJlbGxlZGJ5XCI6IHRoaXMuYXJpYUxhYmVsbGVkYnksXG4gICAgICAgICAgICBcImFyaWEtaGlkZGVuXCI6IHRoaXMuYXJpYUhpZGRlbixcbiAgICAgICAgICAgIGZvY3VzYWJsZTogdGhpcy5pc0ZvY3VzYWJsZS50b1N0cmluZygpXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgYXR0cktleXMgPSBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhdHRyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGtleSA9IGF0dHJLZXlzW2ldO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXR0cmlidXRlc1trZXldO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJ0aXRsZVwiKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzdmcuc2V0QXR0cmlidXRlKGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzLnRpdGxlKSB7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIik7XG4gICAgICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IGF0dHJpYnV0ZXMudGl0bGU7XG4gICAgICAgICAgICBGYWNlTWFza0RpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICAgICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImZhY2UtbWFzay1cIiArIEZhY2VNYXNrRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJmYWNlLW1hc2stXCIgKyBGYWNlTWFza0RpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIEZhY2VNYXNrRGlyZWN0aXZlXzE7XG4gICAgRmFjZU1hc2tEaXJlY3RpdmUudGl0bGVJZENvdW50ZXIgPSAwO1xuICAgIEZhY2VNYXNrRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRmFjZU1hc2tEaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbFwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEZhY2VNYXNrRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBGYWNlTWFza0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIEZhY2VNYXNrRGlyZWN0aXZlLnByb3RvdHlwZSwgXCJ0aXRsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBGYWNlTWFza0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwiaXNGb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBGYWNlTWFza0RpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIEZhY2VNYXNrRGlyZWN0aXZlID0gRmFjZU1hc2tEaXJlY3RpdmVfMSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBEaXJlY3RpdmUoe1xuICAgICAgICAgICAgc2VsZWN0b3I6IFwiW2libUljb25GYWNlTWFza11cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBGYWNlTWFza0RpcmVjdGl2ZSk7XG4gICAgcmV0dXJuIEZhY2VNYXNrRGlyZWN0aXZlO1xufSgpKTtcbnZhciBGYWNlTWFza01vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGYWNlTWFza01vZHVsZSgpIHtcbiAgICB9XG4gICAgRmFjZU1hc2tNb2R1bGUgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgTmdNb2R1bGUoe1xuICAgICAgICAgICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgICAgICAgICAgRmFjZU1hc2tDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgRmFjZU1hc2tEaXJlY3RpdmUsXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgZXhwb3J0czogW1xuICAgICAgICAgICAgICAgIEZhY2VNYXNrQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIEZhY2VNYXNrRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIEZhY2VNYXNrTW9kdWxlKTtcbiAgICByZXR1cm4gRmFjZU1hc2tNb2R1bGU7XG59KCkpO1xuXG5leHBvcnQgeyBGYWNlTWFza0NvbXBvbmVudCwgRmFjZU1hc2tEaXJlY3RpdmUsIEZhY2VNYXNrTW9kdWxlIH07XG4iXX0=