import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var WatsonHealthContourFindingComponent = /** @class */ (function () {
    function WatsonHealthContourFindingComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthContourFindingComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthContourFindingComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingComponent.prototype, "size", void 0);
WatsonHealthContourFindingComponent.ɵfac = function WatsonHealthContourFindingComponent_Factory(t) { return new (t || WatsonHealthContourFindingComponent)(); };
WatsonHealthContourFindingComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WatsonHealthContourFindingComponent, selectors: [["ibm-icon-watson-health-contour-finding"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconWatsonHealthContourFinding", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function WatsonHealthContourFindingComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [WatsonHealthContourFindingDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthContourFindingComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-watson-health-contour-finding",
                template: "\n    <svg\n      ibmIconWatsonHealthContourFinding\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthContourFindingComponent;
}());
var WatsonHealthContourFindingDirective = /** @class */ (function () {
    function WatsonHealthContourFindingDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "WatsonHealthContourFinding32", "filepath": "watson-health/contour-finding/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z" } }], "name": "contour-finding", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "WatsonHealthContourFinding24", "filepath": "watson-health/contour-finding/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z" } }], "name": "contour-finding", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "WatsonHealthContourFinding20", "filepath": "watson-health/contour-finding/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z" } }], "name": "contour-finding", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "WatsonHealthContourFinding16", "filepath": "watson-health/contour-finding/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z" } }], "name": "contour-finding", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M7.7 4.7a14.7029 14.7029 0 00-3 3.1L6.3 9A13.2634 13.2634 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.5111 12.5111 0 002 16H4A11.4756 11.4756 0 014.6 12.3zM2.7 20.4a14.4029 14.4029 0 002 3.9l1.6-1.2a12.8867 12.8867 0 01-1.7-3.3zM7.8 27.3a14.4029 14.4029 0 003.9 2l.6-1.9A12.8867 12.8867 0 019 25.7zM11.7 2.7l.6 1.9A11.4756 11.4756 0 0116 4V2A12.5111 12.5111 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.526 11.526 0 0123 25.7zM27.4 19.7l1.9.6A15.4747 15.4747 0 0030 16H28A11.4756 11.4756 0 0127.4 19.7zM29.2 11.6a14.4029 14.4029 0 00-2-3.9L25.6 8.9a12.8867 12.8867 0 011.7 3.3zM24.1 4.6a14.4029 14.4029 0 00-3.9-2l-.6 1.9a12.8867 12.8867 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.4756 11.4756 0 0116 28v2A21.4206 21.4206 0 0020.3 29.3zM16 26A10 10 0 1126 16 10.0115 10.0115 0 0116 26zM16 8a8 8 0 108 8A8.0092 8.0092 0 0016 8z\"></path></svg>"
            },
        };
    }
    WatsonHealthContourFindingDirective_1 = WatsonHealthContourFindingDirective;
    WatsonHealthContourFindingDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            WatsonHealthContourFindingDirective_1.titleIdCounter++;
            title.setAttribute("id", "watson-health-contour-finding-" + WatsonHealthContourFindingDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "watson-health-contour-finding-" + WatsonHealthContourFindingDirective_1.titleIdCounter);
        }
    };
    var WatsonHealthContourFindingDirective_1;
    WatsonHealthContourFindingDirective.titleIdCounter = 0;
    WatsonHealthContourFindingDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthContourFindingDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], WatsonHealthContourFindingDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], WatsonHealthContourFindingDirective.prototype, "size", void 0);
    WatsonHealthContourFindingDirective = WatsonHealthContourFindingDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], WatsonHealthContourFindingDirective);
WatsonHealthContourFindingDirective.ɵfac = function WatsonHealthContourFindingDirective_Factory(t) { return new (t || WatsonHealthContourFindingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
WatsonHealthContourFindingDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: WatsonHealthContourFindingDirective, selectors: [["", "ibmIconWatsonHealthContourFinding", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthContourFindingDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconWatsonHealthContourFinding]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return WatsonHealthContourFindingDirective;
}());
var WatsonHealthContourFindingModule = /** @class */ (function () {
    function WatsonHealthContourFindingModule() {
    }
WatsonHealthContourFindingModule.ɵfac = function WatsonHealthContourFindingModule_Factory(t) { return new (t || WatsonHealthContourFindingModule)(); };
WatsonHealthContourFindingModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: WatsonHealthContourFindingModule });
WatsonHealthContourFindingModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WatsonHealthContourFindingModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WatsonHealthContourFindingComponent,
                    WatsonHealthContourFindingDirective,
                ],
                exports: [
                    WatsonHealthContourFindingComponent,
                    WatsonHealthContourFindingDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(WatsonHealthContourFindingModule, { declarations: [WatsonHealthContourFindingComponent, WatsonHealthContourFindingDirective], exports: [WatsonHealthContourFindingComponent, WatsonHealthContourFindingDirective] }); })();
    return WatsonHealthContourFindingModule;
}());

export { WatsonHealthContourFindingComponent, WatsonHealthContourFindingDirective, WatsonHealthContourFindingModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,