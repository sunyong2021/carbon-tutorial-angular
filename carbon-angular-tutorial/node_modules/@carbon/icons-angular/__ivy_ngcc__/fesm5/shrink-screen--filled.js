import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var ShrinkScreenFilledComponent = /** @class */ (function () {
    function ShrinkScreenFilledComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ShrinkScreenFilledComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ShrinkScreenFilledComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledComponent.prototype, "size", void 0);
ShrinkScreenFilledComponent.ɵfac = function ShrinkScreenFilledComponent_Factory(t) { return new (t || ShrinkScreenFilledComponent)(); };
ShrinkScreenFilledComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ShrinkScreenFilledComponent, selectors: [["ibm-icon-shrink-screen-filled"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconShrinkScreenFilled", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function ShrinkScreenFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [ShrinkScreenFilledDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShrinkScreenFilledComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-shrink-screen-filled",
                template: "\n    <svg\n      ibmIconShrinkScreenFilled\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ShrinkScreenFilledComponent;
}());
var ShrinkScreenFilledDirective = /** @class */ (function () {
    function ShrinkScreenFilledDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "ShrinkScreenFilled32", "filepath": "shrink-screen--filled/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "rect", "attrs": { "width": "15", "height": "10", "x": "15", "y": "18", "rx": "2" } }, { "elem": "path", "attrs": { "d": "M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z" } }, { "elem": "path", "attrs": { "d": "M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z" } }], "name": "shrink-screen--filled", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect width=\"15\" height=\"10\" x=\"15\" y=\"18\" rx=\"2\"></rect><path d=\"M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z\"></path><path d=\"M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "ShrinkScreenFilled24", "filepath": "shrink-screen--filled/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "rect", "attrs": { "width": "15", "height": "10", "x": "15", "y": "18", "rx": "2" } }, { "elem": "path", "attrs": { "d": "M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z" } }, { "elem": "path", "attrs": { "d": "M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z" } }], "name": "shrink-screen--filled", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect width=\"15\" height=\"10\" x=\"15\" y=\"18\" rx=\"2\"></rect><path d=\"M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z\"></path><path d=\"M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "ShrinkScreenFilled20", "filepath": "shrink-screen--filled/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "rect", "attrs": { "width": "15", "height": "10", "x": "15", "y": "18", "rx": "2" } }, { "elem": "path", "attrs": { "d": "M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z" } }, { "elem": "path", "attrs": { "d": "M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z" } }], "name": "shrink-screen--filled", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect width=\"15\" height=\"10\" x=\"15\" y=\"18\" rx=\"2\"></rect><path d=\"M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z\"></path><path d=\"M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "ShrinkScreenFilled16", "filepath": "shrink-screen--filled/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "rect", "attrs": { "width": "15", "height": "10", "x": "15", "y": "18", "rx": "2" } }, { "elem": "path", "attrs": { "d": "M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z" } }, { "elem": "path", "attrs": { "d": "M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z" } }], "name": "shrink-screen--filled", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><rect width=\"15\" height=\"10\" x=\"15\" y=\"18\" rx=\"2\"></rect><path d=\"M12 10L12 13.586 7.707 9.293 6.293 10.707 10.586 15 7 15 7 17 14 17 14 10 12 10z\"></path><path d=\"M13,22H4a2.0023,2.0023,0,0,1-2-2V7A2.002,2.002,0,0,1,4,5H26a2.0023,2.0023,0,0,1,2,2v9H26V7H4V20h9Z\"></path></svg>"
            },
        };
    }
    ShrinkScreenFilledDirective_1 = ShrinkScreenFilledDirective;
    ShrinkScreenFilledDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            ShrinkScreenFilledDirective_1.titleIdCounter++;
            title.setAttribute("id", "shrink-screen-filled-" + ShrinkScreenFilledDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "shrink-screen-filled-" + ShrinkScreenFilledDirective_1.titleIdCounter);
        }
    };
    var ShrinkScreenFilledDirective_1;
    ShrinkScreenFilledDirective.titleIdCounter = 0;
    ShrinkScreenFilledDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ShrinkScreenFilledDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], ShrinkScreenFilledDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], ShrinkScreenFilledDirective.prototype, "size", void 0);
    ShrinkScreenFilledDirective = ShrinkScreenFilledDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], ShrinkScreenFilledDirective);
ShrinkScreenFilledDirective.ɵfac = function ShrinkScreenFilledDirective_Factory(t) { return new (t || ShrinkScreenFilledDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ShrinkScreenFilledDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ShrinkScreenFilledDirective, selectors: [["", "ibmIconShrinkScreenFilled", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShrinkScreenFilledDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconShrinkScreenFilled]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return ShrinkScreenFilledDirective;
}());
var ShrinkScreenFilledModule = /** @class */ (function () {
    function ShrinkScreenFilledModule() {
    }
ShrinkScreenFilledModule.ɵfac = function ShrinkScreenFilledModule_Factory(t) { return new (t || ShrinkScreenFilledModule)(); };
ShrinkScreenFilledModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ShrinkScreenFilledModule });
ShrinkScreenFilledModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShrinkScreenFilledModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ShrinkScreenFilledComponent,
                    ShrinkScreenFilledDirective,
                ],
                exports: [
                    ShrinkScreenFilledComponent,
                    ShrinkScreenFilledDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShrinkScreenFilledModule, { declarations: [ShrinkScreenFilledComponent, ShrinkScreenFilledDirective], exports: [ShrinkScreenFilledComponent, ShrinkScreenFilledDirective] }); })();
    return ShrinkScreenFilledModule;
}());

export { ShrinkScreenFilledComponent, ShrinkScreenFilledDirective, ShrinkScreenFilledModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,