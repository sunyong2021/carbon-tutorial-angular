import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var DewPointComponent = /** @class */ (function () {
    function DewPointComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointComponent.prototype, "size", void 0);
DewPointComponent.ɵfac = function DewPointComponent_Factory(t) { return new (t || DewPointComponent)(); };
DewPointComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DewPointComponent, selectors: [["ibm-icon-dew-point"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconDewPoint", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function DewPointComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [DewPointDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DewPointComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-dew-point",
                template: "\n    <svg\n      ibmIconDewPoint\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DewPointComponent;
}());
var DewPointDirective = /** @class */ (function () {
    function DewPointDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "DewPoint32", "filepath": "dew-point/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z" } }], "name": "dew-point", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "DewPoint24", "filepath": "dew-point/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z" } }], "name": "dew-point", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "DewPoint20", "filepath": "dew-point/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z" } }], "name": "dew-point", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "DewPoint16", "filepath": "dew-point/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z" } }], "name": "dew-point", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M24 10a4 4 0 114-4A4.0045 4.0045 0 0124 10zm0-6a2 2 0 102 2A2.0021 2.0021 0 0024 4zM14.5 30A5.4962 5.4962 0 019 24.52c0-3.4426 4.3442-21.0141 4.5293-21.76a1 1 0 011.9414 0C15.6558 3.5059 20 21.0774 20 24.52A5.4962 5.4962 0 0114.5 30zm0-22.7561C13.0391 13.38 11 22.4089 11 24.52a3.5 3.5 0 007 0C18 22.4089 15.9609 13.38 14.5 7.2439z\"></path></svg>"
            },
        };
    }
    DewPointDirective_1 = DewPointDirective;
    DewPointDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            DewPointDirective_1.titleIdCounter++;
            title.setAttribute("id", "dew-point-" + DewPointDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "dew-point-" + DewPointDirective_1.titleIdCounter);
        }
    };
    var DewPointDirective_1;
    DewPointDirective.titleIdCounter = 0;
    DewPointDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], DewPointDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], DewPointDirective.prototype, "size", void 0);
    DewPointDirective = DewPointDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], DewPointDirective);
DewPointDirective.ɵfac = function DewPointDirective_Factory(t) { return new (t || DewPointDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DewPointDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DewPointDirective, selectors: [["", "ibmIconDewPoint", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DewPointDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconDewPoint]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return DewPointDirective;
}());
var DewPointModule = /** @class */ (function () {
    function DewPointModule() {
    }
DewPointModule.ɵfac = function DewPointModule_Factory(t) { return new (t || DewPointModule)(); };
DewPointModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DewPointModule });
DewPointModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DewPointModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    DewPointComponent,
                    DewPointDirective,
                ],
                exports: [
                    DewPointComponent,
                    DewPointDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DewPointModule, { declarations: [DewPointComponent, DewPointDirective], exports: [DewPointComponent, DewPointDirective] }); })();
    return DewPointModule;
}());

export { DewPointComponent, DewPointDirective, DewPointModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV3LXBvaW50LmpzIiwic291cmNlcyI6WyJkZXctcG9pbnQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBTTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUlPO0FBQ1A7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs2TkFZdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfX2RlY29yYXRlLCBfX21ldGFkYXRhIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgSW5wdXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRGlyZWN0aXZlLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0QXR0cmlidXRlcyB9IGZyb20gJ0BjYXJib24vaWNvbi1oZWxwZXJzJztcblxudmFyIERld1BvaW50Q29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERld1BvaW50Q29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEZXdQb2ludENvbXBvbmVudC5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGV3UG9pbnRDb21wb25lbnQucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERld1BvaW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGV3UG9pbnRDb21wb25lbnQucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERld1BvaW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJmb2N1c2FibGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEZXdQb2ludENvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERld1BvaW50Q29tcG9uZW50LnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgRGV3UG9pbnRDb21wb25lbnQgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgQ29tcG9uZW50KHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcImlibS1pY29uLWRldy1wb2ludFwiLFxuICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxzdmdcXG4gICAgICBpYm1JY29uRGV3UG9pbnRcXG4gICAgICBbc2l6ZV09XFxcInNpemVcXFwiXFxuICAgICAgW2FyaWFMYWJlbF09XFxcImFyaWFMYWJlbFxcXCJcXG4gICAgICBbYXJpYUxhYmVsbGVkYnldPVxcXCJhcmlhTGFiZWxsZWRieVxcXCJcXG4gICAgICBbYXJpYUhpZGRlbl09XFxcImFyaWFIaWRkZW5cXFwiXFxuICAgICAgW3RpdGxlXT1cXFwidGl0bGVcXFwiXFxuICAgICAgW2lzRm9jdXNhYmxlXT1cXFwiZm9jdXNhYmxlXFxcIlxcbiAgICAgIFthdHRyLmNsYXNzXT1cXFwiaW5uZXJDbGFzc1xcXCI+XFxuICAgIDwvc3ZnPlxcbiAgXCJcbiAgICAgICAgfSlcbiAgICBdLCBEZXdQb2ludENvbXBvbmVudCk7XG4gICAgcmV0dXJuIERld1BvaW50Q29tcG9uZW50O1xufSgpKTtcbnZhciBEZXdQb2ludERpcmVjdGl2ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEZXdQb2ludERpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRld1BvaW50MzJcIiwgXCJmaWxlcGF0aFwiOiBcImRldy1wb2ludC8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjQgMTBhNCA0IDAgMTE0LTRBNC4wMDQ1IDQuMDA0NSAwIDAxMjQgMTB6bTAtNmEyIDIgMCAxMDIgMkEyLjAwMjEgMi4wMDIxIDAgMDAyNCA0ek0xNC41IDMwQTUuNDk2MiA1LjQ5NjIgMCAwMTkgMjQuNTJjMC0zLjQ0MjYgNC4zNDQyLTIxLjAxNDEgNC41MjkzLTIxLjc2YTEgMSAwIDAxMS45NDE0IDBDMTUuNjU1OCAzLjUwNTkgMjAgMjEuMDc3NCAyMCAyNC41MkE1LjQ5NjIgNS40OTYyIDAgMDExNC41IDMwem0wLTIyLjc1NjFDMTMuMDM5MSAxMy4zOCAxMSAyMi40MDg5IDExIDI0LjUyYTMuNSAzLjUgMCAwMDcgMEMxOCAyMi40MDg5IDE1Ljk2MDkgMTMuMzggMTQuNSA3LjI0Mzl6XCIgfSB9XSwgXCJuYW1lXCI6IFwiZGV3LXBvaW50XCIsIFwic2l6ZVwiOiAzMiB9LCBcInNpemVcIjogMzIgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjMyXFxcIiBoZWlnaHQ9XFxcIjMyXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjQgMTBhNCA0IDAgMTE0LTRBNC4wMDQ1IDQuMDA0NSAwIDAxMjQgMTB6bTAtNmEyIDIgMCAxMDIgMkEyLjAwMjEgMi4wMDIxIDAgMDAyNCA0ek0xNC41IDMwQTUuNDk2MiA1LjQ5NjIgMCAwMTkgMjQuNTJjMC0zLjQ0MjYgNC4zNDQyLTIxLjAxNDEgNC41MjkzLTIxLjc2YTEgMSAwIDAxMS45NDE0IDBDMTUuNjU1OCAzLjUwNTkgMjAgMjEuMDc3NCAyMCAyNC41MkE1LjQ5NjIgNS40OTYyIDAgMDExNC41IDMwem0wLTIyLjc1NjFDMTMuMDM5MSAxMy4zOCAxMSAyMi40MDg5IDExIDI0LjUyYTMuNSAzLjUgMCAwMDcgMEMxOCAyMi40MDg5IDE1Ljk2MDkgMTMuMzggMTQuNSA3LjI0Mzl6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIjI0XCI6IHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YTogeyBcIm1vZHVsZU5hbWVcIjogXCJEZXdQb2ludDI0XCIsIFwiZmlsZXBhdGhcIjogXCJkZXctcG9pbnQvMjQuanNcIiwgXCJkZXNjcmlwdG9yXCI6IHsgXCJlbGVtXCI6IFwic3ZnXCIsIFwiYXR0cnNcIjogeyBcInhtbG5zXCI6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJ2aWV3Qm94XCI6IFwiMCAwIDMyIDMyXCIsIFwiZmlsbFwiOiBcImN1cnJlbnRDb2xvclwiLCBcIndpZHRoXCI6IDI0LCBcImhlaWdodFwiOiAyNCB9LCBcImNvbnRlbnRcIjogW3sgXCJlbGVtXCI6IFwicGF0aFwiLCBcImF0dHJzXCI6IHsgXCJkXCI6IFwiTTI0IDEwYTQgNCAwIDExNC00QTQuMDA0NSA0LjAwNDUgMCAwMTI0IDEwem0wLTZhMiAyIDAgMTAyIDJBMi4wMDIxIDIuMDAyMSAwIDAwMjQgNHpNMTQuNSAzMEE1LjQ5NjIgNS40OTYyIDAgMDE5IDI0LjUyYzAtMy40NDI2IDQuMzQ0Mi0yMS4wMTQxIDQuNTI5My0yMS43NmExIDEgMCAwMTEuOTQxNCAwQzE1LjY1NTggMy41MDU5IDIwIDIxLjA3NzQgMjAgMjQuNTJBNS40OTYyIDUuNDk2MiAwIDAxMTQuNSAzMHptMC0yMi43NTYxQzEzLjAzOTEgMTMuMzggMTEgMjIuNDA4OSAxMSAyNC41MmEzLjUgMy41IDAgMDA3IDBDMTggMjIuNDA4OSAxNS45NjA5IDEzLjM4IDE0LjUgNy4yNDM5elwiIH0gfV0sIFwibmFtZVwiOiBcImRldy1wb2ludFwiLCBcInNpemVcIjogMjQgfSwgXCJzaXplXCI6IDI0IH0sXG4gICAgICAgICAgICAgICAgc3ZnOiBcIjxzdmcgZm9jdXNhYmxlPVxcXCJmYWxzZVxcXCIgcHJlc2VydmVBc3BlY3RSYXRpbz1cXFwieE1pZFlNaWQgbWVldFxcXCIgeG1sbnM9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiBmaWxsPVxcXCJjdXJyZW50Q29sb3JcXFwiIHdpZHRoPVxcXCIyNFxcXCIgaGVpZ2h0PVxcXCIyNFxcXCIgdmlld0JveD1cXFwiMCAwIDMyIDMyXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCI+PHBhdGggZD1cXFwiTTI0IDEwYTQgNCAwIDExNC00QTQuMDA0NSA0LjAwNDUgMCAwMTI0IDEwem0wLTZhMiAyIDAgMTAyIDJBMi4wMDIxIDIuMDAyMSAwIDAwMjQgNHpNMTQuNSAzMEE1LjQ5NjIgNS40OTYyIDAgMDE5IDI0LjUyYzAtMy40NDI2IDQuMzQ0Mi0yMS4wMTQxIDQuNTI5My0yMS43NmExIDEgMCAwMTEuOTQxNCAwQzE1LjY1NTggMy41MDU5IDIwIDIxLjA3NzQgMjAgMjQuNTJBNS40OTYyIDUuNDk2MiAwIDAxMTQuNSAzMHptMC0yMi43NTYxQzEzLjAzOTEgMTMuMzggMTEgMjIuNDA4OSAxMSAyNC41MmEzLjUgMy41IDAgMDA3IDBDMTggMjIuNDA4OSAxNS45NjA5IDEzLjM4IDE0LjUgNy4yNDM5elxcXCI+PC9wYXRoPjwvc3ZnPlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCIyMFwiOiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsgXCJtb2R1bGVOYW1lXCI6IFwiRGV3UG9pbnQyMFwiLCBcImZpbGVwYXRoXCI6IFwiZGV3LXBvaW50LzIwLmpzXCIsIFwiZGVzY3JpcHRvclwiOiB7IFwiZWxlbVwiOiBcInN2Z1wiLCBcImF0dHJzXCI6IHsgXCJ4bWxuc1wiOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIFwidmlld0JveFwiOiBcIjAgMCAzMiAzMlwiLCBcImZpbGxcIjogXCJjdXJyZW50Q29sb3JcIiwgXCJ3aWR0aFwiOiAyMCwgXCJoZWlnaHRcIjogMjAgfSwgXCJjb250ZW50XCI6IFt7IFwiZWxlbVwiOiBcInBhdGhcIiwgXCJhdHRyc1wiOiB7IFwiZFwiOiBcIk0yNCAxMGE0IDQgMCAxMTQtNEE0LjAwNDUgNC4wMDQ1IDAgMDEyNCAxMHptMC02YTIgMiAwIDEwMiAyQTIuMDAyMSAyLjAwMjEgMCAwMDI0IDR6TTE0LjUgMzBBNS40OTYyIDUuNDk2MiAwIDAxOSAyNC41MmMwLTMuNDQyNiA0LjM0NDItMjEuMDE0MSA0LjUyOTMtMjEuNzZhMSAxIDAgMDExLjk0MTQgMEMxNS42NTU4IDMuNTA1OSAyMCAyMS4wNzc0IDIwIDI0LjUyQTUuNDk2MiA1LjQ5NjIgMCAwMTE0LjUgMzB6bTAtMjIuNzU2MUMxMy4wMzkxIDEzLjM4IDExIDIyLjQwODkgMTEgMjQuNTJhMy41IDMuNSAwIDAwNyAwQzE4IDIyLjQwODkgMTUuOTYwOSAxMy4zOCAxNC41IDcuMjQzOXpcIiB9IH1dLCBcIm5hbWVcIjogXCJkZXctcG9pbnRcIiwgXCJzaXplXCI6IDIwIH0sIFwic2l6ZVwiOiAyMCB9LFxuICAgICAgICAgICAgICAgIHN2ZzogXCI8c3ZnIGZvY3VzYWJsZT1cXFwiZmFsc2VcXFwiIHByZXNlcnZlQXNwZWN0UmF0aW89XFxcInhNaWRZTWlkIG1lZXRcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgZmlsbD1cXFwiY3VycmVudENvbG9yXFxcIiB3aWR0aD1cXFwiMjBcXFwiIGhlaWdodD1cXFwiMjBcXFwiIHZpZXdCb3g9XFxcIjAgMCAzMiAzMlxcXCIgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiPjxwYXRoIGQ9XFxcIk0yNCAxMGE0IDQgMCAxMTQtNEE0LjAwNDUgNC4wMDQ1IDAgMDEyNCAxMHptMC02YTIgMiAwIDEwMiAyQTIuMDAyMSAyLjAwMjEgMCAwMDI0IDR6TTE0LjUgMzBBNS40OTYyIDUuNDk2MiAwIDAxOSAyNC41MmMwLTMuNDQyNiA0LjM0NDItMjEuMDE0MSA0LjUyOTMtMjEuNzZhMSAxIDAgMDExLjk0MTQgMEMxNS42NTU4IDMuNTA1OSAyMCAyMS4wNzc0IDIwIDI0LjUyQTUuNDk2MiA1LjQ5NjIgMCAwMTE0LjUgMzB6bTAtMjIuNzU2MUMxMy4wMzkxIDEzLjM4IDExIDIyLjQwODkgMTEgMjQuNTJhMy41IDMuNSAwIDAwNyAwQzE4IDIyLjQwODkgMTUuOTYwOSAxMy4zOCAxNC41IDcuMjQzOXpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIkRld1BvaW50MTZcIiwgXCJmaWxlcGF0aFwiOiBcImRldy1wb2ludC8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjQgMTBhNCA0IDAgMTE0LTRBNC4wMDQ1IDQuMDA0NSAwIDAxMjQgMTB6bTAtNmEyIDIgMCAxMDIgMkEyLjAwMjEgMi4wMDIxIDAgMDAyNCA0ek0xNC41IDMwQTUuNDk2MiA1LjQ5NjIgMCAwMTkgMjQuNTJjMC0zLjQ0MjYgNC4zNDQyLTIxLjAxNDEgNC41MjkzLTIxLjc2YTEgMSAwIDAxMS45NDE0IDBDMTUuNjU1OCAzLjUwNTkgMjAgMjEuMDc3NCAyMCAyNC41MkE1LjQ5NjIgNS40OTYyIDAgMDExNC41IDMwem0wLTIyLjc1NjFDMTMuMDM5MSAxMy4zOCAxMSAyMi40MDg5IDExIDI0LjUyYTMuNSAzLjUgMCAwMDcgMEMxOCAyMi40MDg5IDE1Ljk2MDkgMTMuMzggMTQuNSA3LjI0Mzl6XCIgfSB9XSwgXCJuYW1lXCI6IFwiZGV3LXBvaW50XCIsIFwic2l6ZVwiOiAxNiB9LCBcInNpemVcIjogMTYgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjE2XFxcIiBoZWlnaHQ9XFxcIjE2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjQgMTBhNCA0IDAgMTE0LTRBNC4wMDQ1IDQuMDA0NSAwIDAxMjQgMTB6bTAtNmEyIDIgMCAxMDIgMkEyLjAwMjEgMi4wMDIxIDAgMDAyNCA0ek0xNC41IDMwQTUuNDk2MiA1LjQ5NjIgMCAwMTkgMjQuNTJjMC0zLjQ0MjYgNC4zNDQyLTIxLjAxNDEgNC41MjkzLTIxLjc2YTEgMSAwIDAxMS45NDE0IDBDMTUuNjU1OCAzLjUwNTkgMjAgMjEuMDc3NCAyMCAyNC41MkE1LjQ5NjIgNS40OTYyIDAgMDExNC41IDMwem0wLTIyLjc1NjFDMTMuMDM5MSAxMy4zOCAxMSAyMi40MDg5IDExIDI0LjUyYTMuNSAzLjUgMCAwMDcgMEMxOCAyMi40MDg5IDE1Ljk2MDkgMTMuMzggMTQuNSA3LjI0Mzl6XFxcIj48L3BhdGg+PC9zdmc+XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIERld1BvaW50RGlyZWN0aXZlXzEgPSBEZXdQb2ludERpcmVjdGl2ZTtcbiAgICBEZXdQb2ludERpcmVjdGl2ZS5wcm90b3R5cGUubmdBZnRlclZpZXdJbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3ZnID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XG4gICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJ4bWxuc1wiLCBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIpO1xuICAgICAgICB2YXIgaWNvbiA9IHRoaXMuaWNvbnNbdGhpcy5zaXplXTtcbiAgICAgICAgdmFyIGRvbVBhcnNlciA9IG5ldyBET01QYXJzZXIoKTtcbiAgICAgICAgdmFyIHJhd1NWRyA9IGljb24uc3ZnO1xuICAgICAgICB2YXIgc3ZnRWxlbWVudCA9IGRvbVBhcnNlci5wYXJzZUZyb21TdHJpbmcocmF3U1ZHLCBcImltYWdlL3N2Zyt4bWxcIikuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICB2YXIgbm9kZSA9IHN2Z0VsZW1lbnQuZmlyc3RDaGlsZDtcbiAgICAgICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgICAgICAgIC8vIGltcG9ydE5vZGUgbWFrZXMgYSBjbG9uZSBvZiB0aGUgbm9kZVxuICAgICAgICAgICAgLy8gdGhpcyBlbnN1cmVzIHdlIGtlZXAgbG9vcGluZyBvdmVyIHRoZSBub2RlcyBpbiB0aGUgcGFyc2VkIGRvY3VtZW50XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoc3ZnLm93bmVyRG9jdW1lbnQuaW1wb3J0Tm9kZShub2RlLCB0cnVlKSk7XG4gICAgICAgICAgICBub2RlID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGdldEF0dHJpYnV0ZXMoe1xuICAgICAgICAgICAgd2lkdGg6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICBoZWlnaHQ6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy5oZWlnaHQsXG4gICAgICAgICAgICB2aWV3Qm94OiBpY29uLm1ldGFkYXRhLmRlc2NyaXB0b3IuYXR0cnMudmlld0JveCxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHRoaXMuYXJpYUxhYmVsLFxuICAgICAgICAgICAgXCJhcmlhLWxhYmVsbGVkYnlcIjogdGhpcy5hcmlhTGFiZWxsZWRieSxcbiAgICAgICAgICAgIFwiYXJpYS1oaWRkZW5cIjogdGhpcy5hcmlhSGlkZGVuLFxuICAgICAgICAgICAgZm9jdXNhYmxlOiB0aGlzLmlzRm9jdXNhYmxlLnRvU3RyaW5nKClcbiAgICAgICAgfSk7XG4gICAgICAgIHZhciBhdHRyS2V5cyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dHJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gYXR0cktleXNbaV07XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcInRpdGxlXCIpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGF0dHJpYnV0ZXMudGl0bGUpIHtcbiAgICAgICAgICAgIHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0aXRsZVwiKTtcbiAgICAgICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gYXR0cmlidXRlcy50aXRsZTtcbiAgICAgICAgICAgIERld1BvaW50RGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIrKztcbiAgICAgICAgICAgIHRpdGxlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZGV3LXBvaW50LVwiICsgRGV3UG9pbnREaXJlY3RpdmVfMS50aXRsZUlkQ291bnRlcik7XG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQodGl0bGUpO1xuICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxsZWRieVwiLCBcImRldy1wb2ludC1cIiArIERld1BvaW50RGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICB2YXIgRGV3UG9pbnREaXJlY3RpdmVfMTtcbiAgICBEZXdQb2ludERpcmVjdGl2ZS50aXRsZUlkQ291bnRlciA9IDA7XG4gICAgRGV3UG9pbnREaXJlY3RpdmUuY3RvclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBbXG4gICAgICAgIHsgdHlwZTogRWxlbWVudFJlZiB9XG4gICAgXTsgfTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBEZXdQb2ludERpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGV3UG9pbnREaXJlY3RpdmUucHJvdG90eXBlLCBcImFyaWFMYWJlbGxlZGJ5XCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERld1BvaW50RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgRGV3UG9pbnREaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIERld1BvaW50RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJpc0ZvY3VzYWJsZVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIERld1BvaW50RGlyZWN0aXZlLnByb3RvdHlwZSwgXCJzaXplXCIsIHZvaWQgMCk7XG4gICAgRGV3UG9pbnREaXJlY3RpdmUgPSBEZXdQb2ludERpcmVjdGl2ZV8xID0gX19kZWNvcmF0ZShbXG4gICAgICAgIERpcmVjdGl2ZSh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJbaWJtSWNvbkRld1BvaW50XVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnBhcmFtdHlwZXNcIiwgW0VsZW1lbnRSZWZdKVxuICAgIF0sIERld1BvaW50RGlyZWN0aXZlKTtcbiAgICByZXR1cm4gRGV3UG9pbnREaXJlY3RpdmU7XG59KCkpO1xudmFyIERld1BvaW50TW9kdWxlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERld1BvaW50TW9kdWxlKCkge1xuICAgIH1cbiAgICBEZXdQb2ludE1vZHVsZSA9IF9fZGVjb3JhdGUoW1xuICAgICAgICBOZ01vZHVsZSh7XG4gICAgICAgICAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICBEZXdQb2ludENvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBEZXdQb2ludERpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgRGV3UG9pbnRDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgRGV3UG9pbnREaXJlY3RpdmUsXG4gICAgICAgICAgICBdXG4gICAgICAgIH0pXG4gICAgXSwgRGV3UG9pbnRNb2R1bGUpO1xuICAgIHJldHVybiBEZXdQb2ludE1vZHVsZTtcbn0oKSk7XG5cbmV4cG9ydCB7IERld1BvaW50Q29tcG9uZW50LCBEZXdQb2ludERpcmVjdGl2ZSwgRGV3UG9pbnRNb2R1bGUgfTtcbiJdfQ==