import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var FlowStreamComponent = /** @class */ (function () {
    function FlowStreamComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FlowStreamComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FlowStreamComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamComponent.prototype, "size", void 0);
FlowStreamComponent.ɵfac = function FlowStreamComponent_Factory(t) { return new (t || FlowStreamComponent)(); };
FlowStreamComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FlowStreamComponent, selectors: [["ibm-icon-flow-stream"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconFlowStream", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function FlowStreamComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [FlowStreamDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FlowStreamComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-flow-stream",
                template: "\n    <svg\n      ibmIconFlowStream\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FlowStreamComponent;
}());
var FlowStreamDirective = /** @class */ (function () {
    function FlowStreamDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "FlowStream32", "filepath": "flow--stream/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z" } }, { "elem": "path", "attrs": { "d": "M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z" } }], "name": "flow--stream", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z\"></path><path d=\"M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "FlowStream24", "filepath": "flow--stream/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z" } }, { "elem": "path", "attrs": { "d": "M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z" } }], "name": "flow--stream", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z\"></path><path d=\"M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "FlowStream20", "filepath": "flow--stream/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z" } }, { "elem": "path", "attrs": { "d": "M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z" } }], "name": "flow--stream", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z\"></path><path d=\"M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "FlowStream16", "filepath": "flow--stream/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z" } }, { "elem": "path", "attrs": { "d": "M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z" } }], "name": "flow--stream", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M20 24H11.8625a4.13 4.13 0 00-.4284-1.02L21.98 12.4343A3.9943 3.9943 0 1020.1414 8H14v2h6.1414a3.96 3.96 0 00.4243 1.02L10.02 21.5656A3.9943 3.9943 0 1011.8587 26H20v3h8V21H20zM24 7a2 2 0 11-2 2A2.0023 2.0023 0 0124 7zM8 27a2 2 0 112-2A2.0023 2.0023 0 018 27zm14-4h4v4H22zM9.6929 12.7505a5 5 0 01-.0005-7.5L11.0166 6.75a3 3 0 00-.0005 4.501z\"></path><path d=\"M7.0474,15.751a9,9,0,0,1,0-13.501l1.3232,1.5a7,7,0,0,0,0,10.501Z\"></path></svg>"
            },
        };
    }
    FlowStreamDirective_1 = FlowStreamDirective;
    FlowStreamDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            FlowStreamDirective_1.titleIdCounter++;
            title.setAttribute("id", "flow-stream-" + FlowStreamDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "flow-stream-" + FlowStreamDirective_1.titleIdCounter);
        }
    };
    var FlowStreamDirective_1;
    FlowStreamDirective.titleIdCounter = 0;
    FlowStreamDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FlowStreamDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], FlowStreamDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FlowStreamDirective.prototype, "size", void 0);
    FlowStreamDirective = FlowStreamDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], FlowStreamDirective);
FlowStreamDirective.ɵfac = function FlowStreamDirective_Factory(t) { return new (t || FlowStreamDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FlowStreamDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FlowStreamDirective, selectors: [["", "ibmIconFlowStream", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FlowStreamDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconFlowStream]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return FlowStreamDirective;
}());
var FlowStreamModule = /** @class */ (function () {
    function FlowStreamModule() {
    }
FlowStreamModule.ɵfac = function FlowStreamModule_Factory(t) { return new (t || FlowStreamModule)(); };
FlowStreamModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FlowStreamModule });
FlowStreamModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FlowStreamModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    FlowStreamComponent,
                    FlowStreamDirective,
                ],
                exports: [
                    FlowStreamComponent,
                    FlowStreamDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlowStreamModule, { declarations: [FlowStreamComponent, FlowStreamDirective], exports: [FlowStreamComponent, FlowStreamDirective] }); })();
    return FlowStreamModule;
}());

export { FlowStreamComponent, FlowStreamDirective, FlowStreamModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,