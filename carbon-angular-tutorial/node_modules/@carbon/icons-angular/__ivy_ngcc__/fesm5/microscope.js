import { __decorate, __metadata } from 'tslib';
import { Input, Component, ElementRef, Directive, NgModule } from '@angular/core';
import { getAttributes } from '@carbon/icon-helpers';

import * as ɵngcc0 from '@angular/core';
var MicroscopeComponent = /** @class */ (function () {
    function MicroscopeComponent() {
        this.focusable = false;
    }
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeComponent.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicroscopeComponent.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeComponent.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicroscopeComponent.prototype, "focusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeComponent.prototype, "innerClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeComponent.prototype, "size", void 0);
MicroscopeComponent.ɵfac = function MicroscopeComponent_Factory(t) { return new (t || MicroscopeComponent)(); };
MicroscopeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MicroscopeComponent, selectors: [["ibm-icon-microscope"]], inputs: { focusable: "focusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", innerClass: "innerClass", size: "size" }, decls: 1, vars: 7, consts: [["ibmIconMicroscope", "", 3, "size", "ariaLabel", "ariaLabelledby", "ariaHidden", "title", "isFocusable"]], template: function MicroscopeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵnamespaceSVG();
        ɵngcc0.ɵɵelement(0, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("size", ctx.size)("ariaLabel", ctx.ariaLabel)("ariaLabelledby", ctx.ariaLabelledby)("ariaHidden", ctx.ariaHidden)("title", ctx.title)("isFocusable", ctx.focusable);
        ɵngcc0.ɵɵattribute("class", ctx.innerClass);
    } }, directives: function () { return [MicroscopeDirective]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicroscopeComponent, [{
        type: Component,
        args: [{
                selector: "ibm-icon-microscope",
                template: "\n    <svg\n      ibmIconMicroscope\n      [size]=\"size\"\n      [ariaLabel]=\"ariaLabel\"\n      [ariaLabelledby]=\"ariaLabelledby\"\n      [ariaHidden]=\"ariaHidden\"\n      [title]=\"title\"\n      [isFocusable]=\"focusable\"\n      [attr.class]=\"innerClass\">\n    </svg>\n  "
            }]
    }], function () { return []; }, { focusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], innerClass: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MicroscopeComponent;
}());
var MicroscopeDirective = /** @class */ (function () {
    function MicroscopeDirective(elementRef) {
        this.elementRef = elementRef;
        this.isFocusable = false;
        this.icons = {
            "32": {
                metadata: { "moduleName": "Microscope32", "filepath": "microscope/32.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 32, "height": 32 }, "content": [{ "elem": "path", "attrs": { "d": "M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z" } }], "name": "microscope", "size": 32 }, "size": 32 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z\"></path></svg>"
            },
            "24": {
                metadata: { "moduleName": "Microscope24", "filepath": "microscope/24.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 24, "height": 24 }, "content": [{ "elem": "path", "attrs": { "d": "M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z" } }], "name": "microscope", "size": 24 }, "size": 24 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"24\" height=\"24\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z\"></path></svg>"
            },
            "20": {
                metadata: { "moduleName": "Microscope20", "filepath": "microscope/20.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 20, "height": 20 }, "content": [{ "elem": "path", "attrs": { "d": "M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z" } }], "name": "microscope", "size": 20 }, "size": 20 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z\"></path></svg>"
            },
            "16": {
                metadata: { "moduleName": "Microscope16", "filepath": "microscope/16.js", "descriptor": { "elem": "svg", "attrs": { "xmlns": "http://www.w3.org/2000/svg", "viewBox": "0 0 32 32", "fill": "currentColor", "width": 16, "height": 16 }, "content": [{ "elem": "path", "attrs": { "d": "M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z" } }], "name": "microscope", "size": 16 }, "size": 16 },
                svg: "<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\" aria-hidden=\"true\"><path d=\"M25.3943,24a7.8772,7.8772,0,0,0-1.6707-8.5684,3.918,3.918,0,0,0-1.0844-4.414l2.7759-2.7759a2.0025,2.0025,0,0,0,0-2.8286L22.5869,2.5849a2.0021,2.0021,0,0,0-2.8286,0L6.5859,15.7573a2.0027,2.0027,0,0,0,0,2.8286l2.8282,2.8282a2.0024,2.0024,0,0,0,2.8286,0l4.7749-4.7754a3.9329,3.9329,0,0,0,5.5139.4326A5.9442,5.9442,0,0,1,23.1775,24H16v4H4v2H28V24ZM10.8281,20,8,17.1714,9.8787,15.293l2.8283,2.8281ZM16,14a3.9811,3.9811,0,0,0,.0762.7524L14.1211,16.707l-2.8284-2.8281,9.88-9.88L24.001,6.8271l-3.2488,3.2491A3.9771,3.9771,0,0,0,16,14Zm4,2a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,20,16Zm6,12H18V26h8Z\"></path></svg>"
            },
        };
    }
    MicroscopeDirective_1 = MicroscopeDirective;
    MicroscopeDirective.prototype.ngAfterViewInit = function () {
        var svg = this.elementRef.nativeElement;
        svg.setAttribute("xmlns", "http://www.w3.org/2000/svg");
        var icon = this.icons[this.size];
        var domParser = new DOMParser();
        var rawSVG = icon.svg;
        var svgElement = domParser.parseFromString(rawSVG, "image/svg+xml").documentElement;
        var node = svgElement.firstChild;
        while (node) {
            // importNode makes a clone of the node
            // this ensures we keep looping over the nodes in the parsed document
            svg.appendChild(svg.ownerDocument.importNode(node, true));
            node = node.nextSibling;
        }
        var attributes = getAttributes({
            width: icon.metadata.descriptor.attrs.height,
            height: icon.metadata.descriptor.attrs.height,
            viewBox: icon.metadata.descriptor.attrs.viewBox,
            title: this.title,
            "aria-label": this.ariaLabel,
            "aria-labelledby": this.ariaLabelledby,
            "aria-hidden": this.ariaHidden,
            focusable: this.isFocusable.toString()
        });
        var attrKeys = Object.keys(attributes);
        for (var i = 0; i < attrKeys.length; i++) {
            var key = attrKeys[i];
            var value = attributes[key];
            if (key === "title") {
                continue;
            }
            if (value) {
                svg.setAttribute(key, value);
            }
        }
        if (attributes.title) {
            var title = document.createElement("title");
            title.textContent = attributes.title;
            MicroscopeDirective_1.titleIdCounter++;
            title.setAttribute("id", "microscope-" + MicroscopeDirective_1.titleIdCounter);
            svg.appendChild(title);
            svg.setAttribute("aria-labelledby", "microscope-" + MicroscopeDirective_1.titleIdCounter);
        }
    };
    var MicroscopeDirective_1;
    MicroscopeDirective.titleIdCounter = 0;
    MicroscopeDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeDirective.prototype, "ariaLabel", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeDirective.prototype, "ariaLabelledby", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicroscopeDirective.prototype, "ariaHidden", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeDirective.prototype, "title", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], MicroscopeDirective.prototype, "isFocusable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], MicroscopeDirective.prototype, "size", void 0);
    MicroscopeDirective = MicroscopeDirective_1 = __decorate([ __metadata("design:paramtypes", [ElementRef])
    ], MicroscopeDirective);
MicroscopeDirective.ɵfac = function MicroscopeDirective_Factory(t) { return new (t || MicroscopeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MicroscopeDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MicroscopeDirective, selectors: [["", "ibmIconMicroscope", ""]], inputs: { isFocusable: "isFocusable", ariaLabel: "ariaLabel", ariaLabelledby: "ariaLabelledby", ariaHidden: "ariaHidden", title: "title", size: "size" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicroscopeDirective, [{
        type: Directive,
        args: [{
                selector: "[ibmIconMicroscope]"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { isFocusable: [{
            type: Input
        }], ariaLabel: [{
            type: Input
        }], ariaLabelledby: [{
            type: Input
        }], ariaHidden: [{
            type: Input
        }], title: [{
            type: Input
        }], size: [{
            type: Input
        }] }); })();
    return MicroscopeDirective;
}());
var MicroscopeModule = /** @class */ (function () {
    function MicroscopeModule() {
    }
MicroscopeModule.ɵfac = function MicroscopeModule_Factory(t) { return new (t || MicroscopeModule)(); };
MicroscopeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MicroscopeModule });
MicroscopeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MicroscopeModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    MicroscopeComponent,
                    MicroscopeDirective,
                ],
                exports: [
                    MicroscopeComponent,
                    MicroscopeDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MicroscopeModule, { declarations: [MicroscopeComponent, MicroscopeDirective], exports: [MicroscopeComponent, MicroscopeDirective] }); })();
    return MicroscopeModule;
}());

export { MicroscopeComponent, MicroscopeDirective, MicroscopeModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWljcm9zY29wZS5qcyIsInNvdXJjZXMiOlsibWljcm9zY29wZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFNNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBSU87QUFDUDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7O3VPQVl5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZGVjb3JhdGUsIF9fbWV0YWRhdGEgfSBmcm9tICd0c2xpYic7XG5pbXBvcnQgeyBJbnB1dCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBEaXJlY3RpdmUsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXRBdHRyaWJ1dGVzIH0gZnJvbSAnQGNhcmJvbi9pY29uLWhlbHBlcnMnO1xuXG52YXIgTWljcm9zY29wZUNvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNaWNyb3Njb3BlQ29tcG9uZW50KCkge1xuICAgICAgICB0aGlzLmZvY3VzYWJsZSA9IGZhbHNlO1xuICAgIH1cbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Njb3BlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIFN0cmluZylcbiAgICBdLCBNaWNyb3Njb3BlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhTGFiZWxsZWRieVwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgQm9vbGVhbilcbiAgICBdLCBNaWNyb3Njb3BlQ29tcG9uZW50LnByb3RvdHlwZSwgXCJhcmlhSGlkZGVuXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9zY29wZUNvbXBvbmVudC5wcm90b3R5cGUsIFwidGl0bGVcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTWljcm9zY29wZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiZm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9zY29wZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiaW5uZXJDbGFzc1wiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIE1pY3Jvc2NvcGVDb21wb25lbnQucHJvdG90eXBlLCBcInNpemVcIiwgdm9pZCAwKTtcbiAgICBNaWNyb3Njb3BlQ29tcG9uZW50ID0gX19kZWNvcmF0ZShbXG4gICAgICAgIENvbXBvbmVudCh7XG4gICAgICAgICAgICBzZWxlY3RvcjogXCJpYm0taWNvbi1taWNyb3Njb3BlXCIsXG4gICAgICAgICAgICB0ZW1wbGF0ZTogXCJcXG4gICAgPHN2Z1xcbiAgICAgIGlibUljb25NaWNyb3Njb3BlXFxuICAgICAgW3NpemVdPVxcXCJzaXplXFxcIlxcbiAgICAgIFthcmlhTGFiZWxdPVxcXCJhcmlhTGFiZWxcXFwiXFxuICAgICAgW2FyaWFMYWJlbGxlZGJ5XT1cXFwiYXJpYUxhYmVsbGVkYnlcXFwiXFxuICAgICAgW2FyaWFIaWRkZW5dPVxcXCJhcmlhSGlkZGVuXFxcIlxcbiAgICAgIFt0aXRsZV09XFxcInRpdGxlXFxcIlxcbiAgICAgIFtpc0ZvY3VzYWJsZV09XFxcImZvY3VzYWJsZVxcXCJcXG4gICAgICBbYXR0ci5jbGFzc109XFxcImlubmVyQ2xhc3NcXFwiPlxcbiAgICA8L3N2Zz5cXG4gIFwiXG4gICAgICAgIH0pXG4gICAgXSwgTWljcm9zY29wZUNvbXBvbmVudCk7XG4gICAgcmV0dXJuIE1pY3Jvc2NvcGVDb21wb25lbnQ7XG59KCkpO1xudmFyIE1pY3Jvc2NvcGVEaXJlY3RpdmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWljcm9zY29wZURpcmVjdGl2ZShlbGVtZW50UmVmKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudFJlZiA9IGVsZW1lbnRSZWY7XG4gICAgICAgIHRoaXMuaXNGb2N1c2FibGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pY29ucyA9IHtcbiAgICAgICAgICAgIFwiMzJcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIk1pY3Jvc2NvcGUzMlwiLCBcImZpbGVwYXRoXCI6IFwibWljcm9zY29wZS8zMi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMzIsIFwiaGVpZ2h0XCI6IDMyIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcIiB9IH1dLCBcIm5hbWVcIjogXCJtaWNyb3Njb3BlXCIsIFwic2l6ZVwiOiAzMiB9LCBcInNpemVcIjogMzIgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjMyXFxcIiBoZWlnaHQ9XFxcIjMyXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjRcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIk1pY3Jvc2NvcGUyNFwiLCBcImZpbGVwYXRoXCI6IFwibWljcm9zY29wZS8yNC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjQsIFwiaGVpZ2h0XCI6IDI0IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcIiB9IH1dLCBcIm5hbWVcIjogXCJtaWNyb3Njb3BlXCIsIFwic2l6ZVwiOiAyNCB9LCBcInNpemVcIjogMjQgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjI0XFxcIiBoZWlnaHQ9XFxcIjI0XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMjBcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIk1pY3Jvc2NvcGUyMFwiLCBcImZpbGVwYXRoXCI6IFwibWljcm9zY29wZS8yMC5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMjAsIFwiaGVpZ2h0XCI6IDIwIH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcIiB9IH1dLCBcIm5hbWVcIjogXCJtaWNyb3Njb3BlXCIsIFwic2l6ZVwiOiAyMCB9LCBcInNpemVcIjogMjAgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjIwXFxcIiBoZWlnaHQ9XFxcIjIwXFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiMTZcIjoge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7IFwibW9kdWxlTmFtZVwiOiBcIk1pY3Jvc2NvcGUxNlwiLCBcImZpbGVwYXRoXCI6IFwibWljcm9zY29wZS8xNi5qc1wiLCBcImRlc2NyaXB0b3JcIjogeyBcImVsZW1cIjogXCJzdmdcIiwgXCJhdHRyc1wiOiB7IFwieG1sbnNcIjogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLCBcInZpZXdCb3hcIjogXCIwIDAgMzIgMzJcIiwgXCJmaWxsXCI6IFwiY3VycmVudENvbG9yXCIsIFwid2lkdGhcIjogMTYsIFwiaGVpZ2h0XCI6IDE2IH0sIFwiY29udGVudFwiOiBbeyBcImVsZW1cIjogXCJwYXRoXCIsIFwiYXR0cnNcIjogeyBcImRcIjogXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcIiB9IH1dLCBcIm5hbWVcIjogXCJtaWNyb3Njb3BlXCIsIFwic2l6ZVwiOiAxNiB9LCBcInNpemVcIjogMTYgfSxcbiAgICAgICAgICAgICAgICBzdmc6IFwiPHN2ZyBmb2N1c2FibGU9XFxcImZhbHNlXFxcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVxcXCJ4TWlkWU1pZCBtZWV0XFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIGZpbGw9XFxcImN1cnJlbnRDb2xvclxcXCIgd2lkdGg9XFxcIjE2XFxcIiBoZWlnaHQ9XFxcIjE2XFxcIiB2aWV3Qm94PVxcXCIwIDAgMzIgMzJcXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj48cGF0aCBkPVxcXCJNMjUuMzk0MywyNGE3Ljg3NzIsNy44NzcyLDAsMCwwLTEuNjcwNy04LjU2ODQsMy45MTgsMy45MTgsMCwwLDAtMS4wODQ0LTQuNDE0bDIuNzc1OS0yLjc3NTlhMi4wMDI1LDIuMDAyNSwwLDAsMCwwLTIuODI4NkwyMi41ODY5LDIuNTg0OWEyLjAwMjEsMi4wMDIxLDAsMCwwLTIuODI4NiwwTDYuNTg1OSwxNS43NTczYTIuMDAyNywyLjAwMjcsMCwwLDAsMCwyLjgyODZsMi44MjgyLDIuODI4MmEyLjAwMjQsMi4wMDI0LDAsMCwwLDIuODI4NiwwbDQuNzc0OS00Ljc3NTRhMy45MzI5LDMuOTMyOSwwLDAsMCw1LjUxMzkuNDMyNkE1Ljk0NDIsNS45NDQyLDAsMCwxLDIzLjE3NzUsMjRIMTZ2NEg0djJIMjhWMjRaTTEwLjgyODEsMjAsOCwxNy4xNzE0LDkuODc4NywxNS4yOTNsMi44MjgzLDIuODI4MVpNMTYsMTRhMy45ODExLDMuOTgxMSwwLDAsMCwuMDc2Mi43NTI0TDE0LjEyMTEsMTYuNzA3bC0yLjgyODQtMi44MjgxLDkuODgtOS44OEwyNC4wMDEsNi44MjcxbC0zLjI0ODgsMy4yNDkxQTMuOTc3MSwzLjk3NzEsMCwwLDAsMTYsMTRabTQsMmEyLDIsMCwxLDEsMi0yQTIuMDAyMywyLjAwMjMsMCwwLDEsMjAsMTZabTYsMTJIMThWMjZoOFpcXFwiPjwvcGF0aD48L3N2Zz5cIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgTWljcm9zY29wZURpcmVjdGl2ZV8xID0gTWljcm9zY29wZURpcmVjdGl2ZTtcbiAgICBNaWNyb3Njb3BlRGlyZWN0aXZlLnByb3RvdHlwZS5uZ0FmdGVyVmlld0luaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzdmcgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudDtcbiAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG4gICAgICAgIHZhciBpY29uID0gdGhpcy5pY29uc1t0aGlzLnNpemVdO1xuICAgICAgICB2YXIgZG9tUGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xuICAgICAgICB2YXIgcmF3U1ZHID0gaWNvbi5zdmc7XG4gICAgICAgIHZhciBzdmdFbGVtZW50ID0gZG9tUGFyc2VyLnBhcnNlRnJvbVN0cmluZyhyYXdTVkcsIFwiaW1hZ2Uvc3ZnK3htbFwiKS5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgIHZhciBub2RlID0gc3ZnRWxlbWVudC5maXJzdENoaWxkO1xuICAgICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICAgICAgLy8gaW1wb3J0Tm9kZSBtYWtlcyBhIGNsb25lIG9mIHRoZSBub2RlXG4gICAgICAgICAgICAvLyB0aGlzIGVuc3VyZXMgd2Uga2VlcCBsb29waW5nIG92ZXIgdGhlIG5vZGVzIGluIHRoZSBwYXJzZWQgZG9jdW1lbnRcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZChzdmcub3duZXJEb2N1bWVudC5pbXBvcnROb2RlKG5vZGUsIHRydWUpKTtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gZ2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICB3aWR0aDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIGhlaWdodDogaWNvbi5tZXRhZGF0YS5kZXNjcmlwdG9yLmF0dHJzLmhlaWdodCxcbiAgICAgICAgICAgIHZpZXdCb3g6IGljb24ubWV0YWRhdGEuZGVzY3JpcHRvci5hdHRycy52aWV3Qm94LFxuICAgICAgICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxcIjogdGhpcy5hcmlhTGFiZWwsXG4gICAgICAgICAgICBcImFyaWEtbGFiZWxsZWRieVwiOiB0aGlzLmFyaWFMYWJlbGxlZGJ5LFxuICAgICAgICAgICAgXCJhcmlhLWhpZGRlblwiOiB0aGlzLmFyaWFIaWRkZW4sXG4gICAgICAgICAgICBmb2N1c2FibGU6IHRoaXMuaXNGb2N1c2FibGUudG9TdHJpbmcoKVxuICAgICAgICB9KTtcbiAgICAgICAgdmFyIGF0dHJLZXlzID0gT2JqZWN0LmtleXMoYXR0cmlidXRlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXR0cktleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBrZXkgPSBhdHRyS2V5c1tpXTtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGF0dHJpYnV0ZXNba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09IFwidGl0bGVcIikge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgc3ZnLnNldEF0dHJpYnV0ZShrZXksIHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cmlidXRlcy50aXRsZSkge1xuICAgICAgICAgICAgdmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRpdGxlXCIpO1xuICAgICAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSBhdHRyaWJ1dGVzLnRpdGxlO1xuICAgICAgICAgICAgTWljcm9zY29wZURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKys7XG4gICAgICAgICAgICB0aXRsZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcIm1pY3Jvc2NvcGUtXCIgKyBNaWNyb3Njb3BlRGlyZWN0aXZlXzEudGl0bGVJZENvdW50ZXIpO1xuICAgICAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHRpdGxlKTtcbiAgICAgICAgICAgIHN2Zy5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsbGVkYnlcIiwgXCJtaWNyb3Njb3BlLVwiICsgTWljcm9zY29wZURpcmVjdGl2ZV8xLnRpdGxlSWRDb3VudGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdmFyIE1pY3Jvc2NvcGVEaXJlY3RpdmVfMTtcbiAgICBNaWNyb3Njb3BlRGlyZWN0aXZlLnRpdGxlSWRDb3VudGVyID0gMDtcbiAgICBNaWNyb3Njb3BlRGlyZWN0aXZlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW1xuICAgICAgICB7IHR5cGU6IEVsZW1lbnRSZWYgfVxuICAgIF07IH07XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9zY29wZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9zY29wZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUxhYmVsbGVkYnlcIiwgdm9pZCAwKTtcbiAgICBfX2RlY29yYXRlKFtcbiAgICAgICAgSW5wdXQoKSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjp0eXBlXCIsIEJvb2xlYW4pXG4gICAgXSwgTWljcm9zY29wZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwiYXJpYUhpZGRlblwiLCB2b2lkIDApO1xuICAgIF9fZGVjb3JhdGUoW1xuICAgICAgICBJbnB1dCgpLFxuICAgICAgICBfX21ldGFkYXRhKFwiZGVzaWduOnR5cGVcIiwgU3RyaW5nKVxuICAgIF0sIE1pY3Jvc2NvcGVEaXJlY3RpdmUucHJvdG90eXBlLCBcInRpdGxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBCb29sZWFuKVxuICAgIF0sIE1pY3Jvc2NvcGVEaXJlY3RpdmUucHJvdG90eXBlLCBcImlzRm9jdXNhYmxlXCIsIHZvaWQgMCk7XG4gICAgX19kZWNvcmF0ZShbXG4gICAgICAgIElucHV0KCksXG4gICAgICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246dHlwZVwiLCBTdHJpbmcpXG4gICAgXSwgTWljcm9zY29wZURpcmVjdGl2ZS5wcm90b3R5cGUsIFwic2l6ZVwiLCB2b2lkIDApO1xuICAgIE1pY3Jvc2NvcGVEaXJlY3RpdmUgPSBNaWNyb3Njb3BlRGlyZWN0aXZlXzEgPSBfX2RlY29yYXRlKFtcbiAgICAgICAgRGlyZWN0aXZlKHtcbiAgICAgICAgICAgIHNlbGVjdG9yOiBcIltpYm1JY29uTWljcm9zY29wZV1cIlxuICAgICAgICB9KSxcbiAgICAgICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtFbGVtZW50UmVmXSlcbiAgICBdLCBNaWNyb3Njb3BlRGlyZWN0aXZlKTtcbiAgICByZXR1cm4gTWljcm9zY29wZURpcmVjdGl2ZTtcbn0oKSk7XG52YXIgTWljcm9zY29wZU1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNaWNyb3Njb3BlTW9kdWxlKCkge1xuICAgIH1cbiAgICBNaWNyb3Njb3BlTW9kdWxlID0gX19kZWNvcmF0ZShbXG4gICAgICAgIE5nTW9kdWxlKHtcbiAgICAgICAgICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICAgICAgICAgIE1pY3Jvc2NvcGVDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgTWljcm9zY29wZURpcmVjdGl2ZSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBleHBvcnRzOiBbXG4gICAgICAgICAgICAgICAgTWljcm9zY29wZUNvbXBvbmVudCxcbiAgICAgICAgICAgICAgICBNaWNyb3Njb3BlRGlyZWN0aXZlLFxuICAgICAgICAgICAgXVxuICAgICAgICB9KVxuICAgIF0sIE1pY3Jvc2NvcGVNb2R1bGUpO1xuICAgIHJldHVybiBNaWNyb3Njb3BlTW9kdWxlO1xufSgpKTtcblxuZXhwb3J0IHsgTWljcm9zY29wZUNvbXBvbmVudCwgTWljcm9zY29wZURpcmVjdGl2ZSwgTWljcm9zY29wZU1vZHVsZSB9O1xuIl19