{"version":3,"sources":["ng://carbon-components-angular/search/search.component.ts","ng://carbon-components-angular/search/search.module.ts"],"sourcesContent":["import {\n\tComponent,\n\tInput,\n\tEventEmitter,\n\tOutput,\n\tHostBinding,\n\tElementRef,\n\tHostListener,\n\tViewChild\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\nimport { I18n } from \"carbon-components-angular/i18n\";\n\n/**\n * [See demo](../../?path=/story/search--basic)\n *\n * <example-url>../../iframe.html?id=search--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-search\",\n\ttemplateUrl: \"search.component.html\",\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: Search,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class Search implements ControlValueAccessor {\n\t/**\n\t * Variable used for creating unique ids for search components.\n\t */\n\tstatic searchCount = 0;\n\n\t@HostBinding(\"class.bx--form-item\") get containerClass() { return !this.toolbar; }\n\n\t/**\n\t * `light` or `dark` search theme.\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\t/**\n\t * Size of the search field.\n\t */\n\n\t@Input() set size(value: \"sm\" | \"md\" | \"xl\") {\n\t\tthis._size = value;\n\t}\n\n\tget size(): \"sm\" | \"md\" | \"xl\" {\n\t\treturn this._size;\n\t}\n\t/**\n\t * Set to `true` for a disabled search input.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` for a toolbar search component.\n\t */\n\t@Input() toolbar = false;\n\t/**\n\t * Set to `true` for a loading search component.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` to expand the toolbar search component.\n\t */\n\t@Input() active = false;\n\t/**\n\t * Specifies whether the search component is used in the table toolbar.\n\t */\n\t@Input() tableSearch = false;\n\t/**\n\t * Sets the name attribute on the `input` element.\n\t */\n\t@Input() name: string;\n\t/**\n\t * The unique id for the search component.\n\t */\n\t@Input() id = `search-${Search.searchCount}`;\n\t/**\n\t * Reflects the required attribute of the `input` element.\n\t */\n\t@Input() required: boolean;\n\t/**\n\t * Sets the value attribute on the `input` element.\n\t */\n\t@Input() value = \"\";\n\t/**\n\t * Sets the autocomplete attribute on the `input` element.\n\t * For reference: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#Values\n\t */\n\t@Input() autocomplete = \"on\";\n\t/**\n\t * Sets the text inside the `label` tag.\n\t */\n\t@Input() label = this.i18n.get().SEARCH.LABEL;\n\t/**\n\t * Sets the placeholder attribute on the `input` element.\n\t */\n\t@Input() placeholder = this.i18n.get().SEARCH.PLACEHOLDER;\n\t/**\n\t * Used to set the `title` attribute of the clear button.\n\t */\n\t@Input() clearButtonTitle = this.i18n.get().SEARCH.CLEAR_BUTTON;\n\t/**\n\t * Title for the search trigger\n\t */\n\t@Input() searchTitle = \"\";\n\t/**\n\t * Sets the aria label on the `div` element with the `search` role.\n\t */\n\t@Input() ariaLabel: string;\n\t/**\n\t * Emits an event when value is changed.\n\t */\n\t@Output() valueChange = new EventEmitter<string>();\n\t@Output() open = new EventEmitter<boolean>();\n\t/**\n\t * Emits an event when the clear button is clicked.\n\t */\n\t@Output() clear = new EventEmitter();\n\t/**\n\t * Emits an event on enter.\n\t */\n\t@Output() search = new EventEmitter<string>();\n\n\t// @ts-ignore\n\t@ViewChild(\"input\", { static: false }) inputRef: ElementRef;\n\n\t/**\n\t * Sets `true` when composing text via IME.\n\t */\n\tprotected isComposing = false;\n\n\tprotected _size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\n\t/**\n\t * Creates an instance of `Search`.\n\t * @param i18n The i18n translations.\n\t */\n\tconstructor(protected elementRef: ElementRef, protected i18n: I18n) {\n\t\tSearch.searchCount++;\n\t}\n\n\t/**\n\t * This is the initial value set to the component\n\t * @param value The input value.\n\t */\n\tpublic writeValue(value: any) {\n\t\tthis.value = value;\n\t}\n\n\t/**\n\t * Sets a method in order to propagate changes back to the form.\n\t */\n\tpublic registerOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/**\n\t * Registers a callback to be triggered when the control has been touched.\n\t * @param fn Callback to be triggered when the search input is touched.\n\t */\n\tpublic registerOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\t/**\n\t * Called when search input is blurred. Needed to properly implement `ControlValueAccessor`.\n\t */\n\tonTouched: () => any = () => {};\n\n\t/**\n\t * Method set in `registerOnChange` to propagate changes back to the form.\n\t */\n\tpropagateChange = (_: any) => {};\n\n\t/**\n\t * Called when text is written in the input.\n\t * @param search The input text.\n\t */\n\tonSearch(search: string) {\n\t\tif (this.isComposing) { // check for IME use\n\t\t\treturn;\n\t\t}\n\t\tthis.value = search;\n\t\tthis.doValueChange();\n\t}\n\n\t/**\n\t * Called on enter.\n\t */\n\tonEnter() {\n\t\tthis.search.emit(this.value);\n\t}\n\n\t/**\n\t * Called when clear button is clicked.\n\t */\n\tclearSearch(): void {\n\t\tthis.value = \"\";\n\t\tthis.clear.emit();\n\t\tthis.propagateChange(this.value);\n\t}\n\n\tdoValueChange() {\n\t\tthis.valueChange.emit(this.value);\n\t\tthis.propagateChange(this.value);\n\t}\n\n\topenSearch() {\n\t\tthis.active = true;\n\t\tthis.open.emit(this.active);\n\t\tsetTimeout(() => this.inputRef.nativeElement.focus());\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\tkeyDown(event: KeyboardEvent) {\n\t\tif (this.toolbar) {\n\t\t\tif (event.key === \"Escape\") {\n\t\t\t\tthis.active = false;\n\t\t\t} else if (event.key === \"Enter\") {\n\t\t\t\tthis.openSearch();\n\t\t\t}\n\t\t}\n\t}\n\n\t@HostListener(\"focusout\", [\"$event\"])\n\tfocusOut(event) {\n\t\tthis.onTouched();\n\t\tif (this.toolbar &&\n\t\t\tthis.inputRef &&\n\t\t\tthis.inputRef.nativeElement.value === \"\" &&\n\t\t\tevent.relatedTarget === null) {\n\t\t\tthis.active = false;\n\t\t\tthis.open.emit(this.active);\n\t\t}\n\t}\n\n\t/**\n\t * Called when using IME composition.\n\t */\n\t@HostListener(\"compositionstart\", [\"$event\"])\n\tcompositionStart(event) {\n\t\tthis.isComposing = true;\n\t}\n\n\t/**\n\t * Called when IME composition finishes.\n\t */\n\t@HostListener(\"compositionend\", [\"$event\"])\n\tcompositionEnd(event) {\n\t\tthis.isComposing = false;\n\t\tthis.onSearch(this.value + event.data);\n\t}\n}\n","// modules\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\n// imports\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { Search } from \"./search.component\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tSearch\n\t],\n\texports: [\n\t\tSearch\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tCommonModule,\n\t\tI18nModule,\n\t\tIconModule\n\t]\n})\nexport class SearchModule { }\n"],"names":["Search","Object","defineProperty","prototype","this","toolbar","_size","value","writeValue","registerOnChange","fn","propagateChange","registerOnTouched","onTouched","onSearch","search","isComposing","doValueChange","onEnter","emit","clearSearch","clear","valueChange","openSearch","_this","active","open","setTimeout","inputRef","nativeElement","focus","keyDown","event","key","focusOut","relatedTarget","compositionStart","compositionEnd","data","searchCount","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","ElementRef","I18n","HostBinding","Input","Output","ViewChild","static","HostListener","elementRef","i18n","theme","disabled","skeleton","tableSearch","id","autocomplete","label","get","SEARCH","LABEL","placeholder","PLACEHOLDER","clearButtonTitle","CLEAR_BUTTON","searchTitle","EventEmitter","_","SearchModule","NgModule","declarations","exports","imports","FormsModule","CommonModule","I18nModule","IconModule"],"mappings":"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"}