{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://carbon-components-angular/dropdown/abstract-dropdown-view.class.ts","ng://carbon-components-angular/dropdown/dropdown.service.ts","ng://carbon-components-angular/dropdown/dropdown.component.ts","ng://carbon-components-angular/dropdown/list/dropdown-list.component.ts","ng://carbon-components-angular/dropdown/dropdowntools.ts","ng://carbon-components-angular/dropdown/scrollable-list.directive.ts","ng://carbon-components-angular/dropdown/dropdown.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tDirective\n} from \"@angular/core\";\nimport { ListItem } from \"./list-item.interface\";\nimport { Observable } from \"rxjs\";\n\n\n/**\n * A component that intends to be used within `Dropdown` must provide an implementation that extends this base class.\n * It also must provide the base class in the `@Component` meta-data.\n * ex: `providers: [{provide: AbstractDropdownView, useExisting: forwardRef(() => MyDropdownView)}]`\n */\n@Directive({ selector: \"[ibmAbstractDropdownView]\" })\nexport class AbstractDropdownView {\n\t/**\n\t * The items to be displayed in the list within the `AbstractDropDownView`.\n\t */\n\t@Input() set items(value: Array<ListItem> | Observable<Array<ListItem>>) { }\n\n\tget items(): Array<ListItem> | Observable<Array<ListItem>> { return; }\n\t/**\n\t * Emits selection events to controlling classes\n\t */\n\t@Output() select: EventEmitter<{item: ListItem } | ListItem[]>;\n\t/**\n\t * Event to suggest a blur on the view.\n\t * Emits _after_ the first/last item has been focused.\n\t * ex.\n\t * ArrowUp -> focus first item\n\t * ArrowUp -> emit event\n\t *\n\t * It's recommended that the implementing view include a specific type union of possible blurs\n\t * ex. `@Output() blurIntent = new EventEmitter<\"top\" | \"bottom\">();`\n\t */\n\t@Output() blurIntent: EventEmitter<any>;\n\t/**\n\t * Specifies whether or not the `DropdownList` supports selecting multiple items as opposed to single\n\t * item selection.\n\t */\n\tpublic type: \"single\" | \"multi\" = \"single\";\n\t/**\n\t * Specifies the render size of the items within the `AbstractDropdownView`.\n\t *\n\t * @deprecated since v4\n\t */\n\tpublic size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\t/**\n\t * Returns the `ListItem` that is subsequent to the selected item in the `DropdownList`.\n\t */\n\tgetNextItem(): ListItem { return; }\n\t/**\n\t * Returns a boolean if the currently selected item is preceded by another\n\t */\n\thasNextElement(): boolean { return; }\n\t/**\n\t * Returns the `HTMLElement` for the item that is subsequent to the selected item.\n\t */\n\tgetNextElement(): HTMLElement { return; }\n\t/**\n\t * Returns the `ListItem` that precedes the selected item within `DropdownList`.\n\t */\n\tgetPrevItem(): ListItem { return; }\n\t/**\n\t * Returns a boolean if the currently selected item is followed by another\n\t */\n\thasPrevElement(): boolean { return; }\n\t/**\n\t * Returns the `HTMLElement` for the item that precedes the selected item.\n\t */\n\tgetPrevElement(): HTMLElement { return; }\n\t/**\n\t * Returns the selected leaf level item(s) within the `DropdownList`.\n\t */\n\tgetSelected(): ListItem[] { return; }\n\t/**\n\t * Returns the `ListItem` that is selected within `DropdownList`.\n\t */\n\tgetCurrentItem(): ListItem { return; }\n\t/**\n\t * Returns the `HTMLElement` for the item that is selected within the `DropdownList`.\n\t */\n\tgetCurrentElement(): HTMLElement { return; }\n\t/**\n\t * Guaranteed to return the current items as an Array.\n\t */\n\tgetListItems(): Array<ListItem> { return; }\n\t/**\n\t * Transforms array input list of items to the correct state by updating the selected item(s).\n\t */\n\tpropagateSelected(value: Array<ListItem>): void {}\n\t/**\n\t *\n\t * @param value value to filter the list by\n\t */\n\tfilterBy(value: string): void {}\n\t/**\n\t * Initializes focus in the list\n\t * In most cases this just calls `getCurrentElement().focus()`\n\t */\n\tinitFocus(): void {}\n\t/**\n\t * Subscribe the function passed to an internal observable that will resolve once the items are ready\n\t */\n\tonItemsReady(subcription: () => void): void {}\n\t/**\n\t * Reorder selected items bringing them to the top of the list\n\t */\n\treorderSelected(moveFocus?: boolean): void {}\n}\n","import { Injectable, ElementRef, OnDestroy } from \"@angular/core\";\nimport { PlaceholderService } from \"carbon-components-angular/placeholder\";\nimport { Subscription } from \"rxjs\";\nimport { position } from \"@carbon/utils-position\";\nimport { AnimationFrameService } from \"carbon-components-angular/utils\";\nimport { closestAttr } from \"carbon-components-angular/utils\";\n\nconst defaultOffset = { top: 0, left: 0 };\n\n@Injectable()\nexport class DropdownService implements OnDestroy {\n\tpublic set offset(value: { top?: number, left?: number }) {\n\t\tthis._offset = Object.assign({}, defaultOffset, value);\n\t}\n\n\tpublic get offset() {\n\t\treturn this._offset;\n\t}\n\t/**\n\t * reference to the body appended menu\n\t */\n\tprotected menuInstance: HTMLElement;\n\n\t/**\n\t * Maintains an Event Observable Subscription for the global requestAnimationFrame.\n\t * requestAnimationFrame is tracked only if the `Dropdown` is appended to the body otherwise we don't need it\n\t */\n\tprotected animationFrameSubscription = new Subscription();\n\n\tprotected _offset = defaultOffset;\n\n\tconstructor(\n\t\tprotected placeholderService: PlaceholderService,\n\t\tprotected animationFrameService: AnimationFrameService\n\t) {}\n\n\t/**\n\t * Appends the menu to the body, or a `ibm-placeholder` (if defined)\n\t *\n\t * @param parentRef container to position relative to\n\t * @param menuRef menu to be appended to body\n\t * @param classList any extra classes we should wrap the container with\n\t */\n\tappendToBody(parentRef: HTMLElement, menuRef: HTMLElement, classList): HTMLElement {\n\t\t// build the dropdown list container\n\t\tmenuRef.style.display = \"block\";\n\t\tconst dropdownWrapper = document.createElement(\"div\");\n\t\tdropdownWrapper.className = `dropdown ${classList}`;\n\t\tdropdownWrapper.style.width = parentRef.offsetWidth + \"px\";\n\t\tdropdownWrapper.style.position = \"absolute\";\n\t\tdropdownWrapper.appendChild(menuRef);\n\n\t\t// append it to the placeholder\n\t\tif (this.placeholderService.hasPlaceholderRef()) {\n\t\t\tthis.placeholderService.appendElement(dropdownWrapper);\n\t\t\t// or append it directly to the body\n\t\t} else {\n\t\t\tdocument.body.appendChild(dropdownWrapper);\n\t\t}\n\n\t\tthis.menuInstance = dropdownWrapper;\n\n\t\tthis.animationFrameSubscription = this.animationFrameService.tick.subscribe(() => {\n\t\t\tthis.positionDropdown(parentRef, dropdownWrapper);\n\t\t});\n\n\t\t// run one position in sync, so we're less likely to have the view \"jump\" as we focus\n\t\tthis.positionDropdown(parentRef, dropdownWrapper);\n\n\t\treturn dropdownWrapper;\n\t}\n\n\t/**\n\t * Reattach the dropdown menu to the parent container\n\t * @param hostRef container to append to\n\t */\n\tappendToDropdown(hostRef: HTMLElement): HTMLElement {\n\t\t// if the instance is already removed don't try and remove it again\n\t\tif (!this.menuInstance) { return; }\n\t\tconst instance = this.menuInstance;\n\t\tconst menu = instance.firstElementChild as HTMLElement;\n\t\t// clean up the instance\n\t\tthis.menuInstance = null;\n\t\tmenu.style.display = \"none\";\n\t\thostRef.appendChild(menu);\n\t\tthis.animationFrameSubscription.unsubscribe();\n\t\tif (this.placeholderService.hasPlaceholderRef() && this.placeholderService.hasElement(instance)) {\n\t\t\tthis.placeholderService.removeElement(instance);\n\t\t} else if (document.body.contains(instance)) {\n\t\t\tdocument.body.removeChild(instance);\n\t\t}\n\t\treturn instance;\n\t}\n\n\t/**\n\t * position an open dropdown relative to the given parentRef\n\t */\n\tupdatePosition(parentRef) {\n\t\tthis.positionDropdown(parentRef, this.menuInstance);\n\t}\n\n\tngOnDestroy() {\n\t\tthis.animationFrameSubscription.unsubscribe();\n\t}\n\n\tprotected positionDropdown(parentRef, menuRef) {\n\t\tif (!menuRef) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet leftOffset = 0;\n\n\t\tconst boxMenu = menuRef.querySelector(\".bx--list-box__menu\");\n\n\t\tif (boxMenu) {\n\t\t\t// If the parentRef and boxMenu are in a different left position relative to the\n\t\t\t// window, the the boxMenu position has already been flipped and a check needs to be done\n\t\t\t// to see if it needs to stay flipped.\n\t\t\tif (parentRef.getBoundingClientRect().left !== boxMenu.getBoundingClientRect().left) {\n\t\t\t\t// The getBoundingClientRect().right of the boxMenu if it were hypothetically flipped\n\t\t\t\t// back into the original position before the flip.\n\t\t\t\tconst testBoxMenuRightEdgePos =\n\t\t\t\t\tparentRef.getBoundingClientRect().left - boxMenu.getBoundingClientRect().left + boxMenu.getBoundingClientRect().right;\n\n\t\t\t\tif (testBoxMenuRightEdgePos > (window.innerWidth || document.documentElement.clientWidth)) {\n\t\t\t\t\tleftOffset = parentRef.offsetWidth - boxMenu.offsetWidth;\n\t\t\t\t}\n\t\t\t// If it has not already been flipped, check if it is necessary to flip, ie. if the\n\t\t\t// boxMenu is outside of the right viewPort.\n\t\t\t} else if (boxMenu.getBoundingClientRect().right > (window.innerWidth || document.documentElement.clientWidth)) {\n\t\t\t\tleftOffset = parentRef.offsetWidth - boxMenu.offsetWidth;\n\t\t\t}\n\t\t}\n\n\t\t// If ibm-placeholder has a parent with a position(relative|fixed|absolute) account for the parent offset\n\t\tconst closestMenuWithPos = closestAttr(\"position\", [\"relative\", \"fixed\", \"absolute\"], menuRef.parentElement);\n\t\tconst topPos = closestMenuWithPos ? closestMenuWithPos.getBoundingClientRect().top * -1 : this.offset.top;\n\t\tconst leftPos = closestMenuWithPos ? closestMenuWithPos.getBoundingClientRect().left * -1 : this.offset.left + leftOffset;\n\n\t\tlet pos = position.findAbsolute(parentRef, menuRef, \"bottom\");\n\t\tpos = position.addOffset(pos, topPos, leftPos);\n\n\t\tposition.setElement(menuRef, pos);\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tEventEmitter,\n\tElementRef,\n\tContentChild,\n\tOnInit,\n\tViewChild,\n\tAfterContentInit,\n\tHostListener,\n\tOnDestroy,\n\tHostBinding,\n\tTemplateRef,\n\tApplicationRef,\n\tAfterViewInit\n} from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\n// Observable import is required here so typescript can compile correctly\nimport {\n\tObservable,\n\tof,\n\tSubscription\n} from \"rxjs\";\n\nimport { AbstractDropdownView } from \"./abstract-dropdown-view.class\";\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { ListItem } from \"./list-item.interface\";\nimport { DropdownService } from \"./dropdown.service\";\nimport { ElementService, getScrollableParents } from \"carbon-components-angular/utils\";\nimport { hasScrollableParents } from \"carbon-components-angular/utils\";\n\n/**\n * Drop-down lists enable users to select one or more items from a list.\n *\n * #### Opening behavior/List DOM placement\n * By default the dropdown will try to figure out the best placement for the dropdown list.\n *\n * If it's not contained within any scrolling elements, it will open inline, if it _is_\n * contained within a scrolling container it will try to open in the body, or an `ibm-placeholder`.\n *\n * To control this behavior you can use the `appendInline` input:\n * - `[appendInline]=\"null\"` is the default (auto detection)\n * - `[appendInline]=\"false\"` will always append to the body/`ibm-placeholder`\n * - `[appendInline]=\"true\"` will always append inline (next to the dropdown button)\n *\n * [See demo](../../?path=/story/dropdown--basic)\n *\n * <example-url>../../iframe.html?id=dropdown--basic</example-url>\n */\n@Component({\n\tselector: \"ibm-dropdown\",\n\ttemplate: `\n\t<label *ngIf=\"label\" [for]=\"id\" class=\"bx--label\">\n\t\t<ng-container *ngIf=\"!isTemplate(label)\">{{label}}</ng-container>\n\t\t<ng-template *ngIf=\"isTemplate(label)\" [ngTemplateOutlet]=\"label\"></ng-template>\n\t</label>\n\t<div\n\t\tclass=\"bx--list-box\"\n\t\t[ngClass]=\"{\n\t\t\t'bx--dropdown': type !== 'multi',\n\t\t\t'bx--multiselect': type === 'multi',\n\t\t\t'bx--multi-select--selected': type === 'multi' && getSelectedCount() > 0,\n\t\t\t'bx--dropdown--light': theme === 'light',\n\t\t\t'bx--list-box--light': theme === 'light',\n\t\t\t'bx--list-box--inline': inline,\n\t\t\t'bx--skeleton': skeleton,\n\t\t\t'bx--dropdown--disabled bx--list-box--disabled': disabled,\n\t\t\t'bx--dropdown--invalid': invalid,\n\t\t\t'bx--dropdown--warning bx--list-box--warning': warn,\n\t\t\t'bx--dropdown--xl bx--list-box--xl': size === 'xl',\n\t\t\t'bx--dropdown--sm bx--list-box--sm': size === 'sm',\n\t\t\t'bx--list-box--expanded': !menuIsClosed\n\t\t}\">\n\t\t<button\n\t\t\t#dropdownButton\n\t\t\t[id]=\"id\"\n\t\t\ttype=\"button\"\n\t\t\tclass=\"bx--list-box__field\"\n\t\t\t[ngClass]=\"{'a': !menuIsClosed}\"\n\t\t\t[attr.aria-expanded]=\"!menuIsClosed\"\n\t\t\t[attr.aria-disabled]=\"disabled\"\n\t\t\taria-haspopup=\"listbox\"\n\t\t\t(click)=\"disabled ? $event.stopPropagation() : toggleMenu()\"\n\t\t\t(blur)=\"onBlur()\"\n\t\t\t[attr.disabled]=\"disabled ? true : null\">\n\t\t\t<div\n\t\t\t\t(click)=\"clearSelected()\"\n\t\t\t\t(keydown.enter)=\"clearSelected()\"\n\t\t\t\t*ngIf=\"type === 'multi' && getSelectedCount() > 0\"\n\t\t\t\tclass=\"bx--list-box__selection bx--tag--filter bx--list-box__selection--multi\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\t[title]=\"clearText\">\n\t\t\t\t{{getSelectedCount()}}\n\t\t\t\t<svg\n\t\t\t\t\tfocusable=\"false\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t\tstyle=\"will-change: transform;\"\n\t\t\t\t\trole=\"img\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\twidth=\"16\"\n\t\t\t\t\theight=\"16\"\n\t\t\t\t\tviewBox=\"0 0 16 16\"\n\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t<path d=\"M12 4.7l-.7-.7L8 7.3 4.7 4l-.7.7L7.3 8 4 11.3l.7.7L8 8.7l3.3 3.3.7-.7L8.7 8z\"></path>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<span *ngIf=\"isRenderString()\" class=\"bx--list-box__label\">{{getDisplayStringValue() | async}}</span>\n\t\t\t<ng-template\n\t\t\t\t*ngIf=\"!isRenderString()\"\n\t\t\t\t[ngTemplateOutletContext]=\"getRenderTemplateContext()\"\n\t\t\t\t[ngTemplateOutlet]=\"displayValue\">\n\t\t\t</ng-template>\n\t\t\t<svg\n\t\t\t\t*ngIf=\"!warn && invalid\"\n\t\t\t\tclass=\"bx--dropdown__invalid-icon\"\n\t\t\t\tibmIcon=\"warning--filled\"\n\t\t\t\tsize=\"16\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\t*ngIf=\"!invalid && warn\"\n\t\t\t\tibmIcon=\"warning--alt--filled\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--list-box__invalid-icon bx--list-box__invalid-icon--warning\">\n\t\t\t</svg>\n\t\t\t<svg\n\t\t\t\t*ngIf=\"!skeleton\"\n\t\t\t\tibmIcon=\"chevron--down\"\n\t\t\t\tsize=\"16\"\n\t\t\t\tclass=\"bx--list-box__menu-icon\"\n\t\t\t\t[attr.aria-label]=\"menuButtonLabel\"\n\t\t\t\t[ngClass]=\"{'bx--list-box__menu-icon--open': !menuIsClosed }\">\n\t\t\t</svg>\n\t\t</button>\n\t\t<div\n\t\t\t#dropdownMenu\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--list-box--up': this.dropUp !== null && this.dropUp !== undefined ? dropUp : _dropUp\n\t\t\t}\">\n\t\t\t<ng-content *ngIf=\"!menuIsClosed\"></ng-content>\n\t\t</div>\n\t</div>\n\t<div *ngIf=\"helperText && !invalid && !warn\" class=\"bx--form__helper-text\">\n\t\t<ng-container *ngIf=\"!isTemplate(helperText)\">{{helperText}}</ng-container>\n\t\t<ng-template *ngIf=\"isTemplate(helperText)\" [ngTemplateOutlet]=\"helperText\"></ng-template>\n\t</div>\n\t<div *ngIf=\"!warn && invalid\" class=\"bx--form-requirement\">\n\t\t<ng-container *ngIf=\"!isTemplate(invalidText)\">{{ invalidText }}</ng-container>\n\t\t<ng-template *ngIf=\"isTemplate(invalidText)\" [ngTemplateOutlet]=\"invalidText\"></ng-template>\n\t</div>\n\t<div *ngIf=\"!invalid && warn\" class=\"bx--form-requirement\">\n\t\t<ng-container *ngIf=\"!isTemplate(warnText)\">{{warnText}}</ng-container>\n\t\t<ng-template *ngIf=\"isTemplate(warnText)\" [ngTemplateOutlet]=\"warnText\"></ng-template>\n\t</div>\n\t`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: Dropdown,\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class Dropdown implements OnInit, AfterContentInit, AfterViewInit, OnDestroy, ControlValueAccessor {\n\tstatic dropdownCount = 0;\n\t@Input() id = `dropdown-${Dropdown.dropdownCount++}`;\n\t/**\n\t * Label for the dropdown.\n\t */\n\t@Input() label: string | TemplateRef<any>;\n\t/**\n\t * Sets the optional helper text.\n\t */\n\t@Input() helperText: string | TemplateRef<any>;\n\t/**\n\t * Value displayed if no item is selected.\n\t */\n\t@Input() placeholder = \"\";\n\t/**\n\t * The selected value from the `Dropdown`. Can be a string or template.\n\t */\n\t@Input() displayValue: string | TemplateRef<any> = \"\";\n\t/**\n\t * Sets the optional clear button tooltip text.\n\t */\n\t@Input() clearText: string = this.i18n.get().DROPDOWN.CLEAR;\n\t/**\n\t * Size to render the dropdown field.\n\t *\n\t * @deprecated since v4\n\t */\n\t@Input() size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\t/**\n\t * Defines whether or not the `Dropdown` supports selecting multiple items as opposed to single\n\t * item selection.\n\t */\n\t@Input() type: \"single\" | \"multi\" = \"single\";\n\t/**\n\t * `light` or `dark` dropdown theme\n\t */\n\t@Input() theme: \"light\" | \"dark\" = \"dark\";\n\t/**\n\t * Set to `true` to disable the dropdown.\n\t */\n\t@Input() disabled = false;\n\t/**\n\t * Set to `true` for a loading dropdown.\n\t */\n\t@Input() skeleton = false;\n\t/**\n\t * Set to `true` for an inline dropdown.\n\t */\n\t@Input() inline = false;\n\t/**\n\t * Set to `true` for a dropdown without arrow key activation.\n\t */\n\t@Input() disableArrowKeys = false;\n\t/**\n\t * Set to `true` for invalid state.\n\t */\n\t@Input() invalid = false;\n\t/**\n\t * Value displayed if dropdown is in invalid state.\n\t */\n\t@Input() invalidText: string | TemplateRef<any>;\n\t/**\n\t  * Set to `true` to show a warning (contents set by warningText)\n\t  */\n\t@Input() warn = false;\n\t/**\n\t * Sets the warning text\n\t */\n\t@Input() warnText: string | TemplateRef<any>;\n\t/**\n\t * set to `true` to place the dropdown view inline with the component\n\t */\n\t@Input() appendInline: boolean = null;\n\t/**\n\t * Query string for the element that contains the `Dropdown`.\n\t * Used to trigger closing the dropdown if it scrolls outside of the viewport of the `scrollableContainer`.\n\t */\n\t@Input() scrollableContainer: string;\n\t/**\n\t * Deprecated. Use `itemValueKey` instead.\n\t * Specifies the property to be used as the return value to `ngModel`\n\t * @deprecated since v4 use itemValueKey instead\n\t */\n\t@Input() set value (newValue: string) {\n\t\tconsole.warn(\"Dropdown `value` property has been deprecated. Use `itemValueKey` instead\");\n\t\tthis.itemValueKey = newValue;\n\t}\n\n\tget value() {\n\t\treturn this.itemValueKey;\n\t}\n\t/**\n\t * Specifies the property to be used as the return value to `ngModel`\n\t */\n\t@Input() itemValueKey: string;\n\t/**\n     * Specify feedback (mode) of the selection.\n     * `top`: selected item jumps to top\n     * `fixed`: selected item stays at it's position\n     * `top-after-reopen`: selected item jump to top after reopen dropdown\n     */\n\t@Input() selectionFeedback: \"top\" | \"fixed\" | \"top-after-reopen\" = \"top-after-reopen\";\n\t/**\n\t * Accessible label for the button that opens the dropdown list.\n\t * Defaults to the `DROPDOWN.OPEN` value from the i18n service.\n\t */\n\t@Input() menuButtonLabel = this.i18n.get().DROPDOWN.OPEN;\n\t/**\n\t * Provides the label for the \"# selected\" text.\n\t * Defaults to the `DROPDOWN.SELECTED` value from the i18n service.\n\t */\n\t@Input() selectedLabel = this.i18n.get().DROPDOWN.SELECTED;\n\t/**\n\t * Overrides the automatic dropUp.\n\t */\n\t@Input() dropUp: boolean;\n\t/**\n\t * Emits selection events.\n\t */\n\t@Output() selected: EventEmitter<Object> = new EventEmitter<Object>();\n\t/**\n\t * Emits event notifying to other classes that the `Dropdown` has been closed (collapsed).\n\t */\n\t@Output() onClose: EventEmitter<any> = new EventEmitter<any>();\n\t/**\n\t * Emits event notifying to other classes that the `Dropdown` has been closed (collapsed).\n\t */\n\t@Output() close: EventEmitter<any> = new EventEmitter<any>();\n\n\t/**\n\t * Maintains a reference to the `AbstractDropdownView` object within the content DOM.\n\t */\n\t// @ts-ignore\n\t@ContentChild(AbstractDropdownView, { static: true }) view: AbstractDropdownView;\n\t/**\n\t * Maintains a reference to the view DOM element of the `Dropdown` button.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"dropdownButton\", { static: true }) dropdownButton;\n\t/**\n\t * ViewChid of the dropdown view.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"dropdownMenu\", { static: true }) dropdownMenu;\n\n\t@HostBinding(\"class.bx--dropdown__wrapper\") hostClass = true;\n\t/**\n\t * Set to `true` if the dropdown is closed (not expanded).\n\t */\n\tmenuIsClosed = true;\n\n\t/**\n\t * controls whether the `drop-up` class is applied\n\t */\n\t_dropUp = false;\n\n\t// .bind creates a new function, so we declare the methods below\n\t// but .bind them up here\n\tnoop = this._noop.bind(this);\n\toutsideClick = this._outsideClick.bind(this);\n\toutsideKey = this._outsideKey.bind(this);\n\tkeyboardNav = this._keyboardNav.bind(this);\n\n\tprotected visibilitySubscription = new Subscription();\n\n\tprotected onTouchedCallback: () => void = this._noop;\n\n\t// primarily used to capture and propagate input to `writeValue` before the content is available\n\tprivate _writtenValue: any = [];\n\tprotected get writtenValue() {\n\t\treturn this._writtenValue;\n\t}\n\tprotected set writtenValue(val: any[]) {\n\t\tif (val && val.length === 0) {\n\t\t\tthis.clearSelected();\n\t\t}\n\t\tthis._writtenValue = val;\n\t}\n\n\t/**\n\t * Creates an instance of Dropdown.\n\t */\n\tconstructor(\n\t\tprotected elementRef: ElementRef,\n\t\tprotected i18n: I18n,\n\t\tprotected dropdownService: DropdownService,\n\t\tprotected appRef: ApplicationRef,\n\t\tprotected elementService: ElementService) {}\n\n\t/**\n\t * Updates the `type` property in the `@ContentChild`.\n\t * The `type` property specifies whether the `Dropdown` allows single selection or multi selection.\n\t */\n\tngOnInit() {\n\t\tif (this.view) {\n\t\t\tthis.view.type = this.type;\n\t\t}\n\t}\n\n\t/**\n\t * Initializes classes and subscribes to events for single or multi selection.\n\t */\n\tngAfterContentInit() {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\t\tif ((this.writtenValue && this.writtenValue.length) || typeof this.writtenValue === \"number\") {\n\t\t\tthis.writeValue(this.writtenValue);\n\t\t}\n\t\tthis.view.type = this.type;\n\t\tthis.view.size = this.size;\n\t\tthis.view.select.subscribe(event => {\n\t\t\tif (this.type === \"multi\") {\n\t\t\t\t// if we have a `value` selector and selected items map them appropriately\n\t\t\t\tif (this.itemValueKey && this.view.getSelected()) {\n\t\t\t\t\tconst values = this.view.getSelected().map(item => item[this.itemValueKey]);\n\t\t\t\t\tthis.propagateChange(values);\n\t\t\t\t// otherwise just pass up the values from `getSelected`\n\t\t\t\t} else {\n\t\t\t\t\tthis.propagateChange(this.view.getSelected());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.closeMenu();\n\t\t\t\tif (event.item && event.item.selected) {\n\t\t\t\t\tif (this.itemValueKey) {\n\t\t\t\t\t\tthis.propagateChange(event.item[this.itemValueKey]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.propagateChange(event.item);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.propagateChange(null);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// only emit selected for \"organic\" selections\n\t\t\tif (event && !event.isUpdate) {\n\t\t\t\tthis.checkForReorder();\n\t\t\t\tthis.selected.emit(event);\n\t\t\t}\n\t\t\t// manually tick the app so the view picks up any changes\n\t\t\tthis.appRef.tick();\n\t\t});\n\t}\n\n\tngAfterViewInit() {\n\t\t// if appendInline is default valued (null) we should:\n\t\t// 1. if there are scrollable parents (not including body) don't append inline\n\t\t//    this should also cover the case where the dropdown is in a modal\n\t\t//    (where we _do_ want to append to the placeholder)\n\t\tif (this.appendInline === null && hasScrollableParents(this.elementRef.nativeElement)) {\n\t\t\tthis.appendInline = false;\n\t\t// 2. otherwise we should append inline\n\t\t} else if (this.appendInline === null) {\n\t\t\tthis.appendInline = true;\n\t\t}\n\t\tthis.checkForReorder();\n\t}\n\n\t/**\n\t * Removing the `Dropdown` from the body if it is appended to the body.\n\t */\n\tngOnDestroy() {\n\t\tif (!this.appendInline) {\n\t\t\tthis._appendToDropdown();\n\t\t}\n\t}\n\n\t/**\n\t * Propagates the injected `value`.\n\t */\n\twriteValue(value: any) {\n\t\t// cache the written value so we can use it in `AfterContentInit`\n\t\tthis.writtenValue = value;\n\t\tthis.view.onItemsReady(() => {\n\t\t\t// propagate null/falsey as an array (deselect everything)\n\t\t\tif (!value) {\n\t\t\t\tthis.view.propagateSelected([value]);\n\t\t\t} else if (this.type === \"single\") {\n\t\t\t\tif (this.itemValueKey) {\n\t\t\t\t\t// clone the specified item and update its state\n\t\t\t\t\tconst newValue = Object.assign({}, this.view.getListItems().find(item => item[this.itemValueKey] === value));\n\t\t\t\t\tnewValue.selected = true;\n\t\t\t\t\tthis.view.propagateSelected([newValue]);\n\t\t\t\t} else {\n\t\t\t\t\t// pass the singular value as an array of ListItem\n\t\t\t\t\tthis.view.propagateSelected([value]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this.itemValueKey) {\n\t\t\t\t\t// clone the items and update their state based on the received value array\n\t\t\t\t\t// this way we don't lose any additional metadata that may be passed in via the `items` Input\n\t\t\t\t\tlet newValues = [];\n\t\t\t\t\tfor (const v of value) {\n\t\t\t\t\t\tfor (const item of this.view.getListItems()) {\n\t\t\t\t\t\t\tif (item[this.itemValueKey] === v) {\n\t\t\t\t\t\t\t\tnewValues.push(Object.assign({}, item, { selected: true }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.view.propagateSelected(newValues);\n\t\t\t\t} else {\n\t\t\t\t\t// we can safely assume we're passing an array of `ListItem`s\n\t\t\t\t\tthis.view.propagateSelected(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.checkForReorder();\n\t\t});\n\t}\n\n\tonBlur() {\n\t\tthis.onTouchedCallback();\n\t}\n\n\tregisterOnChange(fn: any) {\n\t\tthis.propagateChange = fn;\n\t}\n\n\t/**\n\t * Registering the function injected to control the touch use of the `Dropdown`.\n\t */\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouchedCallback = fn;\n\t}\n\n\t/**\n\t * function passed in by `registerOnChange`\n\t */\n\tpropagateChange = (_: any) => {};\n\n\t/**\n\t * `ControlValueAccessor` method to programmatically disable the dropdown.\n\t *\n\t * ex: `this.formGroup.get(\"myDropdown\").disable();`\n\t *\n\t * @param isDisabled `true` to disable the input\n\t */\n\tsetDisabledState(isDisabled: boolean) {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\t/**\n\t * Adds keyboard functionality for navigation, selection and closing of the `Dropdown`.\n\t */\n\t@HostListener(\"keydown\", [\"$event\"])\n\t// \"Esc\", \"Spacebar\", \"Down\", and \"Up\" are IE specific values\n\tonKeyDown(event: KeyboardEvent) {\n\t\tif ((event.key === \"Escape\" || event.key === \"Esc\") && !this.menuIsClosed) {\n\t\t\tevent.stopImmediatePropagation();  // don't unintentionally close other widgets that listen for Escape\n\t\t}\n\t\tif (event.key === \"Escape\" || event.key === \"Esc\") {\n\t\t\tevent.preventDefault();\n\t\t\tthis.closeMenu();\n\t\t\tthis.dropdownButton.nativeElement.focus();\n\t\t} else if (this.menuIsClosed && (event.key === \" \" || event.key === \"ArrowDown\" || event.key === \"ArrowUp\" ||\n\t\t\tevent.key === \"Spacebar\" || event.key === \"Down\" || event.key === \"Up\")) {\n\t\t\tif (this.disableArrowKeys && (event.key === \"ArrowDown\" || event.key === \"ArrowUp\" || event.key === \"Down\" || event.key === \"Up\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t\tthis.openMenu();\n\t\t}\n\n\t\tif (!this.menuIsClosed && event.key === \"Tab\" && this.dropdownMenu.nativeElement.contains(event.target as Node)) {\n\t\t\tthis.closeMenu();\n\t\t}\n\n\t\tif (!this.menuIsClosed && event.key === \"Tab\" && event.shiftKey) {\n\t\t\tthis.closeMenu();\n\t\t}\n\n\t\tif (this.type === \"multi\") { return; }\n\n\t\tif (this.menuIsClosed) {\n\t\t\tthis.closedDropdownNavigation(event);\n\t\t}\n\t}\n\n\tclosedDropdownNavigation(event) {\n\t\t// \"Down\", and \"Up\" are IE specific values\n\t\tif (event.key === \"ArrowDown\" || event.key === \"Down\") {\n\t\t\tevent.preventDefault();\n\t\t\tthis.view.getCurrentItem().selected = false;\n\t\t\tlet item = this.view.getNextItem();\n\t\t\tif (item) { item.selected = true; }\n\t\t} else if (event.key === \"ArrowUp\" || event.key === \"Up\") {\n\t\t\tevent.preventDefault();\n\t\t\tthis.view.getCurrentItem().selected = false;\n\t\t\tlet item = this.view.getPrevItem();\n\t\t\tif (item) { item.selected = true; }\n\t\t}\n\t}\n\n\t/**\n\t * Returns the display value if there is a selection and displayValue is set,\n\t * if there is just a selection the ListItem content property will be returned,\n\t * otherwise the placeholder will be returned.\n\t */\n\tgetDisplayStringValue(): Observable<string> {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\t\tlet selected = this.view.getSelected();\n\t\tif (selected.length && (!this.displayValue || !this.isRenderString())) {\n\t\t\tif (this.type === \"multi\") {\n\t\t\t\treturn of(this.placeholder);\n\t\t\t} else {\n\t\t\t\treturn of(selected[0].content);\n\t\t\t}\n\t\t} else if (selected.length && this.isRenderString()) {\n\t\t\treturn of(this.displayValue as string);\n\t\t}\n\t\treturn of(this.placeholder);\n\t}\n\n\tisRenderString(): boolean {\n\t\treturn typeof this.displayValue === \"string\";\n\t}\n\n\tgetRenderTemplateContext() {\n\t\tif (!this.view) {\n\t\t\treturn;\n\t\t}\n\t\tlet selected = this.view.getSelected();\n\t\tif (this.type === \"multi\") {\n\t\t\treturn {items: selected};\n\t\t} else if (selected && selected.length > 0) {\n\t\t\treturn {item: selected[0]}; // this is to be compatible with the dropdown-list template\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetSelectedCount(): number {\n\t\tif (this.view.getSelected()) {\n\t\t\treturn this.view.getSelected().length;\n\t\t}\n\t}\n\n\tclearSelected() {\n\t\tif (this.disabled || this.getSelectedCount() === 0) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const item of this.view.getListItems()) {\n\t\t\titem.selected = false;\n\t\t}\n\t\tthis.selected.emit([]);\n\t\tthis.propagateChange([]);\n\t}\n\n\t/**\n\t * Returns `true` if there is a value selected.\n\t */\n\tvalueSelected(): boolean {\n\t\tif (this.view.getSelected()) { return true; }\n\t\treturn false;\n\t}\n\n\t_noop() {}\n\t/**\n\t * Handles clicks outside of the `Dropdown`.\n\t */\n\t_outsideClick(event) {\n\t\tif (!this.elementRef.nativeElement.contains(event.target) &&\n\t\t\t// if we're appendToBody the list isn't within the _elementRef,\n\t\t\t// so we've got to check if our target is possibly in there too.\n\t\t\t!this.dropdownMenu.nativeElement.contains(event.target)) {\n\t\t\tthis.closeMenu();\n\t\t}\n\t}\n\t_outsideKey(event) {\n\t\tif (!this.menuIsClosed && event.key === \"Tab\" && this.dropdownMenu.nativeElement.contains(event.target as Node)) {\n\t\t\tthis.closeMenu();\n\t\t}\n\t}\n\t/**\n\t * Handles keyboard events so users are controlling the `Dropdown` instead of unintentionally controlling outside elements.\n\t */\n\t_keyboardNav(event: KeyboardEvent) {\n\t\t// \"Esc\" is an IE specific value\n\t\tif ((event.key === \"Escape\" || event.key === \"Esc\") && !this.menuIsClosed) {\n\t\t\tevent.stopImmediatePropagation();  // don't unintentionally close modal if inside of it\n\t\t}\n\t\tif (event.key === \"Escape\" || event.key === \"Esc\") {\n\t\t\tevent.preventDefault();\n\t\t\tthis.closeMenu();\n\t\t\tthis.dropdownButton.nativeElement.focus();\n\t\t} else if (!this.menuIsClosed && event.key === \"Tab\") {\n\t\t\t// this way focus will start on the next focusable item from the dropdown\n\t\t\t// not the top of the body!\n\t\t\tthis.dropdownButton.nativeElement.focus();\n\t\t\tthis.dropdownButton.nativeElement.dispatchEvent(new KeyboardEvent(\"keydown\", {bubbles: true, cancelable: true, key: \"Tab\"}));\n\t\t\tthis.closeMenu();\n\t\t}\n\t}\n\n\t/**\n\t * Creates the `Dropdown` list appending it to the dropdown parent object instead of the body.\n\t */\n\t_appendToDropdown() {\n\t\tthis.dropdownService.appendToDropdown(this.elementRef.nativeElement);\n\t\tthis.dropdownMenu.nativeElement.removeEventListener(\"keydown\", this.keyboardNav, true);\n\t}\n\n\t/**\n\t * Creates the `Dropdown` list as an element that is appended to the DOM body.\n\t */\n\t_appendToBody() {\n\t\tconst lightClass = this.theme === \"light\" ? \" bx--list-box--light\" : \"\";\n\t\tconst expandedClass = !this.menuIsClosed ? \" bx--list-box--expanded\" : \"\";\n\t\tthis.dropdownService.appendToBody(\n\t\t\tthis.dropdownButton.nativeElement,\n\t\t\tthis.dropdownMenu.nativeElement,\n\t\t\t`${this.elementRef.nativeElement.className}${lightClass}${expandedClass}`);\n\t\tthis.dropdownMenu.nativeElement.addEventListener(\"keydown\", this.keyboardNav, true);\n\t}\n\n\t/**\n\t * Detects whether or not the `Dropdown` list is visible within all scrollable parents.\n\t * This can be overridden by passing in a value to the `dropUp` input.\n\t */\n\t_shouldDropUp() {\n\t\t// check if dropdownMenu exists first.\n\t\tconst menu = this.dropdownMenu && this.dropdownMenu.nativeElement.querySelector(\".bx--list-box__menu\");\n\t\t// check if menu exists first.\n\t\tconst menuRect = menu && menu.getBoundingClientRect();\n\t\tif (menu && menuRect) {\n\t\t\tconst scrollableParents = getScrollableParents(menu);\n\t\t\treturn scrollableParents.reduce((shouldDropUp: boolean, parent: HTMLElement) => {\n\t\t\t\tconst parentRect = parent.getBoundingClientRect();\n\t\t\t\tconst isBelowParent = !(menuRect.bottom <= parentRect.bottom);\n\t\t\t\treturn shouldDropUp || isBelowParent;\n\t\t\t}, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Expands the dropdown menu in the view.\n\t */\n\topenMenu() {\n\t\t// prevents the dropdown from opening when list of items is empty\n\t\tif (this.view.getListItems().length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._dropUp = false;\n\t\tthis.menuIsClosed = false;\n\n\t\t// move the dropdown list to the body if we're not appending inline\n\t\t// and position it relative to the dropdown wrapper\n\t\tif (!this.appendInline) {\n\t\t\tconst target = this.dropdownButton.nativeElement;\n\t\t\tconst parent = this.elementRef.nativeElement;\n\t\t\tthis.visibilitySubscription = this.elementService\n\t\t\t\t.visibility(target, parent)\n\t\t\t\t.subscribe(value => {\n\t\t\t\t\tif (!value.visible) {\n\t\t\t\t\t\tthis.closeMenu();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tthis._appendToBody();\n\t\t}\n\n\t\t// set the dropdown menu to drop up if it's near the bottom of the screen\n\t\t// setTimeout lets us measure after it's visible in the DOM\n\t\tsetTimeout(() => {\n\t\t\tif (this.dropUp === null || this.dropUp === undefined) {\n\t\t\t\tthis._dropUp = this._shouldDropUp();\n\t\t\t}\n\t\t}, 0);\n\n\t\t// we bind noop to document.body.firstElementChild to allow safari to fire events\n\t\t// from document. Then we unbind everything later to keep things light.\n\t\tdocument.body.firstElementChild.addEventListener(\"click\", this.noop, true);\n\t\tdocument.body.firstElementChild.addEventListener(\"keydown\", this.noop, true);\n\t\tdocument.addEventListener(\"click\", this.outsideClick, true);\n\t\tdocument.addEventListener(\"keydown\", this.outsideKey, true);\n\t\tsetTimeout(() => this.view.initFocus(), 0);\n\t}\n\n\t/**\n\t * Collapsing the dropdown menu and removing unnecessary `EventListeners`.\n\t */\n\tcloseMenu() {\n\t\t// return early if the menu is already closed\n\t\tif (this.menuIsClosed) { return; }\n\t\tthis.menuIsClosed = true;\n\t\tthis.checkForReorder();\n\t\tthis.onClose.emit();\n\t\tthis.close.emit();\n\n\t\t// focus the trigger button when we close ...\n\t\tthis.dropdownButton.nativeElement.focus();\n\n\t\t// remove the conditional once this api is settled and part of abstract-dropdown-view.class\n\t\tif (this.view[\"disableScroll\"]) {\n\t\t\tthis.view[\"disableScroll\"]();\n\t\t}\n\n\t\t// move the list back in the component on close\n\t\tif (!this.appendInline) {\n\t\t\tthis.visibilitySubscription.unsubscribe();\n\t\t\tthis._appendToDropdown();\n\t\t}\n\t\tdocument.body.firstElementChild.removeEventListener(\"click\", this.noop, true);\n\t\tdocument.body.firstElementChild.removeEventListener(\"keydown\", this.noop, true);\n\t\tdocument.removeEventListener(\"click\", this.outsideClick, true);\n\t\tdocument.removeEventListener(\"keydown\", this.outsideKey, true);\n\t}\n\n\t/**\n\t * Controls toggling menu states between open/expanded and closed/collapsed.\n\t */\n\ttoggleMenu() {\n\t\tif (this.menuIsClosed) {\n\t\t\tthis.openMenu();\n\t\t} else {\n\t\t\tthis.closeMenu();\n\t\t}\n\t}\n\n\tpublic isTemplate(value) {\n\t\treturn value instanceof TemplateRef;\n\t}\n\n\t/**\n\t * Controls when it's needed to apply the selection feedback\n\t */\n\tprotected checkForReorder() {\n\t\tconst topAfterReopen = this.menuIsClosed && this.selectionFeedback === \"top-after-reopen\";\n\t\tif ((this.type === \"multi\") && (topAfterReopen || this.selectionFeedback === \"top\")) {\n\t\t\tthis.view.reorderSelected(this.selectionFeedback === \"top\");\n\t\t}\n\t}\n}\n","import {\n\tComponent,\n\tInput,\n\tOutput,\n\tOnDestroy,\n\tEventEmitter,\n\tTemplateRef,\n\tAfterViewInit,\n\tViewChild,\n\tElementRef,\n\tViewChildren,\n\tQueryList\n} from \"@angular/core\";\nimport { Observable, isObservable, Subscription, of } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18n } from \"carbon-components-angular/i18n\";\nimport { AbstractDropdownView } from \"../abstract-dropdown-view.class\";\nimport { ListItem } from \"../list-item.interface\";\nimport { watchFocusJump } from \"../dropdowntools\";\nimport { ScrollCustomEvent } from \"./scroll-custom-event.interface\";\n\n\n/**\n * ```html\n * <ibm-dropdown-list [items]=\"listItems\"></ibm-dropdown-list>\n * ```\n * ```typescript\n * listItems = [\n * \t{\n * \t\tcontent: \"item one\",\n * \t\tselected: false\n * \t},\n * \t{\n * \t\tcontent: \"item two\",\n * \t\tselected: false,\n * \t},\n * \t{\n * \t\tcontent: \"item three\",\n * \t\tselected: false\n * \t},\n * \t{\n * \t\tcontent: \"item four\",\n * \t\tselected: false\n * \t}\n * ];\n * ```\n */\n@Component({\n\tselector: \"ibm-dropdown-list\",\n\ttemplate: `\n\t\t<ul\n\t\t\t#list\n\t\t\trole=\"listbox\"\n\t\t\tclass=\"bx--list-box__menu bx--multi-select\"\n\t\t\t(scroll)=\"emitScroll($event)\"\n\t\t\t(keydown)=\"navigateList($event)\"\n\t\t\ttabindex=\"-1\"\n\t\t\t[attr.aria-label]=\"ariaLabel\"\n\t\t\t[attr.aria-activedescendant]=\"highlightedItem\">\n\t\t\t<li\n\t\t\t\trole=\"option\"\n\t\t\t\t*ngFor=\"let item of displayItems; let i = index\"\n\t\t\t\t(click)=\"doClick($event, item)\"\n\t\t\t\tclass=\"bx--list-box__menu-item\"\n\t\t\t\t[attr.aria-selected]=\"item.selected\"\n\t\t\t\t[id]=\"getItemId(i)\"\n\t\t\t\t[ngClass]=\"{\n\t\t\t\t\t'bx--list-box__menu-item--active': item.selected,\n\t\t\t\t\t'bx--list-box__menu-item--highlighted': highlightedItem === getItemId(i),\n\t\t\t\t\tdisabled: item.disabled\n\t\t\t\t}\">\n\t\t\t\t<div\n\t\t\t\t\t#listItem\n\t\t\t\t\ttabindex=\"-1\"\n\t\t\t\t\tclass=\"bx--list-box__menu-item__option\">\n\t\t\t\t\t<div\n\t\t\t\t\t\t*ngIf=\"!listTpl && type === 'multi'\"\n\t\t\t\t\t\tclass=\"bx--form-item bx--checkbox-wrapper\">\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t[attr.data-contained-checkbox-state]=\"item.selected\"\n\t\t\t\t\t\t\tclass=\"bx--checkbox-label\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tclass=\"bx--checkbox\"\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t[checked]=\"item.selected\"\n\t\t\t\t\t\t\t\t[disabled]=\"item.disabled\"\n\t\t\t\t\t\t\t\ttabindex=\"-1\">\n\t\t\t\t\t\t\t<span class=\"bx--checkbox-appearance\"></span>\n\t\t\t\t\t\t\t<span class=\"bx--checkbox-label-text\">{{item.content}}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ng-container *ngIf=\"!listTpl && type === 'single'\">{{item.content}}</ng-container>\n\t\t\t\t\t<svg\n\t\t\t\t\t\t*ngIf=\"!listTpl && type === 'single'\"\n\t\t\t\t\t\tibmIcon=\"checkmark\"\n\t\t\t\t\t\tsize=\"16\"\n\t\t\t\t\t\tclass=\"bx--list-box__menu-item__selected-icon\">\n\t\t\t\t\t</svg>\n\t\t\t\t\t<ng-template\n\t\t\t\t\t\t*ngIf=\"listTpl\"\n\t\t\t\t\t\t[ngTemplateOutletContext]=\"{item: item}\"\n\t\t\t\t\t\t[ngTemplateOutlet]=\"listTpl\">\n\t\t\t\t\t</ng-template>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>`,\n\tproviders: [\n\t\t{\n\t\t\tprovide: AbstractDropdownView,\n\t\t\tuseExisting: DropdownList\n\t\t}\n\t]\n})\nexport class DropdownList implements AbstractDropdownView, AfterViewInit, OnDestroy {\n\tstatic listCount = 0;\n\t@Input() ariaLabel = this.i18n.get().DROPDOWN_LIST.LABEL;\n\t/**\n\t * The list items belonging to the `DropdownList`.\n\t */\n\t@Input() set items (value: Array<ListItem> | Observable<Array<ListItem>>) {\n\t\tif (isObservable(value)) {\n\t\t\tif (this._itemsSubscription) {\n\t\t\t\tthis._itemsSubscription.unsubscribe();\n\t\t\t}\n\t\t\tthis._itemsReady = new Observable<boolean>((observer) => {\n\t\t\t\tthis._itemsSubscription = value.subscribe(v => {\n\t\t\t\t\tthis.updateList(v);\n\t\t\t\t\tobserver.next(true);\n\t\t\t\t\tobserver.complete();\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.onItemsReady(null);\n\t\t} else {\n\t\t\tthis.updateList(value);\n\t\t}\n\t\tthis._originalItems = value;\n\t}\n\n\tget items(): Array<ListItem> | Observable<Array<ListItem>> {\n\t\treturn this._originalItems;\n\t}\n\t/**\n\t * Template to bind to items in the `DropdownList` (optional).\n\t */\n\t@Input() listTpl: string | TemplateRef<any> = null;\n\t/**\n\t * Event to emit selection of a list item within the `DropdownList`.\n\t */\n\t@Output() select: EventEmitter<{ item: ListItem, isUpdate?: boolean } | ListItem[]> = new EventEmitter();\n\t/**\n\t * Event to emit scroll event of a list within the `DropdownList`.\n\t */\n\t@Output() scroll: EventEmitter<ScrollCustomEvent> = new EventEmitter();\n\t/**\n\t * Event to suggest a blur on the view.\n\t * Emits _after_ the first/last item has been focused.\n\t * ex.\n\t * ArrowUp -> focus first item\n\t * ArrowUp -> emit event\n\t *\n\t * When this event fires focus should be placed on some element outside of the list - blurring the list as a result\n\t */\n\t@Output() blurIntent = new EventEmitter<\"top\" | \"bottom\">();\n\t/**\n\t * Maintains a reference to the view DOM element for the unordered list of items within the `DropdownList`.\n\t */\n\t// @ts-ignore\n\t@ViewChild(\"list\", { static: true }) list: ElementRef;\n\t/**\n\t * Defines whether or not the `DropdownList` supports selecting multiple items as opposed to single\n\t * item selection.\n\t */\n\t@Input() type: \"single\" | \"multi\" = \"single\";\n\t/**\n\t * Defines the rendering size of the `DropdownList` input component.\n\t *\n\t * @deprecated since v4\n\t */\n\tpublic size: \"sm\" | \"md\" | \"xl\" = \"md\";\n\tpublic listId = `listbox-${DropdownList.listCount++}`;\n\tpublic highlightedItem = null;\n\t/**\n\t * Holds the list of items that will be displayed in the `DropdownList`.\n\t * It differs from the the complete set of items when filtering is used (but\n\t * it is always a subset of the total items in `DropdownList`).\n\t */\n\tpublic displayItems: Array<ListItem> = [];\n\t/**\n\t * Maintains the index for the selected item within the `DropdownList`.\n\t */\n\tprotected index = -1;\n\t/**\n\t * An array holding the HTML list elements in the view.\n\t */\n\t@ViewChildren(\"listItem\") protected listElementList: QueryList<ElementRef>;\n\t/**\n\t * Observable bound to keydown events to control filtering.\n\t */\n\tprotected focusJump;\n\t/**\n\t * Tracks the current (if any) subscription to the items observable so we can clean up when the input is updated.\n\t */\n\tprotected _itemsSubscription: Subscription;\n\t/**\n\t * Used to retain the original items passed to the setter.\n\t */\n\tprotected _originalItems: Array<ListItem> | Observable<Array<ListItem>>;\n\t/**\n\t * Useful representation of the items, should be accessed via `getListItems`.\n\t */\n\tprotected _items: Array<ListItem> = [];\n\t/**\n\t * Used to wait for items in case they are passed through an observable.\n\t */\n\tprotected _itemsReady: Observable<boolean>;\n\n\t/**\n\t * Creates an instance of `DropdownList`.\n\t */\n\tconstructor(public elementRef: ElementRef, protected i18n: I18n) {}\n\n\t/**\n\t * Retrieves array of list items and index of the selected item after view has rendered.\n\t * Additionally, any Observables for the `DropdownList` are initialized.\n\t */\n\tngAfterViewInit() {\n\t\tthis.index = this.getListItems().findIndex(item => item.selected);\n\t\tthis.setupFocusObservable();\n\t\tsetTimeout(() => {\n\t\t\tthis.doEmitSelect(true);\n\t\t});\n\t}\n\n\t/**\n\t * Removes any Observables on destruction of the component.\n\t */\n\tngOnDestroy() {\n\t\tif (this.focusJump) {\n\t\t\tthis.focusJump.unsubscribe();\n\t\t}\n\t\tif (this._itemsSubscription) {\n\t\t\tthis._itemsSubscription.unsubscribe();\n\t\t}\n\t}\n\n\tdoEmitSelect(isUpdate = true) {\n\t\tif (this.type === \"single\") {\n\t\t\tthis.select.emit({ item: this._items.find(item => item.selected), isUpdate: isUpdate });\n\t\t} else {\n\t\t\t// abuse javascripts object mutability until we can break the API and switch to\n\t\t\t// { items: [], isUpdate: true }\n\t\t\tconst selected = this.getSelected() || [];\n\t\t\tselected[\"isUpdate\"] = isUpdate;\n\t\t\tthis.select.emit(selected);\n\t\t}\n\t}\n\n\tgetItemId(index: number) {\n\t\treturn `${this.listId}-${index}`;\n\t}\n\n\t/**\n\t * Updates the displayed list of items and then retrieves the most current properties for the `DropdownList` from the DOM.\n\t */\n\tupdateList(items) {\n\t\tthis._items = items.map(item => Object.assign({}, item));\n\t\tthis.displayItems = this._items;\n\t\tthis.index = this._items.findIndex(item => item.selected);\n\t\tthis.setupFocusObservable();\n\t\tsetTimeout(() => {\n\t\t\tif (this.getSelected() !== []) { return; }\n\t\t\tthis.doEmitSelect();\n\t\t});\n\t}\n\n\t/**\n\t * Filters the items being displayed in the DOM list.\n\t */\n\tfilterBy(query = \"\") {\n\t\tif (query) {\n\t\t\tthis.displayItems = this.getListItems().filter(item => item.content.toLowerCase().includes(query.toLowerCase()));\n\t\t} else {\n\t\t\tthis.displayItems = this.getListItems();\n\t\t}\n\t\t// reset the index since the list has changed visually\n\t\tthis.index = 0;\n\t}\n\n\t/**\n\t * Initializes (or re-initializes) the Observable that handles switching focus to an element based on\n\t * key input matching the first letter of the item in the list.\n\t */\n\tsetupFocusObservable() {\n\t\tif (!this.list) { return; }\n\t\tif (this.focusJump) {\n\t\t\tthis.focusJump.unsubscribe();\n\t\t}\n\t\tlet elList = Array.from(this.list.nativeElement.querySelectorAll(\"li\"));\n\t\tthis.focusJump = watchFocusJump(this.list.nativeElement, elList)\n\t\t\t.subscribe(el => {\n\t\t\t\tel.focus();\n\t\t\t});\n\t}\n\n\t/**\n\t * Returns the `ListItem` that is subsequent to the selected item in the `DropdownList`.\n\t */\n\tgetNextItem(): ListItem {\n\t\tif (this.index < this.displayItems.length - 1) {\n\t\t\tthis.index++;\n\t\t}\n\t\treturn this.displayItems[this.index];\n\t}\n\n\t/**\n\t * Returns `true` if the selected item is not the last item in the `DropdownList`.\n\t */\n\thasNextElement(): boolean {\n\t\tif (this.index < this.displayItems.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the `HTMLElement` for the item that is subsequent to the selected item.\n\t */\n\tgetNextElement(): HTMLElement {\n\t\tif (this.index < this.displayItems.length - 1) {\n\t\t\tthis.index++;\n\t\t}\n\t\tlet elem = this.listElementList.toArray()[this.index].nativeElement;\n\t\tlet item = this.displayItems[this.index];\n\t\tif (item.disabled) {\n\t\t\treturn this.getNextElement();\n\t\t}\n\t\treturn elem;\n\t}\n\n\t/**\n\t * Returns the `ListItem` that precedes the selected item within `DropdownList`.\n\t */\n\tgetPrevItem(): ListItem {\n\t\tif (this.index > 0) {\n\t\t\tthis.index--;\n\t\t}\n\t\treturn this.displayItems[this.index];\n\t}\n\n\t/**\n\t * Returns `true` if the selected item is not the first in the list.\n\t */\n\thasPrevElement(): boolean {\n\t\tif (this.index > 0) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the `HTMLElement` for the item that precedes the selected item.\n\t */\n\tgetPrevElement(): HTMLElement {\n\t\tif (this.index > 0) {\n\t\t\tthis.index--;\n\t\t}\n\t\tlet elem = this.listElementList.toArray()[this.index].nativeElement;\n\t\tlet item = this.displayItems[this.index];\n\t\tif (item.disabled) {\n\t\t\treturn this.getPrevElement();\n\t\t}\n\t\treturn elem;\n\t}\n\n\t/**\n\t * Returns the `ListItem` that is selected within `DropdownList`.\n\t */\n\tgetCurrentItem(): ListItem {\n\t\tif (this.index < 0) {\n\t\t\treturn this.displayItems[0];\n\t\t}\n\t\treturn this.displayItems[this.index];\n\t}\n\n\t/**\n\t * Returns the `HTMLElement` for the item that is selected within the `DropdownList`.\n\t */\n\tgetCurrentElement(): HTMLElement {\n\t\tif (this.index < 0) {\n\t\t\treturn this.listElementList.first.nativeElement;\n\t\t}\n\t\treturn this.listElementList.toArray()[this.index].nativeElement;\n\t}\n\n\t/**\n\t * Returns the items as an Array\n\t */\n\tgetListItems(): Array<ListItem> {\n\t\treturn this._items;\n\t}\n\n\t/**\n\t * Returns a list containing the selected item(s) in the `DropdownList`.\n\t */\n\tgetSelected(): ListItem[] {\n\t\tlet selected = this.getListItems().filter(item => item.selected);\n\t\tif (selected.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\treturn selected;\n\t}\n\n\t/**\n\t * Transforms array input list of items to the correct state by updating the selected item(s).\n\t */\n\tpropagateSelected(value: Array<ListItem>): void {\n\t\t// if we get a non-array, log out an error (since it is one)\n\t\tif (!Array.isArray(value)) {\n\t\t\tconsole.error(`${this.constructor.name}.propagateSelected expects an Array<ListItem>, got ${JSON.stringify(value)}`);\n\t\t}\n\t\tthis.onItemsReady(() => {\n\t\t\t// loop through the list items and update the `selected` state for matching items in `value`\n\t\t\tfor (let oldItem of this.getListItems()) {\n\t\t\t\t// copy the item\n\t\t\t\tlet tempOldItem: string | ListItem = Object.assign({}, oldItem);\n\t\t\t\t// deleted selected because it's what we _want_ to change\n\t\t\t\tdelete tempOldItem.selected;\n\t\t\t\t// stringify for compare\n\t\t\t\ttempOldItem = JSON.stringify(tempOldItem);\n\t\t\t\tfor (let newItem of value) {\n\t\t\t\t\t// copy the item\n\t\t\t\t\tlet tempNewItem: string | ListItem = Object.assign({}, newItem);\n\t\t\t\t\t// deleted selected because it's what we _want_ to change\n\t\t\t\t\tdelete tempNewItem.selected;\n\t\t\t\t\t// stringify for compare\n\t\t\t\t\ttempNewItem = JSON.stringify(tempNewItem);\n\t\t\t\t\t// do the compare\n\t\t\t\t\tif (tempOldItem.includes(tempNewItem)) {\n\t\t\t\t\t\toldItem.selected = newItem.selected;\n\t\t\t\t\t\t// if we've found a matching item, we can stop looping\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toldItem.selected = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Initializes focus in the list, effectively a wrapper for `getCurrentElement().focus()`\n\t */\n\tinitFocus() {\n\t\t// ensure we start at this first item if nothing is already selected\n\t\tif (this.index < 0) {\n\t\t\tthis.index = 0;\n\t\t}\n\t\t// this.getCurrentElement().focus();\n\t\tthis.list.nativeElement.focus();\n\t}\n\n\t/**\n\t * Manages the keyboard accessibility for navigation and selection within a `DropdownList`.\n\t * @deprecated since v4\n\t */\n\tdoKeyDown(event: KeyboardEvent, item: ListItem) {\n\t\t// \"Spacebar\", \"Down\", and \"Up\" are IE specific values\n\t\tif (event.key === \"Enter\" || event.key === \" \" || event.key === \"Spacebar\") {\n\t\t\t\tif (this.listElementList.some(option => option.nativeElement === event.target)) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tif (event.key === \"Enter\") {\n\t\t\t\t\tthis.doClick(event, item);\n\t\t\t\t}\n\t\t} else if (event.key === \"ArrowDown\" || event.key === \"ArrowUp\" || event.key === \"Down\" || event.key === \"Up\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.key === \"ArrowDown\" || event.key === \"Down\") {\n\t\t\t\tif (this.hasNextElement()) {\n\t\t\t\t\t// this.getNextElement().focus();\n\t\t\t\t\tthis.getNextElement();\n\t\t\t\t} else {\n\t\t\t\t\tthis.blurIntent.emit(\"bottom\");\n\t\t\t\t}\n\t\t\t} else if (event.key === \"ArrowUp\" || event.key === \"Up\") {\n\t\t\t\tif (this.hasPrevElement()) {\n\t\t\t\t\t// this.getPrevElement().focus();\n\t\t\t\t\tthis.getPrevElement();\n\t\t\t\t} else {\n\t\t\t\t\tthis.blurIntent.emit(\"top\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Manages the keyboard accessibility for navigation and selection within a `DropdownList`.\n\t */\n\tnavigateList(event: KeyboardEvent) {\n\t\t// \"Spacebar\", \"Down\", and \"Up\" are IE specific values\n\t\tif (event.key === \"Enter\" || event.key === \" \" || event.key === \"Spacebar\") {\n\t\t\tif (this.listElementList.some(option => option.nativeElement === event.target)) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tif (event.key === \"Enter\") {\n\t\t\t\tthis.doClick(event, this.getCurrentItem());\n\t\t\t}\n\t\t} else if (event.key === \"ArrowDown\" || event.key === \"ArrowUp\" || event.key === \"Down\" || event.key === \"Up\") {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.key === \"ArrowDown\" || event.key === \"Down\") {\n\t\t\t\tif (this.hasNextElement()) {\n\t\t\t\t\tthis.getNextElement();\n\t\t\t\t} else {\n\t\t\t\t\tthis.blurIntent.emit(\"bottom\");\n\t\t\t\t}\n\t\t\t} else if (event.key === \"ArrowUp\" || event.key === \"Up\") {\n\t\t\t\tif (this.hasPrevElement()) {\n\t\t\t\t\tthis.getPrevElement();\n\t\t\t\t} else {\n\t\t\t\t\tthis.blurIntent.emit(\"top\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.highlightedItem = this.getItemId(this.index);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Emits the selected item or items after a mouse click event has occurred.\n\t */\n\tdoClick(event, item) {\n\t\tevent.preventDefault();\n\t\tif (!item.disabled) {\n\t\t\tif (this.type === \"single\") {\n\t\t\t\titem.selected = true;\n\t\t\t\t// reset the selection\n\t\t\t\tfor (let otherItem of this.getListItems()) {\n\t\t\t\t\tif (item !== otherItem) { otherItem.selected = false; }\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titem.selected = !item.selected;\n\t\t\t}\n\t\t\tthis.index = this.displayItems.indexOf(item);\n\t\t\tthis.doEmitSelect(false);\n\t\t}\n\t}\n\n\tonItemFocus(index) {\n\t\tconst element = this.listElementList.toArray()[index].nativeElement;\n\t\telement.classList.add(\"bx--list-box__menu-item--highlighted\");\n\t\telement.tabIndex = 0;\n\t}\n\n\tonItemBlur(index) {\n\t\tconst element = this.listElementList.toArray()[index].nativeElement;\n\t\telement.classList.remove(\"bx--list-box__menu-item--highlighted\");\n\t\telement.tabIndex = -1;\n\t}\n\n\t/**\n\t * Emits the scroll event of the options list\n\t */\n\temitScroll(event) {\n\t\tconst atTop: boolean = event.srcElement.scrollTop === 0;\n\t\tconst atBottom: boolean = event.srcElement.scrollHeight - event.srcElement.scrollTop === event.srcElement.clientHeight;\n\t\tconst customScrollEvent = { atTop, atBottom, event };\n\t\tthis.scroll.emit(customScrollEvent);\n\t}\n\n\t/**\n\t * Subscribe the function passed to an internal observable that will resolve once the items are ready\n\t */\n\tonItemsReady(subcription: () => void): void {\n\t\t// this subscription will auto unsubscribe because of the `first()` pipe\n\t\t(this._itemsReady || of(true)).pipe(first()).subscribe(subcription);\n\t}\n\n\treorderSelected(moveFocus = false): void {\n\t\tthis.displayItems = [...this.getSelected(), ...this.getListItems().filter(item => !item.selected)];\n\t\tif (moveFocus) {\n\t\t\tsetTimeout(() => this.getCurrentElement().focus());\n\t\t}\n\t}\n}\n","import { Observable, fromEvent } from \"rxjs\";\nimport { debounceTime, map, filter } from \"rxjs/operators\";\n\n/**\n * returns an observable bound to keydown events that\n * filters to a single element where the first letter of\n * it's textContent matches the key pressed\n *\n * @param target element to watch\n * @param elements elements to search\n */\nexport function watchFocusJump(target: HTMLElement, elements): Observable<HTMLElement> {\n\treturn fromEvent(target, \"keydown\")\n\t\t.pipe(\n\t\t\tdebounceTime(150),\n\t\t\tmap((ev: KeyboardEvent) => {\n\t\t\t\tlet el = elements.find((itemEl) =>\n\t\t\t\t\titemEl.textContent.trim().toLowerCase().startsWith(ev.key));\n\t\t\t\tif (el) { return el; }\n\t\t\t}),\n\t\t\tfilter(el => !!el)\n\t\t);\n}\n\n/** bundle of functions to aid in manipulating tree structures */\nexport const treetools = {\n\t/** finds an item in a set of items and returns the item and path to the item as an array */\n\tfind: function(items, itemToFind, path = []) {\n\t\tlet found;\n\t\tfor (let i of items) {\n\t\t\tif (i === itemToFind) {\n\t\t\t\tpath.push(i);\n\t\t\t\tfound = i;\n\t\t\t}\n\t\t\tif (i.items && !found) {\n\t\t\t\tpath.push(i);\n\t\t\t\tfound = this.find(i.items, itemToFind, path).found;\n\t\t\t\tif (!found) { path = []; }\n\t\t\t}\n\t\t}\n\t\treturn {found, path};\n\t}\n};\n","import {\n\tInput,\n\tDirective,\n\tElementRef,\n\tHostListener,\n\tOnChanges,\n\tSimpleChanges,\n\tAfterViewInit\n} from \"@angular/core\";\n\n@Directive({\n\tselector: \"[ibmScrollableList]\",\n\texportAs: \"scrollable-list\"\n})\nexport class ScrollableList implements OnChanges, AfterViewInit {\n\t/**\n\t * Optional target list to scroll\n\t */\n\t@Input() nScrollableList: string = null;\n\t/**\n\t * Enables or disables scrolling for the whole directive\n\t */\n\t@Input() scrollEnabled = true;\n\t/**\n\t * Sets the target used for hover scrolling up\n\t */\n\t@Input() scrollUpTarget: HTMLElement;\n\t/**\n\t * Sets the target used for hover scrolling down\n\t */\n\t@Input() scrollDownTarget: HTMLElement;\n\t/**\n\t * How many lines to scroll by each time `wheel` fires\n\t * Defaults to 10 - based on testing this isn't too fast or slow on any platform\n\t */\n\t@Input() scrollBy = 10;\n\n\t// keeps track of the setInterval for hover scrolling\n\tprotected hoverScrollInterval;\n\t// tracks the last touch event\n\tprotected lastTouch;\n\tprotected canScrollUp = false;\n\tprotected canScrollDown = false;\n\tprotected list = this.elementRef.nativeElement;\n\n\tconstructor(protected elementRef: ElementRef) {}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (changes.scrollEnabled) {\n\t\t\tif (changes.scrollEnabled.currentValue) {\n\t\t\t\tthis.list.style.overflow = \"hidden\";\n\t\t\t\tthis.scrollUpTarget.style.display = \"flex\";\n\t\t\t\tthis.scrollDownTarget.style.display = \"flex\";\n\t\t\t\tthis.canScrollUp = true;\n\t\t\t\tthis.canScrollDown = true;\n\t\t\t\tthis.updateScrollHeight();\n\t\t\t\tthis.checkScrollArrows();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.checkScrollArrows();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.scrollUpTarget.style.display = \"none\";\n\t\t\t\tthis.scrollDownTarget.style.display = \"none\";\n\t\t\t\tthis.canScrollUp = false;\n\t\t\t\tthis.canScrollDown = false;\n\t\t\t\tthis.list.style.height = null;\n\t\t\t\tthis.list.style.overflow = null;\n\t\t\t\tclearInterval(this.hoverScrollInterval);\n\t\t\t}\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tif (this.nScrollableList) {\n\t\t\tthis.list = this.elementRef.nativeElement.querySelector(this.nScrollableList);\n\t\t}\n\t\tthis.scrollUpTarget.addEventListener(\"mouseover\", () => this.onHoverUp(true));\n\t\tthis.scrollUpTarget.addEventListener(\"mouseout\", () => this.onHoverUp(false));\n\t\tthis.scrollDownTarget.addEventListener(\"mouseover\", () => this.onHoverDown(true));\n\t\tthis.scrollDownTarget.addEventListener(\"mouseout\", () => this.onHoverDown(false));\n\t}\n\n\tpublic updateScrollHeight() {\n\t\tif (this.scrollEnabled) {\n\t\t\tconst container = this.elementRef.nativeElement.parentElement;\n\t\t\tconst containerRect = container.getBoundingClientRect();\n\t\t\tconst innerHeightDiff = this.list.getBoundingClientRect().top - containerRect.top;\n\t\t\tconst outerHeightDiff = containerRect.height - (containerRect.bottom - window.innerHeight);\n\t\t\t// 40 gives us some padding between the bottom of the list,\n\t\t\t// the bottom of the window, and the scroll down button\n\t\t\tconst height = outerHeightDiff - innerHeightDiff - 40;\n\t\t\tthis.list.style.height = `${height}px`;\n\t\t}\n\t}\n\n\tprotected checkScrollArrows() {\n\t\tconst scrollUpHeight = this.scrollUpTarget.offsetHeight;\n\t\tconst scrollDownHeight = this.scrollDownTarget.offsetHeight;\n\t\tif (this.list.scrollTop === 0) {\n\t\t\tif (this.canScrollUp) {\n\t\t\t\tthis.list.style.height = `${parseInt(this.list.style.height, 10) + scrollUpHeight}px`;\n\t\t\t}\n\t\t\tthis.scrollUpTarget.style.display = \"none\";\n\t\t\tthis.canScrollUp = false;\n\t\t} else if (this.list.scrollTop === this.list.scrollTopMax) {\n\t\t\tif (this.canScrollDown) {\n\t\t\t\tthis.list.style.height = `${parseInt(this.list.style.height, 10) + scrollDownHeight}px`;\n\t\t\t}\n\t\t\tthis.scrollDownTarget.style.display = \"none\";\n\t\t\tthis.canScrollDown = false;\n\t\t} else {\n\t\t\tif (!this.canScrollUp) {\n\t\t\t\tthis.list.style.height = `${parseInt(this.list.style.height, 10) - scrollUpHeight}px`;\n\t\t\t}\n\t\t\tif (!this.canScrollDown) {\n\t\t\t\tthis.list.style.height = `${parseInt(this.list.style.height, 10) - scrollDownHeight}px`;\n\t\t\t}\n\t\t\tthis.scrollUpTarget.style.display = \"flex\";\n\t\t\tthis.scrollDownTarget.style.display = \"flex\";\n\t\t\tthis.canScrollUp = true;\n\t\t\tthis.canScrollDown = true;\n\t\t}\n\t}\n\n\t@HostListener(\"wheel\", [\"$event\"])\n\tprotected onWheel(event) {\n\t\tif (event.deltaY < 0) {\n\t\t\tthis.list.scrollTop -= this.scrollBy;\n\t\t} else {\n\t\t\tthis.list.scrollTop += this.scrollBy;\n\t\t}\n\t\t// only prevent the parent/window from scrolling if we can scroll\n\t\tif (!(this.list.scrollTop === this.list.scrollTopMax || this.list.scrollTop === 0)) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tthis.checkScrollArrows();\n\t}\n\n\t@HostListener(\"touchstart\", [\"$event\"])\n\tprotected onTouchStart(event) {\n\t\tif (event.touches[0]) {\n\t\t\tthis.lastTouch = event.touches[0].clientY;\n\t\t}\n\t}\n\n\t@HostListener(\"touchmove\", [\"$event\"])\n\tprotected onTouchMove(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tif (event.touches[0]) {\n\t\t\tconst touch = event.touches[0];\n\t\t\tthis.list.scrollTop += this.lastTouch - touch.clientY;\n\t\t\tthis.lastTouch = touch.clientY;\n\t\t\tthis.checkScrollArrows();\n\t\t}\n\t}\n\n\tprotected hoverScrollBy(hovering, amount) {\n\t\tif (hovering) {\n\t\t\tthis.hoverScrollInterval = setInterval(() => {\n\t\t\t\tthis.list.scrollTop += amount;\n\t\t\t\tthis.checkScrollArrows();\n\t\t\t}, 1);\n\t\t} else {\n\t\t\tclearInterval(this.hoverScrollInterval);\n\t\t}\n\t}\n\n\tprotected onHoverUp(hovering) {\n\t\t// how many px/lines to scroll by on hover\n\t\t// 3 is just a random number that felt good\n\t\t// 1 and 2 are too slow, 4 works but it might be a tad fast\n\t\tthis.hoverScrollBy(hovering, -3);\n\t}\n\n\tprotected onHoverDown(hovering) {\n\t\tthis.hoverScrollBy(hovering, 3);\n\t}\n\n\t@HostListener(\"keydown\", [\"$event\"])\n\tprotected onKeyDown(event) {\n\t\tif (event.key === \"ArrowDown\" || event.key === \"ArrowUp\") {\n\t\t\tthis.checkScrollArrows();\n\t\t}\n\t}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { Dropdown } from \"./dropdown.component\";\nimport { DropdownList } from \"./list/dropdown-list.component\";\nimport { AbstractDropdownView } from \"./abstract-dropdown-view.class\";\n\nimport { ScrollableList } from \"./scrollable-list.directive\";\nimport { I18nModule } from \"carbon-components-angular/i18n\";\nimport { PlaceholderModule } from \"carbon-components-angular/placeholder\";\nimport { DropdownService } from \"./dropdown.service\";\nimport { UtilsModule } from \"carbon-components-angular/utils\";\nimport { IconModule } from \"carbon-components-angular/icon\";\n\n@NgModule({\n\tdeclarations: [\n\t\tDropdown,\n\t\tDropdownList,\n\t\tScrollableList,\n\t\tAbstractDropdownView\n\t],\n\texports: [\n\t\tDropdown,\n\t\tDropdownList,\n\t\tScrollableList,\n\t\tAbstractDropdownView\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tI18nModule,\n\t\tPlaceholderModule,\n\t\tUtilsModule,\n\t\tIconModule\n\t],\n\tproviders: [ DropdownService ]\n})\nexport class DropdownModule {}\n"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__spread","ar","arguments","concat","n","r","e","push","error","__read","AbstractDropdownView","Object","defineProperty","prototype","getNextItem","hasNextElement","getNextElement","getPrevItem","hasPrevElement","getPrevElement","getSelected","getCurrentItem","getCurrentElement","getListItems","propagateSelected","filterBy","initFocus","onItemsReady","subcription","reorderSelected","moveFocus","Directive","args","selector","Input","Output","this","type","size","defaultOffset","top","left","DropdownService","_offset","assign","appendToBody","parentRef","menuRef","classList","_this","style","display","dropdownWrapper","document","createElement","className","width","offsetWidth","position","appendChild","placeholderService","hasPlaceholderRef","appendElement","body","menuInstance","animationFrameSubscription","animationFrameService","tick","subscribe","positionDropdown","appendToDropdown","hostRef","instance","menu","firstElementChild","unsubscribe","hasElement","removeElement","contains","removeChild","updatePosition","ngOnDestroy","leftOffset","boxMenu","closestMenuWithPos","topPos","leftPos","pos","querySelector","getBoundingClientRect","right","window","innerWidth","documentElement","clientWidth","closestAttr","parentElement","offset","findAbsolute","addOffset","setElement","Injectable","PlaceholderService","AnimationFrameService","Subscription","Dropdown","itemValueKey","newValue","console","warn","_writtenValue","val","clearSelected","ngOnInit","view","ngAfterContentInit","writtenValue","writeValue","select","event","values","map","item","propagateChange","closeMenu","selected","isUpdate","checkForReorder","emit","appRef","ngAfterViewInit","appendInline","hasScrollableParents","elementRef","nativeElement","_appendToDropdown","find","newValues","value_1","tslib_1.__values","value_1_1","v","_c","_d","onBlur","onTouchedCallback","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","onKeyDown","key","menuIsClosed","stopImmediatePropagation","preventDefault","dropdownButton","focus","disableArrowKeys","openMenu","dropdownMenu","target","shiftKey","closedDropdownNavigation","getDisplayStringValue","displayValue","isRenderString","of","placeholder","content","getRenderTemplateContext","items","getSelectedCount","_b","valueSelected","_noop","_outsideClick","_outsideKey","_keyboardNav","dispatchEvent","KeyboardEvent","bubbles","cancelable","dropdownService","removeEventListener","keyboardNav","_appendToBody","lightClass","theme","expandedClass","addEventListener","_shouldDropUp","menuRect","getScrollableParents","reduce","shouldDropUp","parent","parentRect","isBelowParent","bottom","parent_1","_dropUp","visibilitySubscription","elementService","visibility","visible","setTimeout","dropUp","undefined","noop","outsideClick","outsideKey","onClose","close","toggleMenu","isTemplate","TemplateRef","topAfterReopen","selectionFeedback","dropdownCount","Component","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","multi","ElementRef","I18n","ApplicationRef","ElementService","ContentChild","static","ViewChild","HostBinding","HostListener","i18n","id","clearText","get","DROPDOWN","CLEAR","skeleton","inline","invalid","menuButtonLabel","OPEN","selectedLabel","SELECTED","EventEmitter","hostClass","bind","_","DropdownList","_originalItems","isObservable","_itemsSubscription","_itemsReady","Observable","observer","updateList","complete","index","findIndex","setupFocusObservable","doEmitSelect","focusJump","_items","getItemId","listId","displayItems","query","filter","toLowerCase","includes","elList","elements","list","Array","from","querySelectorAll","fromEvent","pipe","debounceTime","ev","el","itemEl","textContent","trim","startsWith","elem","listElementList","toArray","first","isArray","constructor","name","JSON","stringify","oldItem","tempOldItem","newItem","tempNewItem","doKeyDown","some","option","doClick","blurIntent","navigateList","highlightedItem","otherItem","indexOf","onItemFocus","element","add","tabIndex","onItemBlur","remove","emitScroll","customScrollEvent","atTop","srcElement","scrollTop","atBottom","scrollHeight","clientHeight","scroll","listCount","ViewChildren","ariaLabel","DROPDOWN_LIST","LABEL","listTpl","ScrollableList","ngOnChanges","changes","scrollEnabled","currentValue","overflow","scrollUpTarget","scrollDownTarget","canScrollUp","canScrollDown","updateScrollHeight","checkScrollArrows","height","clearInterval","hoverScrollInterval","nScrollableList","onHoverUp","onHoverDown","containerRect","innerHeightDiff","innerHeight","scrollUpHeight","offsetHeight","scrollDownHeight","parseInt","scrollTopMax","onWheel","deltaY","scrollBy","stopPropagation","onTouchStart","touches","lastTouch","clientY","onTouchMove","touch","hoverScrollBy","hovering","amount","setInterval","exportAs","NgModule","declarations","exports","imports","CommonModule","FormsModule","I18nModule","PlaceholderModule","UtilsModule","IconModule","DropdownModule"],"mappings":"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"}