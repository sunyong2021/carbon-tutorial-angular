/**
 *
 * carbon-angular v0.0.0 | context-menu.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, ElementRef, HostListener, Input } from "@angular/core";
var ContextMenuComponent = /** @class */ (function () {
    function ContextMenuComponent(elementRef) {
        this.elementRef = elementRef;
        this.root = true;
        this.open = false;
        this.position = {
            left: 0,
            top: 0
        };
    }
    ContextMenuComponent.prototype.ngOnChanges = function (changes) {
        if (changes.open && changes.open.currentValue) {
            this.focusMenu();
        }
    };
    ContextMenuComponent.prototype.focusMenu = function () {
        var _this = this;
        // wait until the next tick to let the DOM settle before changing the focus
        var list = this.elementRef.nativeElement.querySelector("ul");
        setTimeout(function () {
            if (_this.root) {
                list.focus();
            }
            else {
                var firstOption = list.querySelector(".bx--context-menu-option");
                firstOption.focus();
            }
        });
    };
    ContextMenuComponent.prototype.handleNavigation = function (event) {
        var list = this.elementRef.nativeElement.querySelector("ul");
        var subMenus = Array.from(list.querySelectorAll("ul[role=menu]"));
        var menuItems = Array.from(list.querySelectorAll(".bx--context-menu-option")).filter(function (menuItem) {
            return !subMenus.some(function (subMenu) { return subMenu.contains(menuItem); });
        });
        var currentIndex = menuItems.findIndex(function (menuItem) { return parseInt(menuItem.getAttribute("tabindex"), 10) === 0; });
        var currentMenuItem = menuItems[currentIndex];
        switch (event.key) {
            case "ArrowDown": {
                if (document.activeElement === list) {
                    menuItems[0].focus();
                }
                else {
                    if (currentIndex !== -1 && currentIndex < menuItems.length - 1) {
                        menuItems[currentIndex + 1].focus();
                    }
                }
                break;
            }
            case "ArrowUp": {
                if (document.activeElement === list) {
                    menuItems[menuItems.length - 1].focus();
                }
                else {
                    if (currentIndex !== -1 && currentIndex > 0) {
                        menuItems[currentIndex - 1].focus();
                    }
                }
                break;
            }
            case "ArrowRight": {
                if (currentIndex !== -1 && subMenus.some(function (subMenu) { return currentMenuItem.contains(subMenu); })) {
                    currentMenuItem.click();
                }
                break;
            }
            case "ArrowLeft": {
                var parent_1 = currentMenuItem.parentElement.closest(".bx--context-menu-option");
                if (parent_1) {
                    parent_1.focus();
                }
                break;
            }
        }
    };
    ContextMenuComponent.prototype.getDimensions = function () {
        var element = this.elementRef.nativeElement.querySelector("ul");
        return element.getBoundingClientRect();
    };
    ContextMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: "ibm-context-menu",
                    template: "\n\t\t<ul\n\t\t\tclass=\"bx--context-menu\"\n\t\t\t[ngClass]=\"{\n\t\t\t\t'bx--context-menu--root': root,\n\t\t\t\t'bx--context-menu--open': open\n\t\t\t}\"\n\t\t\trole=\"menu\"\n\t\t\ttabindex=\"-1\"\n\t\t\t[ngStyle]=\"{\n\t\t\t\t'left.px': position.left,\n\t\t\t\t'top.px': position.top\n\t\t\t}\">\n\t\t\t<ng-content></ng-content>\n\t\t</ul>\n\t"
                }] }
    ];
    /** @nocollapse */
    ContextMenuComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ContextMenuComponent.propDecorators = {
        root: [{ type: Input }],
        open: [{ type: Input }],
        position: [{ type: Input }],
        handleNavigation: [{ type: HostListener, args: ["keydown", ["$event"],] }]
    };
    return ContextMenuComponent;
}());
export { ContextMenuComponent };
//# sourceMappingURL=data:application/json;base64,