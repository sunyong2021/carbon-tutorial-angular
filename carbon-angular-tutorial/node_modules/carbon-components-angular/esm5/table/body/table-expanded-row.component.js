/**
 *
 * carbon-angular v0.0.0 | table-expanded-row.component.js
 *
 * Copyright 2014, 2021 IBM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import { Component, HostBinding, Input } from "@angular/core";
var TableExpandedRow = /** @class */ (function () {
    function TableExpandedRow() {
        this.skeleton = false;
        this.expandableRowClass = true;
        this.dataChildRow = true;
        this.expanded = false;
    }
    Object.defineProperty(TableExpandedRow.prototype, "displayStyle", {
        get: function () {
            return this.expanded ? null : "none";
        },
        enumerable: true,
        configurable: true
    });
    TableExpandedRow.prototype.firstExpandedTemplateInRow = function (row) {
        var found = row.find(function (d) { return d.expandedTemplate; });
        if (found) {
            return found.expandedTemplate;
        }
        return found;
    };
    TableExpandedRow.prototype.firstExpandedDataInRow = function (row) {
        var found = row.find(function (d) { return d.expandedData; });
        if (found) {
            return found.expandedData;
        }
        return found;
    };
    TableExpandedRow.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: "[ibmTableExpandedRow]",
                    template: "\n\t\t<td [attr.colspan]=\"row.length + 2\">\n\t\t\t<ng-container *ngIf=\"!firstExpandedTemplateInRow(row)\">\n\t\t\t\t{{firstExpandedDataInRow(row)}}\n\t\t\t</ng-container>\n\t\t\t<ng-template\n\t\t\t\t[ngTemplateOutlet]=\"firstExpandedTemplateInRow(row)\"\n\t\t\t\t[ngTemplateOutletContext]=\"{data: firstExpandedDataInRow(row)}\">\n\t\t\t</ng-template>\n\t\t</td>\n\t"
                }] }
    ];
    TableExpandedRow.propDecorators = {
        row: [{ type: Input }],
        skeleton: [{ type: Input }],
        expandableRowClass: [{ type: HostBinding, args: ["class.bx--expandable-row",] }],
        dataChildRow: [{ type: HostBinding, args: ["attr.data-child-row",] }],
        expanded: [{ type: Input }],
        displayStyle: [{ type: HostBinding, args: ["style.display",] }]
    };
    return TableExpandedRow;
}());
export { TableExpandedRow };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtZXhwYW5kZWQtcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2NhcmJvbi1jb21wb25lbnRzLWFuZ3VsYXIvdGFibGUvIiwic291cmNlcyI6WyJib2R5L3RhYmxlLWV4cGFuZGVkLXJvdy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNOLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE1BQU0sZUFBZSxDQUFDO0FBRXZCO0lBQUE7UUFrQlUsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUVlLHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUUvQixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUUvQyxhQUFRLEdBQUcsS0FBSyxDQUFDO0lBcUIzQixDQUFDO0lBbkJBLHNCQUFrQywwQ0FBWTthQUE5QztZQUNDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7UUFDdEMsQ0FBQzs7O09BQUE7SUFFRCxxREFBMEIsR0FBMUIsVUFBMkIsR0FBRztRQUM3QixJQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxDQUFDLGdCQUFnQixFQUFsQixDQUFrQixDQUFDLENBQUM7UUFDaEQsSUFBSSxLQUFLLEVBQUU7WUFDVixPQUFPLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQztTQUM5QjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2QsQ0FBQztJQUVELGlEQUFzQixHQUF0QixVQUF1QixHQUFHO1FBQ3pCLElBQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLENBQUMsWUFBWSxFQUFkLENBQWMsQ0FBQyxDQUFDO1FBQzVDLElBQUksS0FBSyxFQUFFO1lBQ1YsT0FBTyxLQUFLLENBQUMsWUFBWSxDQUFDO1NBQzFCO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDOztnQkE1Q0QsU0FBUyxTQUFDO29CQUNWLCtDQUErQztvQkFDL0MsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsUUFBUSxFQUFFLG9YQVVUO2lCQUNEOzs7c0JBRUMsS0FBSzsyQkFFTCxLQUFLO3FDQUVMLFdBQVcsU0FBQywwQkFBMEI7K0JBRXRDLFdBQVcsU0FBQyxxQkFBcUI7MkJBRWpDLEtBQUs7K0JBRUwsV0FBVyxTQUFDLGVBQWU7O0lBbUI3Qix1QkFBQztDQUFBLEFBN0NELElBNkNDO1NBOUJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdENvbXBvbmVudCxcblx0SG9zdEJpbmRpbmcsXG5cdElucHV0XG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuXHQvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuXHRzZWxlY3RvcjogXCJbaWJtVGFibGVFeHBhbmRlZFJvd11cIixcblx0dGVtcGxhdGU6IGBcblx0XHQ8dGQgW2F0dHIuY29sc3Bhbl09XCJyb3cubGVuZ3RoICsgMlwiPlxuXHRcdFx0PG5nLWNvbnRhaW5lciAqbmdJZj1cIiFmaXJzdEV4cGFuZGVkVGVtcGxhdGVJblJvdyhyb3cpXCI+XG5cdFx0XHRcdHt7Zmlyc3RFeHBhbmRlZERhdGFJblJvdyhyb3cpfX1cblx0XHRcdDwvbmctY29udGFpbmVyPlxuXHRcdFx0PG5nLXRlbXBsYXRlXG5cdFx0XHRcdFtuZ1RlbXBsYXRlT3V0bGV0XT1cImZpcnN0RXhwYW5kZWRUZW1wbGF0ZUluUm93KHJvdylcIlxuXHRcdFx0XHRbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwie2RhdGE6IGZpcnN0RXhwYW5kZWREYXRhSW5Sb3cocm93KX1cIj5cblx0XHRcdDwvbmctdGVtcGxhdGU+XG5cdFx0PC90ZD5cblx0YFxufSlcbmV4cG9ydCBjbGFzcyBUYWJsZUV4cGFuZGVkUm93IHtcblx0QElucHV0KCkgcm93OiBhbnlbXTtcblxuXHRASW5wdXQoKSBza2VsZXRvbiA9IGZhbHNlO1xuXG5cdEBIb3N0QmluZGluZyhcImNsYXNzLmJ4LS1leHBhbmRhYmxlLXJvd1wiKSBleHBhbmRhYmxlUm93Q2xhc3MgPSB0cnVlO1xuXG5cdEBIb3N0QmluZGluZyhcImF0dHIuZGF0YS1jaGlsZC1yb3dcIikgZGF0YUNoaWxkUm93ID0gdHJ1ZTtcblxuXHRASW5wdXQoKSBleHBhbmRlZCA9IGZhbHNlO1xuXG5cdEBIb3N0QmluZGluZyhcInN0eWxlLmRpc3BsYXlcIikgZ2V0IGRpc3BsYXlTdHlsZSgpIHtcblx0XHRyZXR1cm4gdGhpcy5leHBhbmRlZCA/IG51bGwgOiBcIm5vbmVcIjtcblx0fVxuXG5cdGZpcnN0RXhwYW5kZWRUZW1wbGF0ZUluUm93KHJvdykge1xuXHRcdGNvbnN0IGZvdW5kID0gcm93LmZpbmQoZCA9PiBkLmV4cGFuZGVkVGVtcGxhdGUpO1xuXHRcdGlmIChmb3VuZCkge1xuXHRcdFx0cmV0dXJuIGZvdW5kLmV4cGFuZGVkVGVtcGxhdGU7XG5cdFx0fVxuXHRcdHJldHVybiBmb3VuZDtcblx0fVxuXG5cdGZpcnN0RXhwYW5kZWREYXRhSW5Sb3cocm93KSB7XG5cdFx0Y29uc3QgZm91bmQgPSByb3cuZmluZChkID0+IGQuZXhwYW5kZWREYXRhKTtcblx0XHRpZiAoZm91bmQpIHtcblx0XHRcdHJldHVybiBmb3VuZC5leHBhbmRlZERhdGE7XG5cdFx0fVxuXHRcdHJldHVybiBmb3VuZDtcblx0fVxufVxuIl19